//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.0
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.0 版自动生成。
// 
#pragma warning disable 1591

namespace EMR.gjtEmrPatients {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="emrPatientsSoap", Namespace="http://shoujia.org/emrpatients")]
    public partial class emrPatients : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ValuateNowPSSelectKsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateEndPSSelectKsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateEndPSSelectExOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuatePSSelectExOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateNowPSSelectQyOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAndInsertValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateEndPSSelectQyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateNowPSSelectHzOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateEndPSSelectHzOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateNowPSSelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateNowPSSelectQOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateNowPjLOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelValuateNowOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelValuateEndOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValuateNowYsmOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoneTimeForTransferInOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoneTimeForTransferOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoneTimeForTakeOverOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoneTimeForConsultQTOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoneTimeForConsultOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoneTimeForConsultExOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemindConsultExOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemindConsultExDgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetoperatorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FinishConsultNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFinishConsultationListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFinishConsultationListQCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFinishConsultationListQCNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQCTableByMonthOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQCTableByMonthNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback InSertValueOffOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQCTableByMonthEndOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQCTableByMonthEndNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsInHospitalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDoctorListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDoctorListDgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDoctorListByDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDoctorListByDepartmentAndTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentByDoctorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIdentificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateIdentificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDescOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIdentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientClinicIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnConsultNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperatorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpInfOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsGuideDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientInfZYOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientInfOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCPatientInfOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentListByModeDSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientListByEmrstatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewMedicalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMedicalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMedicalDataExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQCTableByMonthStatistics_PersonalEndOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQCTableByMonthStatisticsEndOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPatientListExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientListByEmrstatusExOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsDischargedExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDoctorLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommposePatientListExOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateNowExOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateNowISSHOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateEndIsCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateNowBAPSBZOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateNowBAPSBZNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateEndCheckInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateNowSHOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateEndSHOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateEndCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateNowPSHisOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateNowPSOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateEndPsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoctorNameListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoctorListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoctorListEmrOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoctorListExOperationCompleted;
        
        private System.Threading.SendOrPostCallback LevelExOperationCompleted;
        
        private System.Threading.SendOrPostCallback OperatorTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDoctorTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientListOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientListExExOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientListExExExOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoneTimeForConsultExExOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientListExOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientListErOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientListEx1OperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientListExAOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientListExConsultOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientListFromRegistryIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPatientListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPatientListJHOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommposePatientListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupOwnerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperatorNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperatorNameBqOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperatorName1OperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticChekOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentListByModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAreaCodeOfDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAreasOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTestsAndExamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDoctorOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDoctorOrdersExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDoctorOrdersDischargedExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDoctorOrdersDischargedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConnectHisdbOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsDischargedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByzyrqOperationCompleted;
        
        private System.Threading.SendOrPostCallback BycyrqOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHospitalNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNameAndArchiveNumberForInpatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsNurseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStartTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDiagnosePreOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DegreeOrderTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LastStratTimeForDegreeOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoneTimeForOperationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoneTimeForRescuesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public emrPatients() {
            this.Url = global::EMR.Properties.Settings.Default.EMR_gjtEmrPatients_emrPatients;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ValuateNowPSSelectKsCompletedEventHandler ValuateNowPSSelectKsCompleted;
        
        /// <remarks/>
        public event ValuateEndPSSelectKsCompletedEventHandler ValuateEndPSSelectKsCompleted;
        
        /// <remarks/>
        public event ValuateEndPSSelectExCompletedEventHandler ValuateEndPSSelectExCompleted;
        
        /// <remarks/>
        public event ValuatePSSelectExCompletedEventHandler ValuatePSSelectExCompleted;
        
        /// <remarks/>
        public event ValuateNowPSSelectQyCompletedEventHandler ValuateNowPSSelectQyCompleted;
        
        /// <remarks/>
        public event DeleteAndInsertValueCompletedEventHandler DeleteAndInsertValueCompleted;
        
        /// <remarks/>
        public event ValuateEndPSSelectQyCompletedEventHandler ValuateEndPSSelectQyCompleted;
        
        /// <remarks/>
        public event ValuateNowPSSelectHzCompletedEventHandler ValuateNowPSSelectHzCompleted;
        
        /// <remarks/>
        public event ValuateEndPSSelectHzCompletedEventHandler ValuateEndPSSelectHzCompleted;
        
        /// <remarks/>
        public event ValuateNowPSSelectCompletedEventHandler ValuateNowPSSelectCompleted;
        
        /// <remarks/>
        public event ValuateNowPSSelectQCompletedEventHandler ValuateNowPSSelectQCompleted;
        
        /// <remarks/>
        public event ValuateNowPjLCompletedEventHandler ValuateNowPjLCompleted;
        
        /// <remarks/>
        public event DelValuateNowCompletedEventHandler DelValuateNowCompleted;
        
        /// <remarks/>
        public event DelValuateEndCompletedEventHandler DelValuateEndCompleted;
        
        /// <remarks/>
        public event GetValuateNowYsmCompletedEventHandler GetValuateNowYsmCompleted;
        
        /// <remarks/>
        public event DoneTimeForTransferInCompletedEventHandler DoneTimeForTransferInCompleted;
        
        /// <remarks/>
        public event DoneTimeForTransferOutCompletedEventHandler DoneTimeForTransferOutCompleted;
        
        /// <remarks/>
        public event DoneTimeForTakeOverCompletedEventHandler DoneTimeForTakeOverCompleted;
        
        /// <remarks/>
        public event DoneTimeForConsultQTCompletedEventHandler DoneTimeForConsultQTCompleted;
        
        /// <remarks/>
        public event DoneTimeForConsultCompletedEventHandler DoneTimeForConsultCompleted;
        
        /// <remarks/>
        public event DoneTimeForConsultExCompletedEventHandler DoneTimeForConsultExCompleted;
        
        /// <remarks/>
        public event RemindConsultExCompletedEventHandler RemindConsultExCompleted;
        
        /// <remarks/>
        public event RemindConsultExDgCompletedEventHandler RemindConsultExDgCompleted;
        
        /// <remarks/>
        public event GetoperatorsCompletedEventHandler GetoperatorsCompleted;
        
        /// <remarks/>
        public event FinishConsultNoteCompletedEventHandler FinishConsultNoteCompleted;
        
        /// <remarks/>
        public event GetFinishConsultationListCompletedEventHandler GetFinishConsultationListCompleted;
        
        /// <remarks/>
        public event GetFinishConsultationListQCCompletedEventHandler GetFinishConsultationListQCCompleted;
        
        /// <remarks/>
        public event GetFinishConsultationListQCNewCompletedEventHandler GetFinishConsultationListQCNewCompleted;
        
        /// <remarks/>
        public event GetQCTableByMonthCompletedEventHandler GetQCTableByMonthCompleted;
        
        /// <remarks/>
        public event GetQCTableByMonthNewCompletedEventHandler GetQCTableByMonthNewCompleted;
        
        /// <remarks/>
        public event InSertValueOffCompletedEventHandler InSertValueOffCompleted;
        
        /// <remarks/>
        public event GetQCTableByMonthEndCompletedEventHandler GetQCTableByMonthEndCompleted;
        
        /// <remarks/>
        public event GetQCTableByMonthEndNewCompletedEventHandler GetQCTableByMonthEndNewCompleted;
        
        /// <remarks/>
        public event IsInHospitalCompletedEventHandler IsInHospitalCompleted;
        
        /// <remarks/>
        public event GetDepartmentListCompletedEventHandler GetDepartmentListCompleted;
        
        /// <remarks/>
        public event GetDoctorListCompletedEventHandler GetDoctorListCompleted;
        
        /// <remarks/>
        public event GetDoctorListDgCompletedEventHandler GetDoctorListDgCompleted;
        
        /// <remarks/>
        public event GetDoctorListByDepartmentCompletedEventHandler GetDoctorListByDepartmentCompleted;
        
        /// <remarks/>
        public event GetDoctorListByDepartmentAndTitleCompletedEventHandler GetDoctorListByDepartmentAndTitleCompleted;
        
        /// <remarks/>
        public event GetDepartmentByDoctorCompletedEventHandler GetDepartmentByDoctorCompleted;
        
        /// <remarks/>
        public event GetIdentificationCompletedEventHandler GetIdentificationCompleted;
        
        /// <remarks/>
        public event GetDescriptionCompletedEventHandler GetDescriptionCompleted;
        
        /// <remarks/>
        public event UpdateIdentificationCompletedEventHandler UpdateIdentificationCompleted;
        
        /// <remarks/>
        public event GetDescCompletedEventHandler GetDescCompleted;
        
        /// <remarks/>
        public event GetIdentsCompletedEventHandler GetIdentsCompleted;
        
        /// <remarks/>
        public event UpdateDescriptionCompletedEventHandler UpdateDescriptionCompleted;
        
        /// <remarks/>
        public event GetPatientClinicIDCompletedEventHandler GetPatientClinicIDCompleted;
        
        /// <remarks/>
        public event ReturnConsultNoteCompletedEventHandler ReturnConsultNoteCompleted;
        
        /// <remarks/>
        public event UpdateOperatorsCompletedEventHandler UpdateOperatorsCompleted;
        
        /// <remarks/>
        public event GetOpInfCompletedEventHandler GetOpInfCompleted;
        
        /// <remarks/>
        public event IsGuideDCompletedEventHandler IsGuideDCompleted;
        
        /// <remarks/>
        public event GetPatientInfZYCompletedEventHandler GetPatientInfZYCompleted;
        
        /// <remarks/>
        public event GetPatientInfCompletedEventHandler GetPatientInfCompleted;
        
        /// <remarks/>
        public event GetCPatientInfCompletedEventHandler GetCPatientInfCompleted;
        
        /// <remarks/>
        public event GetDepartmentListByModeDSCompletedEventHandler GetDepartmentListByModeDSCompleted;
        
        /// <remarks/>
        public event GetPatientListByEmrstatusCompletedEventHandler GetPatientListByEmrstatusCompleted;
        
        /// <remarks/>
        public event GetNewMedicalDataCompletedEventHandler GetNewMedicalDataCompleted;
        
        /// <remarks/>
        public event GetMedicalDataCompletedEventHandler GetMedicalDataCompleted;
        
        /// <remarks/>
        public event GetMedicalDataExCompletedEventHandler GetMedicalDataExCompleted;
        
        /// <remarks/>
        public event GetQCTableByMonthStatistics_PersonalEndCompletedEventHandler GetQCTableByMonthStatistics_PersonalEndCompleted;
        
        /// <remarks/>
        public event GetQCTableByMonthStatisticsEndCompletedEventHandler GetQCTableByMonthStatisticsEndCompleted;
        
        /// <remarks/>
        public event QueryPatientListExCompletedEventHandler QueryPatientListExCompleted;
        
        /// <remarks/>
        public event GetPatientListByEmrstatusExCompletedEventHandler GetPatientListByEmrstatusExCompleted;
        
        /// <remarks/>
        public event IsDischargedExCompletedEventHandler IsDischargedExCompleted;
        
        /// <remarks/>
        public event GetDoctorLevelCompletedEventHandler GetDoctorLevelCompleted;
        
        /// <remarks/>
        public event CommposePatientListExCompletedEventHandler CommposePatientListExCompleted;
        
        /// <remarks/>
        public event ValuateNowExCompletedEventHandler ValuateNowExCompleted;
        
        /// <remarks/>
        public event ValuateNowISSHCompletedEventHandler ValuateNowISSHCompleted;
        
        /// <remarks/>
        public event ValuateEndIsCheckCompletedEventHandler ValuateEndIsCheckCompleted;
        
        /// <remarks/>
        public event ValuateNowBAPSBZCompletedEventHandler ValuateNowBAPSBZCompleted;
        
        /// <remarks/>
        public event ValuateNowBAPSBZNewCompletedEventHandler ValuateNowBAPSBZNewCompleted;
        
        /// <remarks/>
        public event ValuateEndCheckInfoCompletedEventHandler ValuateEndCheckInfoCompleted;
        
        /// <remarks/>
        public event ValuateNowSHCompletedEventHandler ValuateNowSHCompleted;
        
        /// <remarks/>
        public event ValuateEndSHCompletedEventHandler ValuateEndSHCompleted;
        
        /// <remarks/>
        public event ValuateEndCheckCompletedEventHandler ValuateEndCheckCompleted;
        
        /// <remarks/>
        public event ValuateNowPSHisCompletedEventHandler ValuateNowPSHisCompleted;
        
        /// <remarks/>
        public event ValuateNowPSCompletedEventHandler ValuateNowPSCompleted;
        
        /// <remarks/>
        public event ValuateEndPsCompletedEventHandler ValuateEndPsCompleted;
        
        /// <remarks/>
        public event DoctorNameListCompletedEventHandler DoctorNameListCompleted;
        
        /// <remarks/>
        public event DoctorListCompletedEventHandler DoctorListCompleted;
        
        /// <remarks/>
        public event DoctorListEmrCompletedEventHandler DoctorListEmrCompleted;
        
        /// <remarks/>
        public event DoctorListExCompletedEventHandler DoctorListExCompleted;
        
        /// <remarks/>
        public event LevelExCompletedEventHandler LevelExCompleted;
        
        /// <remarks/>
        public event OperatorTypeCompletedEventHandler OperatorTypeCompleted;
        
        /// <remarks/>
        public event GetDoctorTypeCompletedEventHandler GetDoctorTypeCompleted;
        
        /// <remarks/>
        public event PatientListCompletedEventHandler PatientListCompleted;
        
        /// <remarks/>
        public event PatientListExExCompletedEventHandler PatientListExExCompleted;
        
        /// <remarks/>
        public event PatientListExExExCompletedEventHandler PatientListExExExCompleted;
        
        /// <remarks/>
        public event DoneTimeForConsultExExCompletedEventHandler DoneTimeForConsultExExCompleted;
        
        /// <remarks/>
        public event PatientListExCompletedEventHandler PatientListExCompleted;
        
        /// <remarks/>
        public event PatientListErCompletedEventHandler PatientListErCompleted;
        
        /// <remarks/>
        public event PatientListEx1CompletedEventHandler PatientListEx1Completed;
        
        /// <remarks/>
        public event PatientListExACompletedEventHandler PatientListExACompleted;
        
        /// <remarks/>
        public event PatientListExConsultCompletedEventHandler PatientListExConsultCompleted;
        
        /// <remarks/>
        public event PatientListFromRegistryIDsCompletedEventHandler PatientListFromRegistryIDsCompleted;
        
        /// <remarks/>
        public event QueryPatientListCompletedEventHandler QueryPatientListCompleted;
        
        /// <remarks/>
        public event QueryPatientListJHCompletedEventHandler QueryPatientListJHCompleted;
        
        /// <remarks/>
        public event CommposePatientListCompletedEventHandler CommposePatientListCompleted;
        
        /// <remarks/>
        public event GetGroupOwnerCompletedEventHandler GetGroupOwnerCompleted;
        
        /// <remarks/>
        public event GetOperatorNameCompletedEventHandler GetOperatorNameCompleted;
        
        /// <remarks/>
        public event GetOperatorNameBqCompletedEventHandler GetOperatorNameBqCompleted;
        
        /// <remarks/>
        public event GetOperatorName1CompletedEventHandler GetOperatorName1Completed;
        
        /// <remarks/>
        public event AuthenticChekCompletedEventHandler AuthenticChekCompleted;
        
        /// <remarks/>
        public event GetDepartmentListByModeCompletedEventHandler GetDepartmentListByModeCompleted;
        
        /// <remarks/>
        public event GetAreaCodeOfDepartmentCompletedEventHandler GetAreaCodeOfDepartmentCompleted;
        
        /// <remarks/>
        public event GetDepartmentNameCompletedEventHandler GetDepartmentNameCompleted;
        
        /// <remarks/>
        public event GetAreasCompletedEventHandler GetAreasCompleted;
        
        /// <remarks/>
        public event GetTestsAndExamsCompletedEventHandler GetTestsAndExamsCompleted;
        
        /// <remarks/>
        public event GetDoctorOrdersCompletedEventHandler GetDoctorOrdersCompleted;
        
        /// <remarks/>
        public event GetDoctorOrdersExCompletedEventHandler GetDoctorOrdersExCompleted;
        
        /// <remarks/>
        public event GetDoctorOrdersDischargedExCompletedEventHandler GetDoctorOrdersDischargedExCompleted;
        
        /// <remarks/>
        public event GetDoctorOrdersDischargedCompletedEventHandler GetDoctorOrdersDischargedCompleted;
        
        /// <remarks/>
        public event ConnectHisdbCompletedEventHandler ConnectHisdbCompleted;
        
        /// <remarks/>
        public event IsDischargedCompletedEventHandler IsDischargedCompleted;
        
        /// <remarks/>
        public event ByzyrqCompletedEventHandler ByzyrqCompleted;
        
        /// <remarks/>
        public event BycyrqCompletedEventHandler BycyrqCompleted;
        
        /// <remarks/>
        public event GetHospitalNameCompletedEventHandler GetHospitalNameCompleted;
        
        /// <remarks/>
        public event GetNameAndArchiveNumberForInpatientCompletedEventHandler GetNameAndArchiveNumberForInpatientCompleted;
        
        /// <remarks/>
        public event IsNurseCompletedEventHandler IsNurseCompleted;
        
        /// <remarks/>
        public event GetStartTimeCompletedEventHandler GetStartTimeCompleted;
        
        /// <remarks/>
        public event GetDiagnosePreOperationCompletedEventHandler GetDiagnosePreOperationCompleted;
        
        /// <remarks/>
        public event DegreeOrderTimeCompletedEventHandler DegreeOrderTimeCompleted;
        
        /// <remarks/>
        public event LastStratTimeForDegreeOrderCompletedEventHandler LastStratTimeForDegreeOrderCompleted;
        
        /// <remarks/>
        public event DoneTimeForOperationsCompletedEventHandler DoneTimeForOperationsCompleted;
        
        /// <remarks/>
        public event DoneTimeForRescuesCompletedEventHandler DoneTimeForRescuesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateNowPSSelectKs", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValuateNowPSSelectKs(string item1, string item2, string departID) {
            object[] results = this.Invoke("ValuateNowPSSelectKs", new object[] {
                        item1,
                        item2,
                        departID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateNowPSSelectKsAsync(string item1, string item2, string departID) {
            this.ValuateNowPSSelectKsAsync(item1, item2, departID, null);
        }
        
        /// <remarks/>
        public void ValuateNowPSSelectKsAsync(string item1, string item2, string departID, object userState) {
            if ((this.ValuateNowPSSelectKsOperationCompleted == null)) {
                this.ValuateNowPSSelectKsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateNowPSSelectKsOperationCompleted);
            }
            this.InvokeAsync("ValuateNowPSSelectKs", new object[] {
                        item1,
                        item2,
                        departID}, this.ValuateNowPSSelectKsOperationCompleted, userState);
        }
        
        private void OnValuateNowPSSelectKsOperationCompleted(object arg) {
            if ((this.ValuateNowPSSelectKsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateNowPSSelectKsCompleted(this, new ValuateNowPSSelectKsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateEndPSSelectKs", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValuateEndPSSelectKs(string item1, string item2, string departID) {
            object[] results = this.Invoke("ValuateEndPSSelectKs", new object[] {
                        item1,
                        item2,
                        departID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateEndPSSelectKsAsync(string item1, string item2, string departID) {
            this.ValuateEndPSSelectKsAsync(item1, item2, departID, null);
        }
        
        /// <remarks/>
        public void ValuateEndPSSelectKsAsync(string item1, string item2, string departID, object userState) {
            if ((this.ValuateEndPSSelectKsOperationCompleted == null)) {
                this.ValuateEndPSSelectKsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateEndPSSelectKsOperationCompleted);
            }
            this.InvokeAsync("ValuateEndPSSelectKs", new object[] {
                        item1,
                        item2,
                        departID}, this.ValuateEndPSSelectKsOperationCompleted, userState);
        }
        
        private void OnValuateEndPSSelectKsOperationCompleted(object arg) {
            if ((this.ValuateEndPSSelectKsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateEndPSSelectKsCompleted(this, new ValuateEndPSSelectKsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateEndPSSelectEx", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValuateEndPSSelectEx(string startTime, string endTime, string departID, string doctor, string level, string title) {
            object[] results = this.Invoke("ValuateEndPSSelectEx", new object[] {
                        startTime,
                        endTime,
                        departID,
                        doctor,
                        level,
                        title});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateEndPSSelectExAsync(string startTime, string endTime, string departID, string doctor, string level, string title) {
            this.ValuateEndPSSelectExAsync(startTime, endTime, departID, doctor, level, title, null);
        }
        
        /// <remarks/>
        public void ValuateEndPSSelectExAsync(string startTime, string endTime, string departID, string doctor, string level, string title, object userState) {
            if ((this.ValuateEndPSSelectExOperationCompleted == null)) {
                this.ValuateEndPSSelectExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateEndPSSelectExOperationCompleted);
            }
            this.InvokeAsync("ValuateEndPSSelectEx", new object[] {
                        startTime,
                        endTime,
                        departID,
                        doctor,
                        level,
                        title}, this.ValuateEndPSSelectExOperationCompleted, userState);
        }
        
        private void OnValuateEndPSSelectExOperationCompleted(object arg) {
            if ((this.ValuateEndPSSelectExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateEndPSSelectExCompleted(this, new ValuateEndPSSelectExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuatePSSelectEx", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValuatePSSelectEx(string startTime, string endTime, string departID, string doctor, string level, string title) {
            object[] results = this.Invoke("ValuatePSSelectEx", new object[] {
                        startTime,
                        endTime,
                        departID,
                        doctor,
                        level,
                        title});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ValuatePSSelectExAsync(string startTime, string endTime, string departID, string doctor, string level, string title) {
            this.ValuatePSSelectExAsync(startTime, endTime, departID, doctor, level, title, null);
        }
        
        /// <remarks/>
        public void ValuatePSSelectExAsync(string startTime, string endTime, string departID, string doctor, string level, string title, object userState) {
            if ((this.ValuatePSSelectExOperationCompleted == null)) {
                this.ValuatePSSelectExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuatePSSelectExOperationCompleted);
            }
            this.InvokeAsync("ValuatePSSelectEx", new object[] {
                        startTime,
                        endTime,
                        departID,
                        doctor,
                        level,
                        title}, this.ValuatePSSelectExOperationCompleted, userState);
        }
        
        private void OnValuatePSSelectExOperationCompleted(object arg) {
            if ((this.ValuatePSSelectExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuatePSSelectExCompleted(this, new ValuatePSSelectExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateNowPSSelectQy", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValuateNowPSSelectQy(string item1, string item2) {
            object[] results = this.Invoke("ValuateNowPSSelectQy", new object[] {
                        item1,
                        item2});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateNowPSSelectQyAsync(string item1, string item2) {
            this.ValuateNowPSSelectQyAsync(item1, item2, null);
        }
        
        /// <remarks/>
        public void ValuateNowPSSelectQyAsync(string item1, string item2, object userState) {
            if ((this.ValuateNowPSSelectQyOperationCompleted == null)) {
                this.ValuateNowPSSelectQyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateNowPSSelectQyOperationCompleted);
            }
            this.InvokeAsync("ValuateNowPSSelectQy", new object[] {
                        item1,
                        item2}, this.ValuateNowPSSelectQyOperationCompleted, userState);
        }
        
        private void OnValuateNowPSSelectQyOperationCompleted(object arg) {
            if ((this.ValuateNowPSSelectQyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateNowPSSelectQyCompleted(this, new ValuateNowPSSelectQyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/DeleteAndInsertValue", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteAndInsertValue(System.Xml.XmlNode xmg) {
            object[] results = this.Invoke("DeleteAndInsertValue", new object[] {
                        xmg});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAndInsertValueAsync(System.Xml.XmlNode xmg) {
            this.DeleteAndInsertValueAsync(xmg, null);
        }
        
        /// <remarks/>
        public void DeleteAndInsertValueAsync(System.Xml.XmlNode xmg, object userState) {
            if ((this.DeleteAndInsertValueOperationCompleted == null)) {
                this.DeleteAndInsertValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAndInsertValueOperationCompleted);
            }
            this.InvokeAsync("DeleteAndInsertValue", new object[] {
                        xmg}, this.DeleteAndInsertValueOperationCompleted, userState);
        }
        
        private void OnDeleteAndInsertValueOperationCompleted(object arg) {
            if ((this.DeleteAndInsertValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAndInsertValueCompleted(this, new DeleteAndInsertValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateEndPSSelectQy", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValuateEndPSSelectQy(string item1, string item2) {
            object[] results = this.Invoke("ValuateEndPSSelectQy", new object[] {
                        item1,
                        item2});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateEndPSSelectQyAsync(string item1, string item2) {
            this.ValuateEndPSSelectQyAsync(item1, item2, null);
        }
        
        /// <remarks/>
        public void ValuateEndPSSelectQyAsync(string item1, string item2, object userState) {
            if ((this.ValuateEndPSSelectQyOperationCompleted == null)) {
                this.ValuateEndPSSelectQyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateEndPSSelectQyOperationCompleted);
            }
            this.InvokeAsync("ValuateEndPSSelectQy", new object[] {
                        item1,
                        item2}, this.ValuateEndPSSelectQyOperationCompleted, userState);
        }
        
        private void OnValuateEndPSSelectQyOperationCompleted(object arg) {
            if ((this.ValuateEndPSSelectQyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateEndPSSelectQyCompleted(this, new ValuateEndPSSelectQyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateNowPSSelectHz", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValuateNowPSSelectHz(string item1, string item2) {
            object[] results = this.Invoke("ValuateNowPSSelectHz", new object[] {
                        item1,
                        item2});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateNowPSSelectHzAsync(string item1, string item2) {
            this.ValuateNowPSSelectHzAsync(item1, item2, null);
        }
        
        /// <remarks/>
        public void ValuateNowPSSelectHzAsync(string item1, string item2, object userState) {
            if ((this.ValuateNowPSSelectHzOperationCompleted == null)) {
                this.ValuateNowPSSelectHzOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateNowPSSelectHzOperationCompleted);
            }
            this.InvokeAsync("ValuateNowPSSelectHz", new object[] {
                        item1,
                        item2}, this.ValuateNowPSSelectHzOperationCompleted, userState);
        }
        
        private void OnValuateNowPSSelectHzOperationCompleted(object arg) {
            if ((this.ValuateNowPSSelectHzCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateNowPSSelectHzCompleted(this, new ValuateNowPSSelectHzCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateEndPSSelectHz", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValuateEndPSSelectHz(string item1, string item2) {
            object[] results = this.Invoke("ValuateEndPSSelectHz", new object[] {
                        item1,
                        item2});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateEndPSSelectHzAsync(string item1, string item2) {
            this.ValuateEndPSSelectHzAsync(item1, item2, null);
        }
        
        /// <remarks/>
        public void ValuateEndPSSelectHzAsync(string item1, string item2, object userState) {
            if ((this.ValuateEndPSSelectHzOperationCompleted == null)) {
                this.ValuateEndPSSelectHzOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateEndPSSelectHzOperationCompleted);
            }
            this.InvokeAsync("ValuateEndPSSelectHz", new object[] {
                        item1,
                        item2}, this.ValuateEndPSSelectHzOperationCompleted, userState);
        }
        
        private void OnValuateEndPSSelectHzOperationCompleted(object arg) {
            if ((this.ValuateEndPSSelectHzCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateEndPSSelectHzCompleted(this, new ValuateEndPSSelectHzCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateNowPSSelect", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValuateNowPSSelect(string item1, string item2, string departID) {
            object[] results = this.Invoke("ValuateNowPSSelect", new object[] {
                        item1,
                        item2,
                        departID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateNowPSSelectAsync(string item1, string item2, string departID) {
            this.ValuateNowPSSelectAsync(item1, item2, departID, null);
        }
        
        /// <remarks/>
        public void ValuateNowPSSelectAsync(string item1, string item2, string departID, object userState) {
            if ((this.ValuateNowPSSelectOperationCompleted == null)) {
                this.ValuateNowPSSelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateNowPSSelectOperationCompleted);
            }
            this.InvokeAsync("ValuateNowPSSelect", new object[] {
                        item1,
                        item2,
                        departID}, this.ValuateNowPSSelectOperationCompleted, userState);
        }
        
        private void OnValuateNowPSSelectOperationCompleted(object arg) {
            if ((this.ValuateNowPSSelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateNowPSSelectCompleted(this, new ValuateNowPSSelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateNowPSSelectQ", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValuateNowPSSelectQ(string item1, string item2) {
            object[] results = this.Invoke("ValuateNowPSSelectQ", new object[] {
                        item1,
                        item2});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateNowPSSelectQAsync(string item1, string item2) {
            this.ValuateNowPSSelectQAsync(item1, item2, null);
        }
        
        /// <remarks/>
        public void ValuateNowPSSelectQAsync(string item1, string item2, object userState) {
            if ((this.ValuateNowPSSelectQOperationCompleted == null)) {
                this.ValuateNowPSSelectQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateNowPSSelectQOperationCompleted);
            }
            this.InvokeAsync("ValuateNowPSSelectQ", new object[] {
                        item1,
                        item2}, this.ValuateNowPSSelectQOperationCompleted, userState);
        }
        
        private void OnValuateNowPSSelectQOperationCompleted(object arg) {
            if ((this.ValuateNowPSSelectQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateNowPSSelectQCompleted(this, new ValuateNowPSSelectQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateNowPjL", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValuateNowPjL(string start, string end) {
            object[] results = this.Invoke("ValuateNowPjL", new object[] {
                        start,
                        end});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateNowPjLAsync(string start, string end) {
            this.ValuateNowPjLAsync(start, end, null);
        }
        
        /// <remarks/>
        public void ValuateNowPjLAsync(string start, string end, object userState) {
            if ((this.ValuateNowPjLOperationCompleted == null)) {
                this.ValuateNowPjLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateNowPjLOperationCompleted);
            }
            this.InvokeAsync("ValuateNowPjL", new object[] {
                        start,
                        end}, this.ValuateNowPjLOperationCompleted, userState);
        }
        
        private void OnValuateNowPjLOperationCompleted(object arg) {
            if ((this.ValuateNowPjLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateNowPjLCompleted(this, new ValuateNowPjLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/DelValuateNow", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DelValuateNow(string zyh) {
            object[] results = this.Invoke("DelValuateNow", new object[] {
                        zyh});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DelValuateNowAsync(string zyh) {
            this.DelValuateNowAsync(zyh, null);
        }
        
        /// <remarks/>
        public void DelValuateNowAsync(string zyh, object userState) {
            if ((this.DelValuateNowOperationCompleted == null)) {
                this.DelValuateNowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelValuateNowOperationCompleted);
            }
            this.InvokeAsync("DelValuateNow", new object[] {
                        zyh}, this.DelValuateNowOperationCompleted, userState);
        }
        
        private void OnDelValuateNowOperationCompleted(object arg) {
            if ((this.DelValuateNowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelValuateNowCompleted(this, new DelValuateNowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/DelValuateEnd", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DelValuateEnd(string zyh) {
            object[] results = this.Invoke("DelValuateEnd", new object[] {
                        zyh});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DelValuateEndAsync(string zyh) {
            this.DelValuateEndAsync(zyh, null);
        }
        
        /// <remarks/>
        public void DelValuateEndAsync(string zyh, object userState) {
            if ((this.DelValuateEndOperationCompleted == null)) {
                this.DelValuateEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelValuateEndOperationCompleted);
            }
            this.InvokeAsync("DelValuateEnd", new object[] {
                        zyh}, this.DelValuateEndOperationCompleted, userState);
        }
        
        private void OnDelValuateEndOperationCompleted(object arg) {
            if ((this.DelValuateEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelValuateEndCompleted(this, new DelValuateEndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetValuateNowYsm", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetValuateNowYsm(string bah) {
            object[] results = this.Invoke("GetValuateNowYsm", new object[] {
                        bah});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetValuateNowYsmAsync(string bah) {
            this.GetValuateNowYsmAsync(bah, null);
        }
        
        /// <remarks/>
        public void GetValuateNowYsmAsync(string bah, object userState) {
            if ((this.GetValuateNowYsmOperationCompleted == null)) {
                this.GetValuateNowYsmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValuateNowYsmOperationCompleted);
            }
            this.InvokeAsync("GetValuateNowYsm", new object[] {
                        bah}, this.GetValuateNowYsmOperationCompleted, userState);
        }
        
        private void OnGetValuateNowYsmOperationCompleted(object arg) {
            if ((this.GetValuateNowYsmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValuateNowYsmCompleted(this, new GetValuateNowYsmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/DoneTimeForTransferIn", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DoneTimeForTransferIn(string registryID, ref System.Xml.XmlNode doneTime) {
            object[] results = this.Invoke("DoneTimeForTransferIn", new object[] {
                        registryID,
                        doneTime});
            doneTime = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DoneTimeForTransferInAsync(string registryID, System.Xml.XmlNode doneTime) {
            this.DoneTimeForTransferInAsync(registryID, doneTime, null);
        }
        
        /// <remarks/>
        public void DoneTimeForTransferInAsync(string registryID, System.Xml.XmlNode doneTime, object userState) {
            if ((this.DoneTimeForTransferInOperationCompleted == null)) {
                this.DoneTimeForTransferInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoneTimeForTransferInOperationCompleted);
            }
            this.InvokeAsync("DoneTimeForTransferIn", new object[] {
                        registryID,
                        doneTime}, this.DoneTimeForTransferInOperationCompleted, userState);
        }
        
        private void OnDoneTimeForTransferInOperationCompleted(object arg) {
            if ((this.DoneTimeForTransferInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoneTimeForTransferInCompleted(this, new DoneTimeForTransferInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/DoneTimeForTransferOut", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DoneTimeForTransferOut(string registryID, ref System.Xml.XmlNode doneTime) {
            object[] results = this.Invoke("DoneTimeForTransferOut", new object[] {
                        registryID,
                        doneTime});
            doneTime = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DoneTimeForTransferOutAsync(string registryID, System.Xml.XmlNode doneTime) {
            this.DoneTimeForTransferOutAsync(registryID, doneTime, null);
        }
        
        /// <remarks/>
        public void DoneTimeForTransferOutAsync(string registryID, System.Xml.XmlNode doneTime, object userState) {
            if ((this.DoneTimeForTransferOutOperationCompleted == null)) {
                this.DoneTimeForTransferOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoneTimeForTransferOutOperationCompleted);
            }
            this.InvokeAsync("DoneTimeForTransferOut", new object[] {
                        registryID,
                        doneTime}, this.DoneTimeForTransferOutOperationCompleted, userState);
        }
        
        private void OnDoneTimeForTransferOutOperationCompleted(object arg) {
            if ((this.DoneTimeForTransferOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoneTimeForTransferOutCompleted(this, new DoneTimeForTransferOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/DoneTimeForTakeOver", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DoneTimeForTakeOver(string registryID, ref System.Xml.XmlNode doneTime) {
            object[] results = this.Invoke("DoneTimeForTakeOver", new object[] {
                        registryID,
                        doneTime});
            doneTime = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DoneTimeForTakeOverAsync(string registryID, System.Xml.XmlNode doneTime) {
            this.DoneTimeForTakeOverAsync(registryID, doneTime, null);
        }
        
        /// <remarks/>
        public void DoneTimeForTakeOverAsync(string registryID, System.Xml.XmlNode doneTime, object userState) {
            if ((this.DoneTimeForTakeOverOperationCompleted == null)) {
                this.DoneTimeForTakeOverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoneTimeForTakeOverOperationCompleted);
            }
            this.InvokeAsync("DoneTimeForTakeOver", new object[] {
                        registryID,
                        doneTime}, this.DoneTimeForTakeOverOperationCompleted, userState);
        }
        
        private void OnDoneTimeForTakeOverOperationCompleted(object arg) {
            if ((this.DoneTimeForTakeOverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoneTimeForTakeOverCompleted(this, new DoneTimeForTakeOverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/DoneTimeForConsultQT", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DoneTimeForConsultQT(string registryID, string Sequence, ref System.Xml.XmlNode doneTime) {
            object[] results = this.Invoke("DoneTimeForConsultQT", new object[] {
                        registryID,
                        Sequence,
                        doneTime});
            doneTime = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DoneTimeForConsultQTAsync(string registryID, string Sequence, System.Xml.XmlNode doneTime) {
            this.DoneTimeForConsultQTAsync(registryID, Sequence, doneTime, null);
        }
        
        /// <remarks/>
        public void DoneTimeForConsultQTAsync(string registryID, string Sequence, System.Xml.XmlNode doneTime, object userState) {
            if ((this.DoneTimeForConsultQTOperationCompleted == null)) {
                this.DoneTimeForConsultQTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoneTimeForConsultQTOperationCompleted);
            }
            this.InvokeAsync("DoneTimeForConsultQT", new object[] {
                        registryID,
                        Sequence,
                        doneTime}, this.DoneTimeForConsultQTOperationCompleted, userState);
        }
        
        private void OnDoneTimeForConsultQTOperationCompleted(object arg) {
            if ((this.DoneTimeForConsultQTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoneTimeForConsultQTCompleted(this, new DoneTimeForConsultQTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/DoneTimeForConsult", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DoneTimeForConsult(string registryID, string Sequence, ref System.Xml.XmlNode doneTime) {
            object[] results = this.Invoke("DoneTimeForConsult", new object[] {
                        registryID,
                        Sequence,
                        doneTime});
            doneTime = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DoneTimeForConsultAsync(string registryID, string Sequence, System.Xml.XmlNode doneTime) {
            this.DoneTimeForConsultAsync(registryID, Sequence, doneTime, null);
        }
        
        /// <remarks/>
        public void DoneTimeForConsultAsync(string registryID, string Sequence, System.Xml.XmlNode doneTime, object userState) {
            if ((this.DoneTimeForConsultOperationCompleted == null)) {
                this.DoneTimeForConsultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoneTimeForConsultOperationCompleted);
            }
            this.InvokeAsync("DoneTimeForConsult", new object[] {
                        registryID,
                        Sequence,
                        doneTime}, this.DoneTimeForConsultOperationCompleted, userState);
        }
        
        private void OnDoneTimeForConsultOperationCompleted(object arg) {
            if ((this.DoneTimeForConsultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoneTimeForConsultCompleted(this, new DoneTimeForConsultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/DoneTimeForConsultEx", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DoneTimeForConsultEx(string opcode, string registryID, ref System.Xml.XmlNode doneTime) {
            object[] results = this.Invoke("DoneTimeForConsultEx", new object[] {
                        opcode,
                        registryID,
                        doneTime});
            doneTime = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DoneTimeForConsultExAsync(string opcode, string registryID, System.Xml.XmlNode doneTime) {
            this.DoneTimeForConsultExAsync(opcode, registryID, doneTime, null);
        }
        
        /// <remarks/>
        public void DoneTimeForConsultExAsync(string opcode, string registryID, System.Xml.XmlNode doneTime, object userState) {
            if ((this.DoneTimeForConsultExOperationCompleted == null)) {
                this.DoneTimeForConsultExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoneTimeForConsultExOperationCompleted);
            }
            this.InvokeAsync("DoneTimeForConsultEx", new object[] {
                        opcode,
                        registryID,
                        doneTime}, this.DoneTimeForConsultExOperationCompleted, userState);
        }
        
        private void OnDoneTimeForConsultExOperationCompleted(object arg) {
            if ((this.DoneTimeForConsultExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoneTimeForConsultExCompleted(this, new DoneTimeForConsultExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/RemindConsultEx", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RemindConsultEx(string opcode, string Deptcode) {
            object[] results = this.Invoke("RemindConsultEx", new object[] {
                        opcode,
                        Deptcode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RemindConsultExAsync(string opcode, string Deptcode) {
            this.RemindConsultExAsync(opcode, Deptcode, null);
        }
        
        /// <remarks/>
        public void RemindConsultExAsync(string opcode, string Deptcode, object userState) {
            if ((this.RemindConsultExOperationCompleted == null)) {
                this.RemindConsultExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemindConsultExOperationCompleted);
            }
            this.InvokeAsync("RemindConsultEx", new object[] {
                        opcode,
                        Deptcode}, this.RemindConsultExOperationCompleted, userState);
        }
        
        private void OnRemindConsultExOperationCompleted(object arg) {
            if ((this.RemindConsultExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemindConsultExCompleted(this, new RemindConsultExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/RemindConsultExDg", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RemindConsultExDg(string opcode, string Deptcode) {
            object[] results = this.Invoke("RemindConsultExDg", new object[] {
                        opcode,
                        Deptcode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RemindConsultExDgAsync(string opcode, string Deptcode) {
            this.RemindConsultExDgAsync(opcode, Deptcode, null);
        }
        
        /// <remarks/>
        public void RemindConsultExDgAsync(string opcode, string Deptcode, object userState) {
            if ((this.RemindConsultExDgOperationCompleted == null)) {
                this.RemindConsultExDgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemindConsultExDgOperationCompleted);
            }
            this.InvokeAsync("RemindConsultExDg", new object[] {
                        opcode,
                        Deptcode}, this.RemindConsultExDgOperationCompleted, userState);
        }
        
        private void OnRemindConsultExDgOperationCompleted(object arg) {
            if ((this.RemindConsultExDgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemindConsultExDgCompleted(this, new RemindConsultExDgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/Getoperators", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Getoperators(ref System.Xml.XmlNode ops) {
            object[] results = this.Invoke("Getoperators", new object[] {
                        ops});
            ops = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetoperatorsAsync(System.Xml.XmlNode ops) {
            this.GetoperatorsAsync(ops, null);
        }
        
        /// <remarks/>
        public void GetoperatorsAsync(System.Xml.XmlNode ops, object userState) {
            if ((this.GetoperatorsOperationCompleted == null)) {
                this.GetoperatorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetoperatorsOperationCompleted);
            }
            this.InvokeAsync("Getoperators", new object[] {
                        ops}, this.GetoperatorsOperationCompleted, userState);
        }
        
        private void OnGetoperatorsOperationCompleted(object arg) {
            if ((this.GetoperatorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetoperatorsCompleted(this, new GetoperatorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/FinishConsultNote", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FinishConsultNote(string sequence, string registryID, string RetrunDoctorID) {
            object[] results = this.Invoke("FinishConsultNote", new object[] {
                        sequence,
                        registryID,
                        RetrunDoctorID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FinishConsultNoteAsync(string sequence, string registryID, string RetrunDoctorID) {
            this.FinishConsultNoteAsync(sequence, registryID, RetrunDoctorID, null);
        }
        
        /// <remarks/>
        public void FinishConsultNoteAsync(string sequence, string registryID, string RetrunDoctorID, object userState) {
            if ((this.FinishConsultNoteOperationCompleted == null)) {
                this.FinishConsultNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishConsultNoteOperationCompleted);
            }
            this.InvokeAsync("FinishConsultNote", new object[] {
                        sequence,
                        registryID,
                        RetrunDoctorID}, this.FinishConsultNoteOperationCompleted, userState);
        }
        
        private void OnFinishConsultNoteOperationCompleted(object arg) {
            if ((this.FinishConsultNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinishConsultNoteCompleted(this, new FinishConsultNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetFinishConsultationList", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFinishConsultationList(string strOpCode, string startTime, string endTime) {
            object[] results = this.Invoke("GetFinishConsultationList", new object[] {
                        strOpCode,
                        startTime,
                        endTime});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFinishConsultationListAsync(string strOpCode, string startTime, string endTime) {
            this.GetFinishConsultationListAsync(strOpCode, startTime, endTime, null);
        }
        
        /// <remarks/>
        public void GetFinishConsultationListAsync(string strOpCode, string startTime, string endTime, object userState) {
            if ((this.GetFinishConsultationListOperationCompleted == null)) {
                this.GetFinishConsultationListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFinishConsultationListOperationCompleted);
            }
            this.InvokeAsync("GetFinishConsultationList", new object[] {
                        strOpCode,
                        startTime,
                        endTime}, this.GetFinishConsultationListOperationCompleted, userState);
        }
        
        private void OnGetFinishConsultationListOperationCompleted(object arg) {
            if ((this.GetFinishConsultationListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFinishConsultationListCompleted(this, new GetFinishConsultationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetFinishConsultationListQC", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFinishConsultationListQC(string startTime, string endTime) {
            object[] results = this.Invoke("GetFinishConsultationListQC", new object[] {
                        startTime,
                        endTime});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFinishConsultationListQCAsync(string startTime, string endTime) {
            this.GetFinishConsultationListQCAsync(startTime, endTime, null);
        }
        
        /// <remarks/>
        public void GetFinishConsultationListQCAsync(string startTime, string endTime, object userState) {
            if ((this.GetFinishConsultationListQCOperationCompleted == null)) {
                this.GetFinishConsultationListQCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFinishConsultationListQCOperationCompleted);
            }
            this.InvokeAsync("GetFinishConsultationListQC", new object[] {
                        startTime,
                        endTime}, this.GetFinishConsultationListQCOperationCompleted, userState);
        }
        
        private void OnGetFinishConsultationListQCOperationCompleted(object arg) {
            if ((this.GetFinishConsultationListQCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFinishConsultationListQCCompleted(this, new GetFinishConsultationListQCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetFinishConsultationListQCNew", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFinishConsultationListQCNew(string startTime, string endTime, string strDepartment, string strDoctor) {
            object[] results = this.Invoke("GetFinishConsultationListQCNew", new object[] {
                        startTime,
                        endTime,
                        strDepartment,
                        strDoctor});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFinishConsultationListQCNewAsync(string startTime, string endTime, string strDepartment, string strDoctor) {
            this.GetFinishConsultationListQCNewAsync(startTime, endTime, strDepartment, strDoctor, null);
        }
        
        /// <remarks/>
        public void GetFinishConsultationListQCNewAsync(string startTime, string endTime, string strDepartment, string strDoctor, object userState) {
            if ((this.GetFinishConsultationListQCNewOperationCompleted == null)) {
                this.GetFinishConsultationListQCNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFinishConsultationListQCNewOperationCompleted);
            }
            this.InvokeAsync("GetFinishConsultationListQCNew", new object[] {
                        startTime,
                        endTime,
                        strDepartment,
                        strDoctor}, this.GetFinishConsultationListQCNewOperationCompleted, userState);
        }
        
        private void OnGetFinishConsultationListQCNewOperationCompleted(object arg) {
            if ((this.GetFinishConsultationListQCNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFinishConsultationListQCNewCompleted(this, new GetFinishConsultationListQCNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetQCTableByMonth", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQCTableByMonth(string startTime, string endTime, string strDepartment, string strDoctor) {
            object[] results = this.Invoke("GetQCTableByMonth", new object[] {
                        startTime,
                        endTime,
                        strDepartment,
                        strDoctor});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQCTableByMonthAsync(string startTime, string endTime, string strDepartment, string strDoctor) {
            this.GetQCTableByMonthAsync(startTime, endTime, strDepartment, strDoctor, null);
        }
        
        /// <remarks/>
        public void GetQCTableByMonthAsync(string startTime, string endTime, string strDepartment, string strDoctor, object userState) {
            if ((this.GetQCTableByMonthOperationCompleted == null)) {
                this.GetQCTableByMonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQCTableByMonthOperationCompleted);
            }
            this.InvokeAsync("GetQCTableByMonth", new object[] {
                        startTime,
                        endTime,
                        strDepartment,
                        strDoctor}, this.GetQCTableByMonthOperationCompleted, userState);
        }
        
        private void OnGetQCTableByMonthOperationCompleted(object arg) {
            if ((this.GetQCTableByMonthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQCTableByMonthCompleted(this, new GetQCTableByMonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetQCTableByMonthNew", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQCTableByMonthNew(string startTime, string endTime, string strDepartment, string strDoctor) {
            object[] results = this.Invoke("GetQCTableByMonthNew", new object[] {
                        startTime,
                        endTime,
                        strDepartment,
                        strDoctor});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQCTableByMonthNewAsync(string startTime, string endTime, string strDepartment, string strDoctor) {
            this.GetQCTableByMonthNewAsync(startTime, endTime, strDepartment, strDoctor, null);
        }
        
        /// <remarks/>
        public void GetQCTableByMonthNewAsync(string startTime, string endTime, string strDepartment, string strDoctor, object userState) {
            if ((this.GetQCTableByMonthNewOperationCompleted == null)) {
                this.GetQCTableByMonthNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQCTableByMonthNewOperationCompleted);
            }
            this.InvokeAsync("GetQCTableByMonthNew", new object[] {
                        startTime,
                        endTime,
                        strDepartment,
                        strDoctor}, this.GetQCTableByMonthNewOperationCompleted, userState);
        }
        
        private void OnGetQCTableByMonthNewOperationCompleted(object arg) {
            if ((this.GetQCTableByMonthNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQCTableByMonthNewCompleted(this, new GetQCTableByMonthNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/InSertValueOff", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InSertValueOff(string RegistryID, string NoteID, string Reason, string OffScore) {
            object[] results = this.Invoke("InSertValueOff", new object[] {
                        RegistryID,
                        NoteID,
                        Reason,
                        OffScore});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InSertValueOffAsync(string RegistryID, string NoteID, string Reason, string OffScore) {
            this.InSertValueOffAsync(RegistryID, NoteID, Reason, OffScore, null);
        }
        
        /// <remarks/>
        public void InSertValueOffAsync(string RegistryID, string NoteID, string Reason, string OffScore, object userState) {
            if ((this.InSertValueOffOperationCompleted == null)) {
                this.InSertValueOffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInSertValueOffOperationCompleted);
            }
            this.InvokeAsync("InSertValueOff", new object[] {
                        RegistryID,
                        NoteID,
                        Reason,
                        OffScore}, this.InSertValueOffOperationCompleted, userState);
        }
        
        private void OnInSertValueOffOperationCompleted(object arg) {
            if ((this.InSertValueOffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InSertValueOffCompleted(this, new InSertValueOffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetQCTableByMonthEnd", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQCTableByMonthEnd(string startTime, string endTime, string strDepartment, string strDoctor) {
            object[] results = this.Invoke("GetQCTableByMonthEnd", new object[] {
                        startTime,
                        endTime,
                        strDepartment,
                        strDoctor});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQCTableByMonthEndAsync(string startTime, string endTime, string strDepartment, string strDoctor) {
            this.GetQCTableByMonthEndAsync(startTime, endTime, strDepartment, strDoctor, null);
        }
        
        /// <remarks/>
        public void GetQCTableByMonthEndAsync(string startTime, string endTime, string strDepartment, string strDoctor, object userState) {
            if ((this.GetQCTableByMonthEndOperationCompleted == null)) {
                this.GetQCTableByMonthEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQCTableByMonthEndOperationCompleted);
            }
            this.InvokeAsync("GetQCTableByMonthEnd", new object[] {
                        startTime,
                        endTime,
                        strDepartment,
                        strDoctor}, this.GetQCTableByMonthEndOperationCompleted, userState);
        }
        
        private void OnGetQCTableByMonthEndOperationCompleted(object arg) {
            if ((this.GetQCTableByMonthEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQCTableByMonthEndCompleted(this, new GetQCTableByMonthEndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetQCTableByMonthEndNew", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQCTableByMonthEndNew(string startTime, string endTime, string strDepartment, string strDoctor) {
            object[] results = this.Invoke("GetQCTableByMonthEndNew", new object[] {
                        startTime,
                        endTime,
                        strDepartment,
                        strDoctor});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQCTableByMonthEndNewAsync(string startTime, string endTime, string strDepartment, string strDoctor) {
            this.GetQCTableByMonthEndNewAsync(startTime, endTime, strDepartment, strDoctor, null);
        }
        
        /// <remarks/>
        public void GetQCTableByMonthEndNewAsync(string startTime, string endTime, string strDepartment, string strDoctor, object userState) {
            if ((this.GetQCTableByMonthEndNewOperationCompleted == null)) {
                this.GetQCTableByMonthEndNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQCTableByMonthEndNewOperationCompleted);
            }
            this.InvokeAsync("GetQCTableByMonthEndNew", new object[] {
                        startTime,
                        endTime,
                        strDepartment,
                        strDoctor}, this.GetQCTableByMonthEndNewOperationCompleted, userState);
        }
        
        private void OnGetQCTableByMonthEndNewOperationCompleted(object arg) {
            if ((this.GetQCTableByMonthEndNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQCTableByMonthEndNewCompleted(this, new GetQCTableByMonthEndNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/IsInHospital", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsInHospital(string strRegistryID) {
            object[] results = this.Invoke("IsInHospital", new object[] {
                        strRegistryID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsInHospitalAsync(string strRegistryID) {
            this.IsInHospitalAsync(strRegistryID, null);
        }
        
        /// <remarks/>
        public void IsInHospitalAsync(string strRegistryID, object userState) {
            if ((this.IsInHospitalOperationCompleted == null)) {
                this.IsInHospitalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsInHospitalOperationCompleted);
            }
            this.InvokeAsync("IsInHospital", new object[] {
                        strRegistryID}, this.IsInHospitalOperationCompleted, userState);
        }
        
        private void OnIsInHospitalOperationCompleted(object arg) {
            if ((this.IsInHospitalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsInHospitalCompleted(this, new IsInHospitalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetDepartmentList", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDepartmentList() {
            object[] results = this.Invoke("GetDepartmentList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentListAsync() {
            this.GetDepartmentListAsync(null);
        }
        
        /// <remarks/>
        public void GetDepartmentListAsync(object userState) {
            if ((this.GetDepartmentListOperationCompleted == null)) {
                this.GetDepartmentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentListOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentList", new object[0], this.GetDepartmentListOperationCompleted, userState);
        }
        
        private void OnGetDepartmentListOperationCompleted(object arg) {
            if ((this.GetDepartmentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentListCompleted(this, new GetDepartmentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetDoctorList", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDoctorList() {
            object[] results = this.Invoke("GetDoctorList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDoctorListAsync() {
            this.GetDoctorListAsync(null);
        }
        
        /// <remarks/>
        public void GetDoctorListAsync(object userState) {
            if ((this.GetDoctorListOperationCompleted == null)) {
                this.GetDoctorListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoctorListOperationCompleted);
            }
            this.InvokeAsync("GetDoctorList", new object[0], this.GetDoctorListOperationCompleted, userState);
        }
        
        private void OnGetDoctorListOperationCompleted(object arg) {
            if ((this.GetDoctorListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoctorListCompleted(this, new GetDoctorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetDoctorListDg", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDoctorListDg(string zcbm) {
            object[] results = this.Invoke("GetDoctorListDg", new object[] {
                        zcbm});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDoctorListDgAsync(string zcbm) {
            this.GetDoctorListDgAsync(zcbm, null);
        }
        
        /// <remarks/>
        public void GetDoctorListDgAsync(string zcbm, object userState) {
            if ((this.GetDoctorListDgOperationCompleted == null)) {
                this.GetDoctorListDgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoctorListDgOperationCompleted);
            }
            this.InvokeAsync("GetDoctorListDg", new object[] {
                        zcbm}, this.GetDoctorListDgOperationCompleted, userState);
        }
        
        private void OnGetDoctorListDgOperationCompleted(object arg) {
            if ((this.GetDoctorListDgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoctorListDgCompleted(this, new GetDoctorListDgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetDoctorListByDepartment", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDoctorListByDepartment(string strDepartmentCode) {
            object[] results = this.Invoke("GetDoctorListByDepartment", new object[] {
                        strDepartmentCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDoctorListByDepartmentAsync(string strDepartmentCode) {
            this.GetDoctorListByDepartmentAsync(strDepartmentCode, null);
        }
        
        /// <remarks/>
        public void GetDoctorListByDepartmentAsync(string strDepartmentCode, object userState) {
            if ((this.GetDoctorListByDepartmentOperationCompleted == null)) {
                this.GetDoctorListByDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoctorListByDepartmentOperationCompleted);
            }
            this.InvokeAsync("GetDoctorListByDepartment", new object[] {
                        strDepartmentCode}, this.GetDoctorListByDepartmentOperationCompleted, userState);
        }
        
        private void OnGetDoctorListByDepartmentOperationCompleted(object arg) {
            if ((this.GetDoctorListByDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoctorListByDepartmentCompleted(this, new GetDoctorListByDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetDoctorListByDepartmentAndTitle", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDoctorListByDepartmentAndTitle(string strDepartmentCode, string Title) {
            object[] results = this.Invoke("GetDoctorListByDepartmentAndTitle", new object[] {
                        strDepartmentCode,
                        Title});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDoctorListByDepartmentAndTitleAsync(string strDepartmentCode, string Title) {
            this.GetDoctorListByDepartmentAndTitleAsync(strDepartmentCode, Title, null);
        }
        
        /// <remarks/>
        public void GetDoctorListByDepartmentAndTitleAsync(string strDepartmentCode, string Title, object userState) {
            if ((this.GetDoctorListByDepartmentAndTitleOperationCompleted == null)) {
                this.GetDoctorListByDepartmentAndTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoctorListByDepartmentAndTitleOperationCompleted);
            }
            this.InvokeAsync("GetDoctorListByDepartmentAndTitle", new object[] {
                        strDepartmentCode,
                        Title}, this.GetDoctorListByDepartmentAndTitleOperationCompleted, userState);
        }
        
        private void OnGetDoctorListByDepartmentAndTitleOperationCompleted(object arg) {
            if ((this.GetDoctorListByDepartmentAndTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoctorListByDepartmentAndTitleCompleted(this, new GetDoctorListByDepartmentAndTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetDepartmentByDoctor", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDepartmentByDoctor(string strCode) {
            object[] results = this.Invoke("GetDepartmentByDoctor", new object[] {
                        strCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentByDoctorAsync(string strCode) {
            this.GetDepartmentByDoctorAsync(strCode, null);
        }
        
        /// <remarks/>
        public void GetDepartmentByDoctorAsync(string strCode, object userState) {
            if ((this.GetDepartmentByDoctorOperationCompleted == null)) {
                this.GetDepartmentByDoctorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentByDoctorOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentByDoctor", new object[] {
                        strCode}, this.GetDepartmentByDoctorOperationCompleted, userState);
        }
        
        private void OnGetDepartmentByDoctorOperationCompleted(object arg) {
            if ((this.GetDepartmentByDoctorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentByDoctorCompleted(this, new GetDepartmentByDoctorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetIdentification", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetIdentification() {
            object[] results = this.Invoke("GetIdentification", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetIdentificationAsync() {
            this.GetIdentificationAsync(null);
        }
        
        /// <remarks/>
        public void GetIdentificationAsync(object userState) {
            if ((this.GetIdentificationOperationCompleted == null)) {
                this.GetIdentificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIdentificationOperationCompleted);
            }
            this.InvokeAsync("GetIdentification", new object[0], this.GetIdentificationOperationCompleted, userState);
        }
        
        private void OnGetIdentificationOperationCompleted(object arg) {
            if ((this.GetIdentificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIdentificationCompleted(this, new GetIdentificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetDescription", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDescription() {
            object[] results = this.Invoke("GetDescription", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDescriptionAsync() {
            this.GetDescriptionAsync(null);
        }
        
        /// <remarks/>
        public void GetDescriptionAsync(object userState) {
            if ((this.GetDescriptionOperationCompleted == null)) {
                this.GetDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDescriptionOperationCompleted);
            }
            this.InvokeAsync("GetDescription", new object[0], this.GetDescriptionOperationCompleted, userState);
        }
        
        private void OnGetDescriptionOperationCompleted(object arg) {
            if ((this.GetDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDescriptionCompleted(this, new GetDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/UpdateIdentification", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateIdentification(string identName, string identId, string identChoice, bool getBool) {
            this.Invoke("UpdateIdentification", new object[] {
                        identName,
                        identId,
                        identChoice,
                        getBool});
        }
        
        /// <remarks/>
        public void UpdateIdentificationAsync(string identName, string identId, string identChoice, bool getBool) {
            this.UpdateIdentificationAsync(identName, identId, identChoice, getBool, null);
        }
        
        /// <remarks/>
        public void UpdateIdentificationAsync(string identName, string identId, string identChoice, bool getBool, object userState) {
            if ((this.UpdateIdentificationOperationCompleted == null)) {
                this.UpdateIdentificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateIdentificationOperationCompleted);
            }
            this.InvokeAsync("UpdateIdentification", new object[] {
                        identName,
                        identId,
                        identChoice,
                        getBool}, this.UpdateIdentificationOperationCompleted, userState);
        }
        
        private void OnUpdateIdentificationOperationCompleted(object arg) {
            if ((this.UpdateIdentificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateIdentificationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetDesc", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDesc(string identName) {
            object[] results = this.Invoke("GetDesc", new object[] {
                        identName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDescAsync(string identName) {
            this.GetDescAsync(identName, null);
        }
        
        /// <remarks/>
        public void GetDescAsync(string identName, object userState) {
            if ((this.GetDescOperationCompleted == null)) {
                this.GetDescOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDescOperationCompleted);
            }
            this.InvokeAsync("GetDesc", new object[] {
                        identName}, this.GetDescOperationCompleted, userState);
        }
        
        private void OnGetDescOperationCompleted(object arg) {
            if ((this.GetDescCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDescCompleted(this, new GetDescCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetIdents", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetIdents() {
            object[] results = this.Invoke("GetIdents", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetIdentsAsync() {
            this.GetIdentsAsync(null);
        }
        
        /// <remarks/>
        public void GetIdentsAsync(object userState) {
            if ((this.GetIdentsOperationCompleted == null)) {
                this.GetIdentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIdentsOperationCompleted);
            }
            this.InvokeAsync("GetIdents", new object[0], this.GetIdentsOperationCompleted, userState);
        }
        
        private void OnGetIdentsOperationCompleted(object arg) {
            if ((this.GetIdentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIdentsCompleted(this, new GetIdentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/UpdateDescription", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateDescription(string description, string identId, string descTittle, int getNum) {
            this.Invoke("UpdateDescription", new object[] {
                        description,
                        identId,
                        descTittle,
                        getNum});
        }
        
        /// <remarks/>
        public void UpdateDescriptionAsync(string description, string identId, string descTittle, int getNum) {
            this.UpdateDescriptionAsync(description, identId, descTittle, getNum, null);
        }
        
        /// <remarks/>
        public void UpdateDescriptionAsync(string description, string identId, string descTittle, int getNum, object userState) {
            if ((this.UpdateDescriptionOperationCompleted == null)) {
                this.UpdateDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDescriptionOperationCompleted);
            }
            this.InvokeAsync("UpdateDescription", new object[] {
                        description,
                        identId,
                        descTittle,
                        getNum}, this.UpdateDescriptionOperationCompleted, userState);
        }
        
        private void OnUpdateDescriptionOperationCompleted(object arg) {
            if ((this.UpdateDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDescriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetPatientClinicID", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPatientClinicID(string strRegistryID) {
            object[] results = this.Invoke("GetPatientClinicID", new object[] {
                        strRegistryID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientClinicIDAsync(string strRegistryID) {
            this.GetPatientClinicIDAsync(strRegistryID, null);
        }
        
        /// <remarks/>
        public void GetPatientClinicIDAsync(string strRegistryID, object userState) {
            if ((this.GetPatientClinicIDOperationCompleted == null)) {
                this.GetPatientClinicIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientClinicIDOperationCompleted);
            }
            this.InvokeAsync("GetPatientClinicID", new object[] {
                        strRegistryID}, this.GetPatientClinicIDOperationCompleted, userState);
        }
        
        private void OnGetPatientClinicIDOperationCompleted(object arg) {
            if ((this.GetPatientClinicIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientClinicIDCompleted(this, new GetPatientClinicIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ReturnConsultNote", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReturnConsultNote(string sequence, string registryID) {
            object[] results = this.Invoke("ReturnConsultNote", new object[] {
                        sequence,
                        registryID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnConsultNoteAsync(string sequence, string registryID) {
            this.ReturnConsultNoteAsync(sequence, registryID, null);
        }
        
        /// <remarks/>
        public void ReturnConsultNoteAsync(string sequence, string registryID, object userState) {
            if ((this.ReturnConsultNoteOperationCompleted == null)) {
                this.ReturnConsultNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnConsultNoteOperationCompleted);
            }
            this.InvokeAsync("ReturnConsultNote", new object[] {
                        sequence,
                        registryID}, this.ReturnConsultNoteOperationCompleted, userState);
        }
        
        private void OnReturnConsultNoteOperationCompleted(object arg) {
            if ((this.ReturnConsultNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnConsultNoteCompleted(this, new ReturnConsultNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/UpdateOperators", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOperators(string code, string upcode) {
            this.Invoke("UpdateOperators", new object[] {
                        code,
                        upcode});
        }
        
        /// <remarks/>
        public void UpdateOperatorsAsync(string code, string upcode) {
            this.UpdateOperatorsAsync(code, upcode, null);
        }
        
        /// <remarks/>
        public void UpdateOperatorsAsync(string code, string upcode, object userState) {
            if ((this.UpdateOperatorsOperationCompleted == null)) {
                this.UpdateOperatorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperatorsOperationCompleted);
            }
            this.InvokeAsync("UpdateOperators", new object[] {
                        code,
                        upcode}, this.UpdateOperatorsOperationCompleted, userState);
        }
        
        private void OnUpdateOperatorsOperationCompleted(object arg) {
            if ((this.UpdateOperatorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOperatorsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetOpInf", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOpInf(string code) {
            object[] results = this.Invoke("GetOpInf", new object[] {
                        code});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpInfAsync(string code) {
            this.GetOpInfAsync(code, null);
        }
        
        /// <remarks/>
        public void GetOpInfAsync(string code, object userState) {
            if ((this.GetOpInfOperationCompleted == null)) {
                this.GetOpInfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpInfOperationCompleted);
            }
            this.InvokeAsync("GetOpInf", new object[] {
                        code}, this.GetOpInfOperationCompleted, userState);
        }
        
        private void OnGetOpInfOperationCompleted(object arg) {
            if ((this.GetOpInfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpInfCompleted(this, new GetOpInfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/IsGuideD", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet IsGuideD(string code) {
            object[] results = this.Invoke("IsGuideD", new object[] {
                        code});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void IsGuideDAsync(string code) {
            this.IsGuideDAsync(code, null);
        }
        
        /// <remarks/>
        public void IsGuideDAsync(string code, object userState) {
            if ((this.IsGuideDOperationCompleted == null)) {
                this.IsGuideDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsGuideDOperationCompleted);
            }
            this.InvokeAsync("IsGuideD", new object[] {
                        code}, this.IsGuideDOperationCompleted, userState);
        }
        
        private void OnIsGuideDOperationCompleted(object arg) {
            if ((this.IsGuideDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsGuideDCompleted(this, new IsGuideDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetPatientInfZY", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPatientInfZY(string code) {
            object[] results = this.Invoke("GetPatientInfZY", new object[] {
                        code});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientInfZYAsync(string code) {
            this.GetPatientInfZYAsync(code, null);
        }
        
        /// <remarks/>
        public void GetPatientInfZYAsync(string code, object userState) {
            if ((this.GetPatientInfZYOperationCompleted == null)) {
                this.GetPatientInfZYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientInfZYOperationCompleted);
            }
            this.InvokeAsync("GetPatientInfZY", new object[] {
                        code}, this.GetPatientInfZYOperationCompleted, userState);
        }
        
        private void OnGetPatientInfZYOperationCompleted(object arg) {
            if ((this.GetPatientInfZYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientInfZYCompleted(this, new GetPatientInfZYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetPatientInf", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPatientInf(string code) {
            object[] results = this.Invoke("GetPatientInf", new object[] {
                        code});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientInfAsync(string code) {
            this.GetPatientInfAsync(code, null);
        }
        
        /// <remarks/>
        public void GetPatientInfAsync(string code, object userState) {
            if ((this.GetPatientInfOperationCompleted == null)) {
                this.GetPatientInfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientInfOperationCompleted);
            }
            this.InvokeAsync("GetPatientInf", new object[] {
                        code}, this.GetPatientInfOperationCompleted, userState);
        }
        
        private void OnGetPatientInfOperationCompleted(object arg) {
            if ((this.GetPatientInfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientInfCompleted(this, new GetPatientInfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetCPatientInf", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCPatientInf(string code) {
            object[] results = this.Invoke("GetCPatientInf", new object[] {
                        code});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCPatientInfAsync(string code) {
            this.GetCPatientInfAsync(code, null);
        }
        
        /// <remarks/>
        public void GetCPatientInfAsync(string code, object userState) {
            if ((this.GetCPatientInfOperationCompleted == null)) {
                this.GetCPatientInfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCPatientInfOperationCompleted);
            }
            this.InvokeAsync("GetCPatientInf", new object[] {
                        code}, this.GetCPatientInfOperationCompleted, userState);
        }
        
        private void OnGetCPatientInfOperationCompleted(object arg) {
            if ((this.GetCPatientInfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCPatientInfCompleted(this, new GetCPatientInfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetDepartmentListByModeDS", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDepartmentListByModeDS(WorkMode mode) {
            object[] results = this.Invoke("GetDepartmentListByModeDS", new object[] {
                        mode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentListByModeDSAsync(WorkMode mode) {
            this.GetDepartmentListByModeDSAsync(mode, null);
        }
        
        /// <remarks/>
        public void GetDepartmentListByModeDSAsync(WorkMode mode, object userState) {
            if ((this.GetDepartmentListByModeDSOperationCompleted == null)) {
                this.GetDepartmentListByModeDSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentListByModeDSOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentListByModeDS", new object[] {
                        mode}, this.GetDepartmentListByModeDSOperationCompleted, userState);
        }
        
        private void OnGetDepartmentListByModeDSOperationCompleted(object arg) {
            if ((this.GetDepartmentListByModeDSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentListByModeDSCompleted(this, new GetDepartmentListByModeDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetPatientListByEmrstatus", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPatientListByEmrstatus(QueryMode mode, string criteria, bool archive) {
            object[] results = this.Invoke("GetPatientListByEmrstatus", new object[] {
                        mode,
                        criteria,
                        archive});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientListByEmrstatusAsync(QueryMode mode, string criteria, bool archive) {
            this.GetPatientListByEmrstatusAsync(mode, criteria, archive, null);
        }
        
        /// <remarks/>
        public void GetPatientListByEmrstatusAsync(QueryMode mode, string criteria, bool archive, object userState) {
            if ((this.GetPatientListByEmrstatusOperationCompleted == null)) {
                this.GetPatientListByEmrstatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientListByEmrstatusOperationCompleted);
            }
            this.InvokeAsync("GetPatientListByEmrstatus", new object[] {
                        mode,
                        criteria,
                        archive}, this.GetPatientListByEmrstatusOperationCompleted, userState);
        }
        
        private void OnGetPatientListByEmrstatusOperationCompleted(object arg) {
            if ((this.GetPatientListByEmrstatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientListByEmrstatusCompleted(this, new GetPatientListByEmrstatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetNewMedicalData", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetNewMedicalData(ref System.Data.DataSet dst1, ref System.Data.DataSet dst2, ref System.Data.DataSet dst3, ref System.Data.DataSet dst4, ref System.Data.DataSet dt, string RegistryID) {
            object[] results = this.Invoke("GetNewMedicalData", new object[] {
                        dst1,
                        dst2,
                        dst3,
                        dst4,
                        dt,
                        RegistryID});
            dst1 = ((System.Data.DataSet)(results[0]));
            dst2 = ((System.Data.DataSet)(results[1]));
            dst3 = ((System.Data.DataSet)(results[2]));
            dst4 = ((System.Data.DataSet)(results[3]));
            dt = ((System.Data.DataSet)(results[4]));
        }
        
        /// <remarks/>
        public void GetNewMedicalDataAsync(System.Data.DataSet dst1, System.Data.DataSet dst2, System.Data.DataSet dst3, System.Data.DataSet dst4, System.Data.DataSet dt, string RegistryID) {
            this.GetNewMedicalDataAsync(dst1, dst2, dst3, dst4, dt, RegistryID, null);
        }
        
        /// <remarks/>
        public void GetNewMedicalDataAsync(System.Data.DataSet dst1, System.Data.DataSet dst2, System.Data.DataSet dst3, System.Data.DataSet dst4, System.Data.DataSet dt, string RegistryID, object userState) {
            if ((this.GetNewMedicalDataOperationCompleted == null)) {
                this.GetNewMedicalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewMedicalDataOperationCompleted);
            }
            this.InvokeAsync("GetNewMedicalData", new object[] {
                        dst1,
                        dst2,
                        dst3,
                        dst4,
                        dt,
                        RegistryID}, this.GetNewMedicalDataOperationCompleted, userState);
        }
        
        private void OnGetNewMedicalDataOperationCompleted(object arg) {
            if ((this.GetNewMedicalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewMedicalDataCompleted(this, new GetNewMedicalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetMedicalData", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetMedicalData(ref System.Data.DataSet dst1, ref System.Data.DataSet dst2, ref System.Data.DataSet dst3, string RegistryID) {
            object[] results = this.Invoke("GetMedicalData", new object[] {
                        dst1,
                        dst2,
                        dst3,
                        RegistryID});
            dst1 = ((System.Data.DataSet)(results[0]));
            dst2 = ((System.Data.DataSet)(results[1]));
            dst3 = ((System.Data.DataSet)(results[2]));
        }
        
        /// <remarks/>
        public void GetMedicalDataAsync(System.Data.DataSet dst1, System.Data.DataSet dst2, System.Data.DataSet dst3, string RegistryID) {
            this.GetMedicalDataAsync(dst1, dst2, dst3, RegistryID, null);
        }
        
        /// <remarks/>
        public void GetMedicalDataAsync(System.Data.DataSet dst1, System.Data.DataSet dst2, System.Data.DataSet dst3, string RegistryID, object userState) {
            if ((this.GetMedicalDataOperationCompleted == null)) {
                this.GetMedicalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMedicalDataOperationCompleted);
            }
            this.InvokeAsync("GetMedicalData", new object[] {
                        dst1,
                        dst2,
                        dst3,
                        RegistryID}, this.GetMedicalDataOperationCompleted, userState);
        }
        
        private void OnGetMedicalDataOperationCompleted(object arg) {
            if ((this.GetMedicalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMedicalDataCompleted(this, new GetMedicalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetMedicalDataEx", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMedicalDataEx(string name, string para1) {
            object[] results = this.Invoke("GetMedicalDataEx", new object[] {
                        name,
                        para1});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMedicalDataExAsync(string name, string para1) {
            this.GetMedicalDataExAsync(name, para1, null);
        }
        
        /// <remarks/>
        public void GetMedicalDataExAsync(string name, string para1, object userState) {
            if ((this.GetMedicalDataExOperationCompleted == null)) {
                this.GetMedicalDataExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMedicalDataExOperationCompleted);
            }
            this.InvokeAsync("GetMedicalDataEx", new object[] {
                        name,
                        para1}, this.GetMedicalDataExOperationCompleted, userState);
        }
        
        private void OnGetMedicalDataExOperationCompleted(object arg) {
            if ((this.GetMedicalDataExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMedicalDataExCompleted(this, new GetMedicalDataExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetQCTableByMonthStatistics_PersonalEnd", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetQCTableByMonthStatistics_PersonalEnd(string startTime, string endTime, string strDepartment, string strDoctor) {
            object[] results = this.Invoke("GetQCTableByMonthStatistics_PersonalEnd", new object[] {
                        startTime,
                        endTime,
                        strDepartment,
                        strDoctor});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetQCTableByMonthStatistics_PersonalEndAsync(string startTime, string endTime, string strDepartment, string strDoctor) {
            this.GetQCTableByMonthStatistics_PersonalEndAsync(startTime, endTime, strDepartment, strDoctor, null);
        }
        
        /// <remarks/>
        public void GetQCTableByMonthStatistics_PersonalEndAsync(string startTime, string endTime, string strDepartment, string strDoctor, object userState) {
            if ((this.GetQCTableByMonthStatistics_PersonalEndOperationCompleted == null)) {
                this.GetQCTableByMonthStatistics_PersonalEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQCTableByMonthStatistics_PersonalEndOperationCompleted);
            }
            this.InvokeAsync("GetQCTableByMonthStatistics_PersonalEnd", new object[] {
                        startTime,
                        endTime,
                        strDepartment,
                        strDoctor}, this.GetQCTableByMonthStatistics_PersonalEndOperationCompleted, userState);
        }
        
        private void OnGetQCTableByMonthStatistics_PersonalEndOperationCompleted(object arg) {
            if ((this.GetQCTableByMonthStatistics_PersonalEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQCTableByMonthStatistics_PersonalEndCompleted(this, new GetQCTableByMonthStatistics_PersonalEndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetQCTableByMonthStatisticsEnd", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetQCTableByMonthStatisticsEnd(string startTime, string endTime, string strDepartment, string strDoctor) {
            object[] results = this.Invoke("GetQCTableByMonthStatisticsEnd", new object[] {
                        startTime,
                        endTime,
                        strDepartment,
                        strDoctor});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetQCTableByMonthStatisticsEndAsync(string startTime, string endTime, string strDepartment, string strDoctor) {
            this.GetQCTableByMonthStatisticsEndAsync(startTime, endTime, strDepartment, strDoctor, null);
        }
        
        /// <remarks/>
        public void GetQCTableByMonthStatisticsEndAsync(string startTime, string endTime, string strDepartment, string strDoctor, object userState) {
            if ((this.GetQCTableByMonthStatisticsEndOperationCompleted == null)) {
                this.GetQCTableByMonthStatisticsEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQCTableByMonthStatisticsEndOperationCompleted);
            }
            this.InvokeAsync("GetQCTableByMonthStatisticsEnd", new object[] {
                        startTime,
                        endTime,
                        strDepartment,
                        strDoctor}, this.GetQCTableByMonthStatisticsEndOperationCompleted, userState);
        }
        
        private void OnGetQCTableByMonthStatisticsEndOperationCompleted(object arg) {
            if ((this.GetQCTableByMonthStatisticsEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQCTableByMonthStatisticsEndCompleted(this, new GetQCTableByMonthStatisticsEndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/QueryPatientListEx", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode QueryPatientListEx(QueryMode mode, string criteria, bool inStyle) {
            object[] results = this.Invoke("QueryPatientListEx", new object[] {
                        mode,
                        criteria,
                        inStyle});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPatientListExAsync(QueryMode mode, string criteria, bool inStyle) {
            this.QueryPatientListExAsync(mode, criteria, inStyle, null);
        }
        
        /// <remarks/>
        public void QueryPatientListExAsync(QueryMode mode, string criteria, bool inStyle, object userState) {
            if ((this.QueryPatientListExOperationCompleted == null)) {
                this.QueryPatientListExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPatientListExOperationCompleted);
            }
            this.InvokeAsync("QueryPatientListEx", new object[] {
                        mode,
                        criteria,
                        inStyle}, this.QueryPatientListExOperationCompleted, userState);
        }
        
        private void OnQueryPatientListExOperationCompleted(object arg) {
            if ((this.QueryPatientListExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPatientListExCompleted(this, new QueryPatientListExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetPatientListByEmrstatusEx", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPatientListByEmrstatusEx(QueryMode mode, string criteria, bool archive) {
            object[] results = this.Invoke("GetPatientListByEmrstatusEx", new object[] {
                        mode,
                        criteria,
                        archive});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientListByEmrstatusExAsync(QueryMode mode, string criteria, bool archive) {
            this.GetPatientListByEmrstatusExAsync(mode, criteria, archive, null);
        }
        
        /// <remarks/>
        public void GetPatientListByEmrstatusExAsync(QueryMode mode, string criteria, bool archive, object userState) {
            if ((this.GetPatientListByEmrstatusExOperationCompleted == null)) {
                this.GetPatientListByEmrstatusExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientListByEmrstatusExOperationCompleted);
            }
            this.InvokeAsync("GetPatientListByEmrstatusEx", new object[] {
                        mode,
                        criteria,
                        archive}, this.GetPatientListByEmrstatusExOperationCompleted, userState);
        }
        
        private void OnGetPatientListByEmrstatusExOperationCompleted(object arg) {
            if ((this.GetPatientListByEmrstatusExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientListByEmrstatusExCompleted(this, new GetPatientListByEmrstatusExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/IsDischargedEx", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsDischargedEx(System.Xml.XmlNode inRegistryIDs, System.DateTime endDate, ref System.Xml.XmlNode outRegistryIDs) {
            object[] results = this.Invoke("IsDischargedEx", new object[] {
                        inRegistryIDs,
                        endDate,
                        outRegistryIDs});
            outRegistryIDs = ((System.Xml.XmlNode)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsDischargedExAsync(System.Xml.XmlNode inRegistryIDs, System.DateTime endDate, System.Xml.XmlNode outRegistryIDs) {
            this.IsDischargedExAsync(inRegistryIDs, endDate, outRegistryIDs, null);
        }
        
        /// <remarks/>
        public void IsDischargedExAsync(System.Xml.XmlNode inRegistryIDs, System.DateTime endDate, System.Xml.XmlNode outRegistryIDs, object userState) {
            if ((this.IsDischargedExOperationCompleted == null)) {
                this.IsDischargedExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsDischargedExOperationCompleted);
            }
            this.InvokeAsync("IsDischargedEx", new object[] {
                        inRegistryIDs,
                        endDate,
                        outRegistryIDs}, this.IsDischargedExOperationCompleted, userState);
        }
        
        private void OnIsDischargedExOperationCompleted(object arg) {
            if ((this.IsDischargedExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsDischargedExCompleted(this, new IsDischargedExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetDoctorLevel", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDoctorLevel(string opcode) {
            object[] results = this.Invoke("GetDoctorLevel", new object[] {
                        opcode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDoctorLevelAsync(string opcode) {
            this.GetDoctorLevelAsync(opcode, null);
        }
        
        /// <remarks/>
        public void GetDoctorLevelAsync(string opcode, object userState) {
            if ((this.GetDoctorLevelOperationCompleted == null)) {
                this.GetDoctorLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoctorLevelOperationCompleted);
            }
            this.InvokeAsync("GetDoctorLevel", new object[] {
                        opcode}, this.GetDoctorLevelOperationCompleted, userState);
        }
        
        private void OnGetDoctorLevelOperationCompleted(object arg) {
            if ((this.GetDoctorLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoctorLevelCompleted(this, new GetDoctorLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/CommposePatientListEx", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CommposePatientListEx(string criteria, bool archive) {
            object[] results = this.Invoke("CommposePatientListEx", new object[] {
                        criteria,
                        archive});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CommposePatientListExAsync(string criteria, bool archive) {
            this.CommposePatientListExAsync(criteria, archive, null);
        }
        
        /// <remarks/>
        public void CommposePatientListExAsync(string criteria, bool archive, object userState) {
            if ((this.CommposePatientListExOperationCompleted == null)) {
                this.CommposePatientListExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommposePatientListExOperationCompleted);
            }
            this.InvokeAsync("CommposePatientListEx", new object[] {
                        criteria,
                        archive}, this.CommposePatientListExOperationCompleted, userState);
        }
        
        private void OnCommposePatientListExOperationCompleted(object arg) {
            if ((this.CommposePatientListExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommposePatientListExCompleted(this, new CommposePatientListExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateNowEx", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ValuateNowEx() {
            object[] results = this.Invoke("ValuateNowEx", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateNowExAsync() {
            this.ValuateNowExAsync(null);
        }
        
        /// <remarks/>
        public void ValuateNowExAsync(object userState) {
            if ((this.ValuateNowExOperationCompleted == null)) {
                this.ValuateNowExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateNowExOperationCompleted);
            }
            this.InvokeAsync("ValuateNowEx", new object[0], this.ValuateNowExOperationCompleted, userState);
        }
        
        private void OnValuateNowExOperationCompleted(object arg) {
            if ((this.ValuateNowExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateNowExCompleted(this, new ValuateNowExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateNowISSH", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValuateNowISSH(string zyh) {
            object[] results = this.Invoke("ValuateNowISSH", new object[] {
                        zyh});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateNowISSHAsync(string zyh) {
            this.ValuateNowISSHAsync(zyh, null);
        }
        
        /// <remarks/>
        public void ValuateNowISSHAsync(string zyh, object userState) {
            if ((this.ValuateNowISSHOperationCompleted == null)) {
                this.ValuateNowISSHOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateNowISSHOperationCompleted);
            }
            this.InvokeAsync("ValuateNowISSH", new object[] {
                        zyh}, this.ValuateNowISSHOperationCompleted, userState);
        }
        
        private void OnValuateNowISSHOperationCompleted(object arg) {
            if ((this.ValuateNowISSHCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateNowISSHCompleted(this, new ValuateNowISSHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateEndIsCheck", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValuateEndIsCheck(string zyh) {
            object[] results = this.Invoke("ValuateEndIsCheck", new object[] {
                        zyh});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateEndIsCheckAsync(string zyh) {
            this.ValuateEndIsCheckAsync(zyh, null);
        }
        
        /// <remarks/>
        public void ValuateEndIsCheckAsync(string zyh, object userState) {
            if ((this.ValuateEndIsCheckOperationCompleted == null)) {
                this.ValuateEndIsCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateEndIsCheckOperationCompleted);
            }
            this.InvokeAsync("ValuateEndIsCheck", new object[] {
                        zyh}, this.ValuateEndIsCheckOperationCompleted, userState);
        }
        
        private void OnValuateEndIsCheckOperationCompleted(object arg) {
            if ((this.ValuateEndIsCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateEndIsCheckCompleted(this, new ValuateEndIsCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateNowBAPSBZ", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValuateNowBAPSBZ(string zyh) {
            object[] results = this.Invoke("ValuateNowBAPSBZ", new object[] {
                        zyh});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateNowBAPSBZAsync(string zyh) {
            this.ValuateNowBAPSBZAsync(zyh, null);
        }
        
        /// <remarks/>
        public void ValuateNowBAPSBZAsync(string zyh, object userState) {
            if ((this.ValuateNowBAPSBZOperationCompleted == null)) {
                this.ValuateNowBAPSBZOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateNowBAPSBZOperationCompleted);
            }
            this.InvokeAsync("ValuateNowBAPSBZ", new object[] {
                        zyh}, this.ValuateNowBAPSBZOperationCompleted, userState);
        }
        
        private void OnValuateNowBAPSBZOperationCompleted(object arg) {
            if ((this.ValuateNowBAPSBZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateNowBAPSBZCompleted(this, new ValuateNowBAPSBZCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateNowBAPSBZNew", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValuateNowBAPSBZNew(string zyh) {
            object[] results = this.Invoke("ValuateNowBAPSBZNew", new object[] {
                        zyh});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateNowBAPSBZNewAsync(string zyh) {
            this.ValuateNowBAPSBZNewAsync(zyh, null);
        }
        
        /// <remarks/>
        public void ValuateNowBAPSBZNewAsync(string zyh, object userState) {
            if ((this.ValuateNowBAPSBZNewOperationCompleted == null)) {
                this.ValuateNowBAPSBZNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateNowBAPSBZNewOperationCompleted);
            }
            this.InvokeAsync("ValuateNowBAPSBZNew", new object[] {
                        zyh}, this.ValuateNowBAPSBZNewOperationCompleted, userState);
        }
        
        private void OnValuateNowBAPSBZNewOperationCompleted(object arg) {
            if ((this.ValuateNowBAPSBZNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateNowBAPSBZNewCompleted(this, new ValuateNowBAPSBZNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateEndCheckInfo", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValuateEndCheckInfo(string zyh) {
            object[] results = this.Invoke("ValuateEndCheckInfo", new object[] {
                        zyh});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateEndCheckInfoAsync(string zyh) {
            this.ValuateEndCheckInfoAsync(zyh, null);
        }
        
        /// <remarks/>
        public void ValuateEndCheckInfoAsync(string zyh, object userState) {
            if ((this.ValuateEndCheckInfoOperationCompleted == null)) {
                this.ValuateEndCheckInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateEndCheckInfoOperationCompleted);
            }
            this.InvokeAsync("ValuateEndCheckInfo", new object[] {
                        zyh}, this.ValuateEndCheckInfoOperationCompleted, userState);
        }
        
        private void OnValuateEndCheckInfoOperationCompleted(object arg) {
            if ((this.ValuateEndCheckInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateEndCheckInfoCompleted(this, new ValuateEndCheckInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateNowSH", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValuateNowSH(string zyh, string shry, string shrq, System.Xml.XmlNode xmg) {
            object[] results = this.Invoke("ValuateNowSH", new object[] {
                        zyh,
                        shry,
                        shrq,
                        xmg});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateNowSHAsync(string zyh, string shry, string shrq, System.Xml.XmlNode xmg) {
            this.ValuateNowSHAsync(zyh, shry, shrq, xmg, null);
        }
        
        /// <remarks/>
        public void ValuateNowSHAsync(string zyh, string shry, string shrq, System.Xml.XmlNode xmg, object userState) {
            if ((this.ValuateNowSHOperationCompleted == null)) {
                this.ValuateNowSHOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateNowSHOperationCompleted);
            }
            this.InvokeAsync("ValuateNowSH", new object[] {
                        zyh,
                        shry,
                        shrq,
                        xmg}, this.ValuateNowSHOperationCompleted, userState);
        }
        
        private void OnValuateNowSHOperationCompleted(object arg) {
            if ((this.ValuateNowSHCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateNowSHCompleted(this, new ValuateNowSHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateEndSH", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValuateEndSH(string zyh, string shry, string shrq, System.Xml.XmlNode xmg) {
            object[] results = this.Invoke("ValuateEndSH", new object[] {
                        zyh,
                        shry,
                        shrq,
                        xmg});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateEndSHAsync(string zyh, string shry, string shrq, System.Xml.XmlNode xmg) {
            this.ValuateEndSHAsync(zyh, shry, shrq, xmg, null);
        }
        
        /// <remarks/>
        public void ValuateEndSHAsync(string zyh, string shry, string shrq, System.Xml.XmlNode xmg, object userState) {
            if ((this.ValuateEndSHOperationCompleted == null)) {
                this.ValuateEndSHOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateEndSHOperationCompleted);
            }
            this.InvokeAsync("ValuateEndSH", new object[] {
                        zyh,
                        shry,
                        shrq,
                        xmg}, this.ValuateEndSHOperationCompleted, userState);
        }
        
        private void OnValuateEndSHOperationCompleted(object arg) {
            if ((this.ValuateEndSHCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateEndSHCompleted(this, new ValuateEndSHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateEndCheck", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValuateEndCheck(string zyh, string shry, string shrq, System.Xml.XmlNode xmg) {
            object[] results = this.Invoke("ValuateEndCheck", new object[] {
                        zyh,
                        shry,
                        shrq,
                        xmg});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateEndCheckAsync(string zyh, string shry, string shrq, System.Xml.XmlNode xmg) {
            this.ValuateEndCheckAsync(zyh, shry, shrq, xmg, null);
        }
        
        /// <remarks/>
        public void ValuateEndCheckAsync(string zyh, string shry, string shrq, System.Xml.XmlNode xmg, object userState) {
            if ((this.ValuateEndCheckOperationCompleted == null)) {
                this.ValuateEndCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateEndCheckOperationCompleted);
            }
            this.InvokeAsync("ValuateEndCheck", new object[] {
                        zyh,
                        shry,
                        shrq,
                        xmg}, this.ValuateEndCheckOperationCompleted, userState);
        }
        
        private void OnValuateEndCheckOperationCompleted(object arg) {
            if ((this.ValuateEndCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateEndCheckCompleted(this, new ValuateEndCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateNowPSHis", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValuateNowPSHis(System.Xml.XmlNode xmg, string shry, string shrq) {
            object[] results = this.Invoke("ValuateNowPSHis", new object[] {
                        xmg,
                        shry,
                        shrq});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateNowPSHisAsync(System.Xml.XmlNode xmg, string shry, string shrq) {
            this.ValuateNowPSHisAsync(xmg, shry, shrq, null);
        }
        
        /// <remarks/>
        public void ValuateNowPSHisAsync(System.Xml.XmlNode xmg, string shry, string shrq, object userState) {
            if ((this.ValuateNowPSHisOperationCompleted == null)) {
                this.ValuateNowPSHisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateNowPSHisOperationCompleted);
            }
            this.InvokeAsync("ValuateNowPSHis", new object[] {
                        xmg,
                        shry,
                        shrq}, this.ValuateNowPSHisOperationCompleted, userState);
        }
        
        private void OnValuateNowPSHisOperationCompleted(object arg) {
            if ((this.ValuateNowPSHisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateNowPSHisCompleted(this, new ValuateNowPSHisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateNowPS", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValuateNowPS(System.Xml.XmlNode xmg) {
            object[] results = this.Invoke("ValuateNowPS", new object[] {
                        xmg});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateNowPSAsync(System.Xml.XmlNode xmg) {
            this.ValuateNowPSAsync(xmg, null);
        }
        
        /// <remarks/>
        public void ValuateNowPSAsync(System.Xml.XmlNode xmg, object userState) {
            if ((this.ValuateNowPSOperationCompleted == null)) {
                this.ValuateNowPSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateNowPSOperationCompleted);
            }
            this.InvokeAsync("ValuateNowPS", new object[] {
                        xmg}, this.ValuateNowPSOperationCompleted, userState);
        }
        
        private void OnValuateNowPSOperationCompleted(object arg) {
            if ((this.ValuateNowPSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateNowPSCompleted(this, new ValuateNowPSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ValuateEndPs", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValuateEndPs(System.Xml.XmlNode xmg) {
            object[] results = this.Invoke("ValuateEndPs", new object[] {
                        xmg});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateEndPsAsync(System.Xml.XmlNode xmg) {
            this.ValuateEndPsAsync(xmg, null);
        }
        
        /// <remarks/>
        public void ValuateEndPsAsync(System.Xml.XmlNode xmg, object userState) {
            if ((this.ValuateEndPsOperationCompleted == null)) {
                this.ValuateEndPsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateEndPsOperationCompleted);
            }
            this.InvokeAsync("ValuateEndPs", new object[] {
                        xmg}, this.ValuateEndPsOperationCompleted, userState);
        }
        
        private void OnValuateEndPsOperationCompleted(object arg) {
            if ((this.ValuateEndPsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateEndPsCompleted(this, new ValuateEndPsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/DoctorNameList", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DoctorNameList() {
            object[] results = this.Invoke("DoctorNameList", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DoctorNameListAsync() {
            this.DoctorNameListAsync(null);
        }
        
        /// <remarks/>
        public void DoctorNameListAsync(object userState) {
            if ((this.DoctorNameListOperationCompleted == null)) {
                this.DoctorNameListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoctorNameListOperationCompleted);
            }
            this.InvokeAsync("DoctorNameList", new object[0], this.DoctorNameListOperationCompleted, userState);
        }
        
        private void OnDoctorNameListOperationCompleted(object arg) {
            if ((this.DoctorNameListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoctorNameListCompleted(this, new DoctorNameListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/DoctorList", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DoctorList() {
            object[] results = this.Invoke("DoctorList", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DoctorListAsync() {
            this.DoctorListAsync(null);
        }
        
        /// <remarks/>
        public void DoctorListAsync(object userState) {
            if ((this.DoctorListOperationCompleted == null)) {
                this.DoctorListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoctorListOperationCompleted);
            }
            this.InvokeAsync("DoctorList", new object[0], this.DoctorListOperationCompleted, userState);
        }
        
        private void OnDoctorListOperationCompleted(object arg) {
            if ((this.DoctorListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoctorListCompleted(this, new DoctorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/DoctorListEmr", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DoctorListEmr(string Type) {
            object[] results = this.Invoke("DoctorListEmr", new object[] {
                        Type});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DoctorListEmrAsync(string Type) {
            this.DoctorListEmrAsync(Type, null);
        }
        
        /// <remarks/>
        public void DoctorListEmrAsync(string Type, object userState) {
            if ((this.DoctorListEmrOperationCompleted == null)) {
                this.DoctorListEmrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoctorListEmrOperationCompleted);
            }
            this.InvokeAsync("DoctorListEmr", new object[] {
                        Type}, this.DoctorListEmrOperationCompleted, userState);
        }
        
        private void OnDoctorListEmrOperationCompleted(object arg) {
            if ((this.DoctorListEmrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoctorListEmrCompleted(this, new DoctorListEmrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/DoctorListEx", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DoctorListEx() {
            object[] results = this.Invoke("DoctorListEx", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DoctorListExAsync() {
            this.DoctorListExAsync(null);
        }
        
        /// <remarks/>
        public void DoctorListExAsync(object userState) {
            if ((this.DoctorListExOperationCompleted == null)) {
                this.DoctorListExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoctorListExOperationCompleted);
            }
            this.InvokeAsync("DoctorListEx", new object[0], this.DoctorListExOperationCompleted, userState);
        }
        
        private void OnDoctorListExOperationCompleted(object arg) {
            if ((this.DoctorListExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoctorListExCompleted(this, new DoctorListExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/LevelEx", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LevelEx(string strLevel) {
            object[] results = this.Invoke("LevelEx", new object[] {
                        strLevel});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LevelExAsync(string strLevel) {
            this.LevelExAsync(strLevel, null);
        }
        
        /// <remarks/>
        public void LevelExAsync(string strLevel, object userState) {
            if ((this.LevelExOperationCompleted == null)) {
                this.LevelExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLevelExOperationCompleted);
            }
            this.InvokeAsync("LevelEx", new object[] {
                        strLevel}, this.LevelExOperationCompleted, userState);
        }
        
        private void OnLevelExOperationCompleted(object arg) {
            if ((this.LevelExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LevelExCompleted(this, new LevelExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/OperatorType", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable OperatorType() {
            object[] results = this.Invoke("OperatorType", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void OperatorTypeAsync() {
            this.OperatorTypeAsync(null);
        }
        
        /// <remarks/>
        public void OperatorTypeAsync(object userState) {
            if ((this.OperatorTypeOperationCompleted == null)) {
                this.OperatorTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOperatorTypeOperationCompleted);
            }
            this.InvokeAsync("OperatorType", new object[0], this.OperatorTypeOperationCompleted, userState);
        }
        
        private void OnOperatorTypeOperationCompleted(object arg) {
            if ((this.OperatorTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OperatorTypeCompleted(this, new OperatorTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetDoctorType", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDoctorType(string strOpCode) {
            object[] results = this.Invoke("GetDoctorType", new object[] {
                        strOpCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDoctorTypeAsync(string strOpCode) {
            this.GetDoctorTypeAsync(strOpCode, null);
        }
        
        /// <remarks/>
        public void GetDoctorTypeAsync(string strOpCode, object userState) {
            if ((this.GetDoctorTypeOperationCompleted == null)) {
                this.GetDoctorTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoctorTypeOperationCompleted);
            }
            this.InvokeAsync("GetDoctorType", new object[] {
                        strOpCode}, this.GetDoctorTypeOperationCompleted, userState);
        }
        
        private void OnGetDoctorTypeOperationCompleted(object arg) {
            if ((this.GetDoctorTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoctorTypeCompleted(this, new GetDoctorTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/PatientList", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PatientList(PatientGettingMode mode, string code) {
            object[] results = this.Invoke("PatientList", new object[] {
                        mode,
                        code});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PatientListAsync(PatientGettingMode mode, string code) {
            this.PatientListAsync(mode, code, null);
        }
        
        /// <remarks/>
        public void PatientListAsync(PatientGettingMode mode, string code, object userState) {
            if ((this.PatientListOperationCompleted == null)) {
                this.PatientListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientListOperationCompleted);
            }
            this.InvokeAsync("PatientList", new object[] {
                        mode,
                        code}, this.PatientListOperationCompleted, userState);
        }
        
        private void OnPatientListOperationCompleted(object arg) {
            if ((this.PatientListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientListCompleted(this, new PatientListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/PatientListExEx", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PatientListExEx(string Deptcode, string opcode, OrderByMode bymode) {
            object[] results = this.Invoke("PatientListExEx", new object[] {
                        Deptcode,
                        opcode,
                        bymode});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PatientListExExAsync(string Deptcode, string opcode, OrderByMode bymode) {
            this.PatientListExExAsync(Deptcode, opcode, bymode, null);
        }
        
        /// <remarks/>
        public void PatientListExExAsync(string Deptcode, string opcode, OrderByMode bymode, object userState) {
            if ((this.PatientListExExOperationCompleted == null)) {
                this.PatientListExExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientListExExOperationCompleted);
            }
            this.InvokeAsync("PatientListExEx", new object[] {
                        Deptcode,
                        opcode,
                        bymode}, this.PatientListExExOperationCompleted, userState);
        }
        
        private void OnPatientListExExOperationCompleted(object arg) {
            if ((this.PatientListExExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientListExExCompleted(this, new PatientListExExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/PatientListExExEx", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PatientListExExEx(string Deptcode, string opcode, OrderByMode bymode) {
            object[] results = this.Invoke("PatientListExExEx", new object[] {
                        Deptcode,
                        opcode,
                        bymode});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PatientListExExExAsync(string Deptcode, string opcode, OrderByMode bymode) {
            this.PatientListExExExAsync(Deptcode, opcode, bymode, null);
        }
        
        /// <remarks/>
        public void PatientListExExExAsync(string Deptcode, string opcode, OrderByMode bymode, object userState) {
            if ((this.PatientListExExExOperationCompleted == null)) {
                this.PatientListExExExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientListExExExOperationCompleted);
            }
            this.InvokeAsync("PatientListExExEx", new object[] {
                        Deptcode,
                        opcode,
                        bymode}, this.PatientListExExExOperationCompleted, userState);
        }
        
        private void OnPatientListExExExOperationCompleted(object arg) {
            if ((this.PatientListExExExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientListExExExCompleted(this, new PatientListExExExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/DoneTimeForConsultExEx", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DoneTimeForConsultExEx(string registryID, string Sequence, ref System.Xml.XmlNode doneTime) {
            object[] results = this.Invoke("DoneTimeForConsultExEx", new object[] {
                        registryID,
                        Sequence,
                        doneTime});
            doneTime = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DoneTimeForConsultExExAsync(string registryID, string Sequence, System.Xml.XmlNode doneTime) {
            this.DoneTimeForConsultExExAsync(registryID, Sequence, doneTime, null);
        }
        
        /// <remarks/>
        public void DoneTimeForConsultExExAsync(string registryID, string Sequence, System.Xml.XmlNode doneTime, object userState) {
            if ((this.DoneTimeForConsultExExOperationCompleted == null)) {
                this.DoneTimeForConsultExExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoneTimeForConsultExExOperationCompleted);
            }
            this.InvokeAsync("DoneTimeForConsultExEx", new object[] {
                        registryID,
                        Sequence,
                        doneTime}, this.DoneTimeForConsultExExOperationCompleted, userState);
        }
        
        private void OnDoneTimeForConsultExExOperationCompleted(object arg) {
            if ((this.DoneTimeForConsultExExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoneTimeForConsultExExCompleted(this, new DoneTimeForConsultExExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/PatientListEx", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PatientListEx(PatientGettingMode mode, string code, OrderByMode bymode) {
            object[] results = this.Invoke("PatientListEx", new object[] {
                        mode,
                        code,
                        bymode});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PatientListExAsync(PatientGettingMode mode, string code, OrderByMode bymode) {
            this.PatientListExAsync(mode, code, bymode, null);
        }
        
        /// <remarks/>
        public void PatientListExAsync(PatientGettingMode mode, string code, OrderByMode bymode, object userState) {
            if ((this.PatientListExOperationCompleted == null)) {
                this.PatientListExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientListExOperationCompleted);
            }
            this.InvokeAsync("PatientListEx", new object[] {
                        mode,
                        code,
                        bymode}, this.PatientListExOperationCompleted, userState);
        }
        
        private void OnPatientListExOperationCompleted(object arg) {
            if ((this.PatientListExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientListExCompleted(this, new PatientListExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/PatientListEr", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PatientListEr(PatientGettingMode mode, string code, OrderByMode bymode) {
            object[] results = this.Invoke("PatientListEr", new object[] {
                        mode,
                        code,
                        bymode});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PatientListErAsync(PatientGettingMode mode, string code, OrderByMode bymode) {
            this.PatientListErAsync(mode, code, bymode, null);
        }
        
        /// <remarks/>
        public void PatientListErAsync(PatientGettingMode mode, string code, OrderByMode bymode, object userState) {
            if ((this.PatientListErOperationCompleted == null)) {
                this.PatientListErOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientListErOperationCompleted);
            }
            this.InvokeAsync("PatientListEr", new object[] {
                        mode,
                        code,
                        bymode}, this.PatientListErOperationCompleted, userState);
        }
        
        private void OnPatientListErOperationCompleted(object arg) {
            if ((this.PatientListErCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientListErCompleted(this, new PatientListErCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/PatientListEx1", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PatientListEx1(PatientGettingMode mode, string code, OrderByMode bymode) {
            object[] results = this.Invoke("PatientListEx1", new object[] {
                        mode,
                        code,
                        bymode});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PatientListEx1Async(PatientGettingMode mode, string code, OrderByMode bymode) {
            this.PatientListEx1Async(mode, code, bymode, null);
        }
        
        /// <remarks/>
        public void PatientListEx1Async(PatientGettingMode mode, string code, OrderByMode bymode, object userState) {
            if ((this.PatientListEx1OperationCompleted == null)) {
                this.PatientListEx1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientListEx1OperationCompleted);
            }
            this.InvokeAsync("PatientListEx1", new object[] {
                        mode,
                        code,
                        bymode}, this.PatientListEx1OperationCompleted, userState);
        }
        
        private void OnPatientListEx1OperationCompleted(object arg) {
            if ((this.PatientListEx1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientListEx1Completed(this, new PatientListEx1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/PatientListExA", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PatientListExA(PatientGettingMode mode, string code, OrderByMode bymode) {
            object[] results = this.Invoke("PatientListExA", new object[] {
                        mode,
                        code,
                        bymode});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PatientListExAAsync(PatientGettingMode mode, string code, OrderByMode bymode) {
            this.PatientListExAAsync(mode, code, bymode, null);
        }
        
        /// <remarks/>
        public void PatientListExAAsync(PatientGettingMode mode, string code, OrderByMode bymode, object userState) {
            if ((this.PatientListExAOperationCompleted == null)) {
                this.PatientListExAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientListExAOperationCompleted);
            }
            this.InvokeAsync("PatientListExA", new object[] {
                        mode,
                        code,
                        bymode}, this.PatientListExAOperationCompleted, userState);
        }
        
        private void OnPatientListExAOperationCompleted(object arg) {
            if ((this.PatientListExACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientListExACompleted(this, new PatientListExACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/PatientListExConsult", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PatientListExConsult(PatientGettingMode mode, string code, OrderByMode bymode) {
            object[] results = this.Invoke("PatientListExConsult", new object[] {
                        mode,
                        code,
                        bymode});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PatientListExConsultAsync(PatientGettingMode mode, string code, OrderByMode bymode) {
            this.PatientListExConsultAsync(mode, code, bymode, null);
        }
        
        /// <remarks/>
        public void PatientListExConsultAsync(PatientGettingMode mode, string code, OrderByMode bymode, object userState) {
            if ((this.PatientListExConsultOperationCompleted == null)) {
                this.PatientListExConsultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientListExConsultOperationCompleted);
            }
            this.InvokeAsync("PatientListExConsult", new object[] {
                        mode,
                        code,
                        bymode}, this.PatientListExConsultOperationCompleted, userState);
        }
        
        private void OnPatientListExConsultOperationCompleted(object arg) {
            if ((this.PatientListExConsultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientListExConsultCompleted(this, new PatientListExConsultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/PatientListFromRegistryIDs", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PatientListFromRegistryIDs(System.Xml.XmlNode registryIDs) {
            object[] results = this.Invoke("PatientListFromRegistryIDs", new object[] {
                        registryIDs});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PatientListFromRegistryIDsAsync(System.Xml.XmlNode registryIDs) {
            this.PatientListFromRegistryIDsAsync(registryIDs, null);
        }
        
        /// <remarks/>
        public void PatientListFromRegistryIDsAsync(System.Xml.XmlNode registryIDs, object userState) {
            if ((this.PatientListFromRegistryIDsOperationCompleted == null)) {
                this.PatientListFromRegistryIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientListFromRegistryIDsOperationCompleted);
            }
            this.InvokeAsync("PatientListFromRegistryIDs", new object[] {
                        registryIDs}, this.PatientListFromRegistryIDsOperationCompleted, userState);
        }
        
        private void OnPatientListFromRegistryIDsOperationCompleted(object arg) {
            if ((this.PatientListFromRegistryIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientListFromRegistryIDsCompleted(this, new PatientListFromRegistryIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/QueryPatientList", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode QueryPatientList(QueryMode mode, string criteria, bool inStyle) {
            object[] results = this.Invoke("QueryPatientList", new object[] {
                        mode,
                        criteria,
                        inStyle});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPatientListAsync(QueryMode mode, string criteria, bool inStyle) {
            this.QueryPatientListAsync(mode, criteria, inStyle, null);
        }
        
        /// <remarks/>
        public void QueryPatientListAsync(QueryMode mode, string criteria, bool inStyle, object userState) {
            if ((this.QueryPatientListOperationCompleted == null)) {
                this.QueryPatientListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPatientListOperationCompleted);
            }
            this.InvokeAsync("QueryPatientList", new object[] {
                        mode,
                        criteria,
                        inStyle}, this.QueryPatientListOperationCompleted, userState);
        }
        
        private void OnQueryPatientListOperationCompleted(object arg) {
            if ((this.QueryPatientListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPatientListCompleted(this, new QueryPatientListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/QueryPatientListJH", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode QueryPatientListJH(QueryMode mode, string criteria, bool inStyle, string departID) {
            object[] results = this.Invoke("QueryPatientListJH", new object[] {
                        mode,
                        criteria,
                        inStyle,
                        departID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPatientListJHAsync(QueryMode mode, string criteria, bool inStyle, string departID) {
            this.QueryPatientListJHAsync(mode, criteria, inStyle, departID, null);
        }
        
        /// <remarks/>
        public void QueryPatientListJHAsync(QueryMode mode, string criteria, bool inStyle, string departID, object userState) {
            if ((this.QueryPatientListJHOperationCompleted == null)) {
                this.QueryPatientListJHOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPatientListJHOperationCompleted);
            }
            this.InvokeAsync("QueryPatientListJH", new object[] {
                        mode,
                        criteria,
                        inStyle,
                        departID}, this.QueryPatientListJHOperationCompleted, userState);
        }
        
        private void OnQueryPatientListJHOperationCompleted(object arg) {
            if ((this.QueryPatientListJHCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPatientListJHCompleted(this, new QueryPatientListJHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/CommposePatientList", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CommposePatientList(string criteria, bool archive) {
            object[] results = this.Invoke("CommposePatientList", new object[] {
                        criteria,
                        archive});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CommposePatientListAsync(string criteria, bool archive) {
            this.CommposePatientListAsync(criteria, archive, null);
        }
        
        /// <remarks/>
        public void CommposePatientListAsync(string criteria, bool archive, object userState) {
            if ((this.CommposePatientListOperationCompleted == null)) {
                this.CommposePatientListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommposePatientListOperationCompleted);
            }
            this.InvokeAsync("CommposePatientList", new object[] {
                        criteria,
                        archive}, this.CommposePatientListOperationCompleted, userState);
        }
        
        private void OnCommposePatientListOperationCompleted(object arg) {
            if ((this.CommposePatientListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommposePatientListCompleted(this, new CommposePatientListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetGroupOwner", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGroupOwner(string strDoctorID) {
            object[] results = this.Invoke("GetGroupOwner", new object[] {
                        strDoctorID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupOwnerAsync(string strDoctorID) {
            this.GetGroupOwnerAsync(strDoctorID, null);
        }
        
        /// <remarks/>
        public void GetGroupOwnerAsync(string strDoctorID, object userState) {
            if ((this.GetGroupOwnerOperationCompleted == null)) {
                this.GetGroupOwnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupOwnerOperationCompleted);
            }
            this.InvokeAsync("GetGroupOwner", new object[] {
                        strDoctorID}, this.GetGroupOwnerOperationCompleted, userState);
        }
        
        private void OnGetGroupOwnerOperationCompleted(object arg) {
            if ((this.GetGroupOwnerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupOwnerCompleted(this, new GetGroupOwnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetOperatorName1", RequestElementName="GetOperatorName1", RequestNamespace="http://shoujia.org/emrpatients", ResponseElementName="GetOperatorName1Response", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetOperatorName1Result")]
        public bool GetOperatorName(string opcode, ref string opname, ref string passwd, ref string department, ref string departname) {
            object[] results = this.Invoke("GetOperatorName", new object[] {
                        opcode,
                        opname,
                        passwd,
                        department,
                        departname});
            opname = ((string)(results[1]));
            passwd = ((string)(results[2]));
            department = ((string)(results[3]));
            departname = ((string)(results[4]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetOperatorNameAsync(string opcode, string opname, string passwd, string department, string departname) {
            this.GetOperatorNameAsync(opcode, opname, passwd, department, departname, null);
        }
        
        /// <remarks/>
        public void GetOperatorNameAsync(string opcode, string opname, string passwd, string department, string departname, object userState) {
            if ((this.GetOperatorNameOperationCompleted == null)) {
                this.GetOperatorNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperatorNameOperationCompleted);
            }
            this.InvokeAsync("GetOperatorName", new object[] {
                        opcode,
                        opname,
                        passwd,
                        department,
                        departname}, this.GetOperatorNameOperationCompleted, userState);
        }
        
        private void OnGetOperatorNameOperationCompleted(object arg) {
            if ((this.GetOperatorNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperatorNameCompleted(this, new GetOperatorNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetOperatorNameBq", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetOperatorNameBq(string opcode, ref string opname, ref string passwd, ref string department, ref string departname, ref string AreaCode) {
            object[] results = this.Invoke("GetOperatorNameBq", new object[] {
                        opcode,
                        opname,
                        passwd,
                        department,
                        departname,
                        AreaCode});
            opname = ((string)(results[1]));
            passwd = ((string)(results[2]));
            department = ((string)(results[3]));
            departname = ((string)(results[4]));
            AreaCode = ((string)(results[5]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetOperatorNameBqAsync(string opcode, string opname, string passwd, string department, string departname, string AreaCode) {
            this.GetOperatorNameBqAsync(opcode, opname, passwd, department, departname, AreaCode, null);
        }
        
        /// <remarks/>
        public void GetOperatorNameBqAsync(string opcode, string opname, string passwd, string department, string departname, string AreaCode, object userState) {
            if ((this.GetOperatorNameBqOperationCompleted == null)) {
                this.GetOperatorNameBqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperatorNameBqOperationCompleted);
            }
            this.InvokeAsync("GetOperatorNameBq", new object[] {
                        opcode,
                        opname,
                        passwd,
                        department,
                        departname,
                        AreaCode}, this.GetOperatorNameBqOperationCompleted, userState);
        }
        
        private void OnGetOperatorNameBqOperationCompleted(object arg) {
            if ((this.GetOperatorNameBqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperatorNameBqCompleted(this, new GetOperatorNameBqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetOperatorName1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetOperatorName2", RequestElementName="GetOperatorName2", RequestNamespace="http://shoujia.org/emrpatients", ResponseElementName="GetOperatorName2Response", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetOperatorName2Result")]
        public bool GetOperatorName(string opcode, ref string opname, ref string passwd, ref string department) {
            object[] results = this.Invoke("GetOperatorName1", new object[] {
                        opcode,
                        opname,
                        passwd,
                        department});
            opname = ((string)(results[1]));
            passwd = ((string)(results[2]));
            department = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetOperatorName1Async(string opcode, string opname, string passwd, string department) {
            this.GetOperatorName1Async(opcode, opname, passwd, department, null);
        }
        
        /// <remarks/>
        public void GetOperatorName1Async(string opcode, string opname, string passwd, string department, object userState) {
            if ((this.GetOperatorName1OperationCompleted == null)) {
                this.GetOperatorName1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperatorName1OperationCompleted);
            }
            this.InvokeAsync("GetOperatorName1", new object[] {
                        opcode,
                        opname,
                        passwd,
                        department}, this.GetOperatorName1OperationCompleted, userState);
        }
        
        private void OnGetOperatorName1OperationCompleted(object arg) {
            if ((this.GetOperatorName1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperatorName1Completed(this, new GetOperatorName1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/AuthenticChek", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AuthenticChek(string opcode, ref string opname, ref string passwd) {
            object[] results = this.Invoke("AuthenticChek", new object[] {
                        opcode,
                        opname,
                        passwd});
            opname = ((string)(results[1]));
            passwd = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticChekAsync(string opcode, string opname, string passwd) {
            this.AuthenticChekAsync(opcode, opname, passwd, null);
        }
        
        /// <remarks/>
        public void AuthenticChekAsync(string opcode, string opname, string passwd, object userState) {
            if ((this.AuthenticChekOperationCompleted == null)) {
                this.AuthenticChekOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticChekOperationCompleted);
            }
            this.InvokeAsync("AuthenticChek", new object[] {
                        opcode,
                        opname,
                        passwd}, this.AuthenticChekOperationCompleted, userState);
        }
        
        private void OnAuthenticChekOperationCompleted(object arg) {
            if ((this.AuthenticChekCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticChekCompleted(this, new AuthenticChekCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetDepartmentListByMode", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetDepartmentListByMode(WorkMode mode) {
            object[] results = this.Invoke("GetDepartmentListByMode", new object[] {
                        mode});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentListByModeAsync(WorkMode mode) {
            this.GetDepartmentListByModeAsync(mode, null);
        }
        
        /// <remarks/>
        public void GetDepartmentListByModeAsync(WorkMode mode, object userState) {
            if ((this.GetDepartmentListByModeOperationCompleted == null)) {
                this.GetDepartmentListByModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentListByModeOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentListByMode", new object[] {
                        mode}, this.GetDepartmentListByModeOperationCompleted, userState);
        }
        
        private void OnGetDepartmentListByModeOperationCompleted(object arg) {
            if ((this.GetDepartmentListByModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentListByModeCompleted(this, new GetDepartmentListByModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetAreaCodeOfDepartment", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAreaCodeOfDepartment(string departmentCode) {
            object[] results = this.Invoke("GetAreaCodeOfDepartment", new object[] {
                        departmentCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAreaCodeOfDepartmentAsync(string departmentCode) {
            this.GetAreaCodeOfDepartmentAsync(departmentCode, null);
        }
        
        /// <remarks/>
        public void GetAreaCodeOfDepartmentAsync(string departmentCode, object userState) {
            if ((this.GetAreaCodeOfDepartmentOperationCompleted == null)) {
                this.GetAreaCodeOfDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAreaCodeOfDepartmentOperationCompleted);
            }
            this.InvokeAsync("GetAreaCodeOfDepartment", new object[] {
                        departmentCode}, this.GetAreaCodeOfDepartmentOperationCompleted, userState);
        }
        
        private void OnGetAreaCodeOfDepartmentOperationCompleted(object arg) {
            if ((this.GetAreaCodeOfDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAreaCodeOfDepartmentCompleted(this, new GetAreaCodeOfDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetDepartmentName", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDepartmentName(string departmentCode) {
            object[] results = this.Invoke("GetDepartmentName", new object[] {
                        departmentCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentNameAsync(string departmentCode) {
            this.GetDepartmentNameAsync(departmentCode, null);
        }
        
        /// <remarks/>
        public void GetDepartmentNameAsync(string departmentCode, object userState) {
            if ((this.GetDepartmentNameOperationCompleted == null)) {
                this.GetDepartmentNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentNameOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentName", new object[] {
                        departmentCode}, this.GetDepartmentNameOperationCompleted, userState);
        }
        
        private void OnGetDepartmentNameOperationCompleted(object arg) {
            if ((this.GetDepartmentNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentNameCompleted(this, new GetDepartmentNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetAreas", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAreas() {
            object[] results = this.Invoke("GetAreas", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAreasAsync() {
            this.GetAreasAsync(null);
        }
        
        /// <remarks/>
        public void GetAreasAsync(object userState) {
            if ((this.GetAreasOperationCompleted == null)) {
                this.GetAreasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAreasOperationCompleted);
            }
            this.InvokeAsync("GetAreas", new object[0], this.GetAreasOperationCompleted, userState);
        }
        
        private void OnGetAreasOperationCompleted(object arg) {
            if ((this.GetAreasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAreasCompleted(this, new GetAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetTestsAndExams", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetTestsAndExams(string registryID, bool inStyle) {
            object[] results = this.Invoke("GetTestsAndExams", new object[] {
                        registryID,
                        inStyle});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetTestsAndExamsAsync(string registryID, bool inStyle) {
            this.GetTestsAndExamsAsync(registryID, inStyle, null);
        }
        
        /// <remarks/>
        public void GetTestsAndExamsAsync(string registryID, bool inStyle, object userState) {
            if ((this.GetTestsAndExamsOperationCompleted == null)) {
                this.GetTestsAndExamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTestsAndExamsOperationCompleted);
            }
            this.InvokeAsync("GetTestsAndExams", new object[] {
                        registryID,
                        inStyle}, this.GetTestsAndExamsOperationCompleted, userState);
        }
        
        private void OnGetTestsAndExamsOperationCompleted(object arg) {
            if ((this.GetTestsAndExamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTestsAndExamsCompleted(this, new GetTestsAndExamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetDoctorOrders", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetDoctorOrders(string registryID, bool inStyle) {
            object[] results = this.Invoke("GetDoctorOrders", new object[] {
                        registryID,
                        inStyle});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetDoctorOrdersAsync(string registryID, bool inStyle) {
            this.GetDoctorOrdersAsync(registryID, inStyle, null);
        }
        
        /// <remarks/>
        public void GetDoctorOrdersAsync(string registryID, bool inStyle, object userState) {
            if ((this.GetDoctorOrdersOperationCompleted == null)) {
                this.GetDoctorOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoctorOrdersOperationCompleted);
            }
            this.InvokeAsync("GetDoctorOrders", new object[] {
                        registryID,
                        inStyle}, this.GetDoctorOrdersOperationCompleted, userState);
        }
        
        private void OnGetDoctorOrdersOperationCompleted(object arg) {
            if ((this.GetDoctorOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoctorOrdersCompleted(this, new GetDoctorOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetDoctorOrdersEx", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetDoctorOrdersEx(string registryID, bool inStyle) {
            object[] results = this.Invoke("GetDoctorOrdersEx", new object[] {
                        registryID,
                        inStyle});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetDoctorOrdersExAsync(string registryID, bool inStyle) {
            this.GetDoctorOrdersExAsync(registryID, inStyle, null);
        }
        
        /// <remarks/>
        public void GetDoctorOrdersExAsync(string registryID, bool inStyle, object userState) {
            if ((this.GetDoctorOrdersExOperationCompleted == null)) {
                this.GetDoctorOrdersExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoctorOrdersExOperationCompleted);
            }
            this.InvokeAsync("GetDoctorOrdersEx", new object[] {
                        registryID,
                        inStyle}, this.GetDoctorOrdersExOperationCompleted, userState);
        }
        
        private void OnGetDoctorOrdersExOperationCompleted(object arg) {
            if ((this.GetDoctorOrdersExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoctorOrdersExCompleted(this, new GetDoctorOrdersExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetDoctorOrdersDischargedEx", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetDoctorOrdersDischargedEx(string registryID) {
            object[] results = this.Invoke("GetDoctorOrdersDischargedEx", new object[] {
                        registryID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetDoctorOrdersDischargedExAsync(string registryID) {
            this.GetDoctorOrdersDischargedExAsync(registryID, null);
        }
        
        /// <remarks/>
        public void GetDoctorOrdersDischargedExAsync(string registryID, object userState) {
            if ((this.GetDoctorOrdersDischargedExOperationCompleted == null)) {
                this.GetDoctorOrdersDischargedExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoctorOrdersDischargedExOperationCompleted);
            }
            this.InvokeAsync("GetDoctorOrdersDischargedEx", new object[] {
                        registryID}, this.GetDoctorOrdersDischargedExOperationCompleted, userState);
        }
        
        private void OnGetDoctorOrdersDischargedExOperationCompleted(object arg) {
            if ((this.GetDoctorOrdersDischargedExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoctorOrdersDischargedExCompleted(this, new GetDoctorOrdersDischargedExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetDoctorOrdersDischarged", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetDoctorOrdersDischarged(string registryID) {
            object[] results = this.Invoke("GetDoctorOrdersDischarged", new object[] {
                        registryID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetDoctorOrdersDischargedAsync(string registryID) {
            this.GetDoctorOrdersDischargedAsync(registryID, null);
        }
        
        /// <remarks/>
        public void GetDoctorOrdersDischargedAsync(string registryID, object userState) {
            if ((this.GetDoctorOrdersDischargedOperationCompleted == null)) {
                this.GetDoctorOrdersDischargedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoctorOrdersDischargedOperationCompleted);
            }
            this.InvokeAsync("GetDoctorOrdersDischarged", new object[] {
                        registryID}, this.GetDoctorOrdersDischargedOperationCompleted, userState);
        }
        
        private void OnGetDoctorOrdersDischargedOperationCompleted(object arg) {
            if ((this.GetDoctorOrdersDischargedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoctorOrdersDischargedCompleted(this, new GetDoctorOrdersDischargedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/ConnectHisdb", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ConnectHisdb() {
            object[] results = this.Invoke("ConnectHisdb", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConnectHisdbAsync() {
            this.ConnectHisdbAsync(null);
        }
        
        /// <remarks/>
        public void ConnectHisdbAsync(object userState) {
            if ((this.ConnectHisdbOperationCompleted == null)) {
                this.ConnectHisdbOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnectHisdbOperationCompleted);
            }
            this.InvokeAsync("ConnectHisdb", new object[0], this.ConnectHisdbOperationCompleted, userState);
        }
        
        private void OnConnectHisdbOperationCompleted(object arg) {
            if ((this.ConnectHisdbCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConnectHisdbCompleted(this, new ConnectHisdbCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/IsDischarged", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsDischarged(System.Xml.XmlNode inRegistryIDs, System.DateTime endDate, ref System.Xml.XmlNode outRegistryIDs) {
            object[] results = this.Invoke("IsDischarged", new object[] {
                        inRegistryIDs,
                        endDate,
                        outRegistryIDs});
            outRegistryIDs = ((System.Xml.XmlNode)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsDischargedAsync(System.Xml.XmlNode inRegistryIDs, System.DateTime endDate, System.Xml.XmlNode outRegistryIDs) {
            this.IsDischargedAsync(inRegistryIDs, endDate, outRegistryIDs, null);
        }
        
        /// <remarks/>
        public void IsDischargedAsync(System.Xml.XmlNode inRegistryIDs, System.DateTime endDate, System.Xml.XmlNode outRegistryIDs, object userState) {
            if ((this.IsDischargedOperationCompleted == null)) {
                this.IsDischargedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsDischargedOperationCompleted);
            }
            this.InvokeAsync("IsDischarged", new object[] {
                        inRegistryIDs,
                        endDate,
                        outRegistryIDs}, this.IsDischargedOperationCompleted, userState);
        }
        
        private void OnIsDischargedOperationCompleted(object arg) {
            if ((this.IsDischargedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsDischargedCompleted(this, new IsDischargedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/Byzyrq", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Byzyrq(System.DateTime beginDate, System.DateTime endDate, ref System.Xml.XmlNode outRegistryIDs) {
            object[] results = this.Invoke("Byzyrq", new object[] {
                        beginDate,
                        endDate,
                        outRegistryIDs});
            outRegistryIDs = ((System.Xml.XmlNode)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ByzyrqAsync(System.DateTime beginDate, System.DateTime endDate, System.Xml.XmlNode outRegistryIDs) {
            this.ByzyrqAsync(beginDate, endDate, outRegistryIDs, null);
        }
        
        /// <remarks/>
        public void ByzyrqAsync(System.DateTime beginDate, System.DateTime endDate, System.Xml.XmlNode outRegistryIDs, object userState) {
            if ((this.ByzyrqOperationCompleted == null)) {
                this.ByzyrqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByzyrqOperationCompleted);
            }
            this.InvokeAsync("Byzyrq", new object[] {
                        beginDate,
                        endDate,
                        outRegistryIDs}, this.ByzyrqOperationCompleted, userState);
        }
        
        private void OnByzyrqOperationCompleted(object arg) {
            if ((this.ByzyrqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByzyrqCompleted(this, new ByzyrqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/Bycyrq", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Bycyrq(System.DateTime beginDate, System.DateTime endDate, ref System.Xml.XmlNode outRegistryIDs) {
            object[] results = this.Invoke("Bycyrq", new object[] {
                        beginDate,
                        endDate,
                        outRegistryIDs});
            outRegistryIDs = ((System.Xml.XmlNode)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BycyrqAsync(System.DateTime beginDate, System.DateTime endDate, System.Xml.XmlNode outRegistryIDs) {
            this.BycyrqAsync(beginDate, endDate, outRegistryIDs, null);
        }
        
        /// <remarks/>
        public void BycyrqAsync(System.DateTime beginDate, System.DateTime endDate, System.Xml.XmlNode outRegistryIDs, object userState) {
            if ((this.BycyrqOperationCompleted == null)) {
                this.BycyrqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBycyrqOperationCompleted);
            }
            this.InvokeAsync("Bycyrq", new object[] {
                        beginDate,
                        endDate,
                        outRegistryIDs}, this.BycyrqOperationCompleted, userState);
        }
        
        private void OnBycyrqOperationCompleted(object arg) {
            if ((this.BycyrqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BycyrqCompleted(this, new BycyrqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetHospitalName", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHospitalName() {
            object[] results = this.Invoke("GetHospitalName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHospitalNameAsync() {
            this.GetHospitalNameAsync(null);
        }
        
        /// <remarks/>
        public void GetHospitalNameAsync(object userState) {
            if ((this.GetHospitalNameOperationCompleted == null)) {
                this.GetHospitalNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHospitalNameOperationCompleted);
            }
            this.InvokeAsync("GetHospitalName", new object[0], this.GetHospitalNameOperationCompleted, userState);
        }
        
        private void OnGetHospitalNameOperationCompleted(object arg) {
            if ((this.GetHospitalNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHospitalNameCompleted(this, new GetHospitalNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetNameAndArchiveNumberForInpatient", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetNameAndArchiveNumberForInpatient(string registryID, ref string pname, ref string archiveNum) {
            object[] results = this.Invoke("GetNameAndArchiveNumberForInpatient", new object[] {
                        registryID,
                        pname,
                        archiveNum});
            pname = ((string)(results[1]));
            archiveNum = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetNameAndArchiveNumberForInpatientAsync(string registryID, string pname, string archiveNum) {
            this.GetNameAndArchiveNumberForInpatientAsync(registryID, pname, archiveNum, null);
        }
        
        /// <remarks/>
        public void GetNameAndArchiveNumberForInpatientAsync(string registryID, string pname, string archiveNum, object userState) {
            if ((this.GetNameAndArchiveNumberForInpatientOperationCompleted == null)) {
                this.GetNameAndArchiveNumberForInpatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNameAndArchiveNumberForInpatientOperationCompleted);
            }
            this.InvokeAsync("GetNameAndArchiveNumberForInpatient", new object[] {
                        registryID,
                        pname,
                        archiveNum}, this.GetNameAndArchiveNumberForInpatientOperationCompleted, userState);
        }
        
        private void OnGetNameAndArchiveNumberForInpatientOperationCompleted(object arg) {
            if ((this.GetNameAndArchiveNumberForInpatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNameAndArchiveNumberForInpatientCompleted(this, new GetNameAndArchiveNumberForInpatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/IsNurse", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsNurse(string opcode) {
            object[] results = this.Invoke("IsNurse", new object[] {
                        opcode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsNurseAsync(string opcode) {
            this.IsNurseAsync(opcode, null);
        }
        
        /// <remarks/>
        public void IsNurseAsync(string opcode, object userState) {
            if ((this.IsNurseOperationCompleted == null)) {
                this.IsNurseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsNurseOperationCompleted);
            }
            this.InvokeAsync("IsNurse", new object[] {
                        opcode}, this.IsNurseOperationCompleted, userState);
        }
        
        private void OnIsNurseOperationCompleted(object arg) {
            if ((this.IsNurseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsNurseCompleted(this, new IsNurseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetStartTime", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStartTime(string noteID, string stime, string registryID, ref System.DateTime startTime) {
            object[] results = this.Invoke("GetStartTime", new object[] {
                        noteID,
                        stime,
                        registryID,
                        startTime});
            startTime = ((System.DateTime)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStartTimeAsync(string noteID, string stime, string registryID, System.DateTime startTime) {
            this.GetStartTimeAsync(noteID, stime, registryID, startTime, null);
        }
        
        /// <remarks/>
        public void GetStartTimeAsync(string noteID, string stime, string registryID, System.DateTime startTime, object userState) {
            if ((this.GetStartTimeOperationCompleted == null)) {
                this.GetStartTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStartTimeOperationCompleted);
            }
            this.InvokeAsync("GetStartTime", new object[] {
                        noteID,
                        stime,
                        registryID,
                        startTime}, this.GetStartTimeOperationCompleted, userState);
        }
        
        private void OnGetStartTimeOperationCompleted(object arg) {
            if ((this.GetStartTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStartTimeCompleted(this, new GetStartTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/GetDiagnosePreOperation", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDiagnosePreOperation(string registryID, ref System.Xml.XmlNode result) {
            object[] results = this.Invoke("GetDiagnosePreOperation", new object[] {
                        registryID,
                        result});
            result = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDiagnosePreOperationAsync(string registryID, System.Xml.XmlNode result) {
            this.GetDiagnosePreOperationAsync(registryID, result, null);
        }
        
        /// <remarks/>
        public void GetDiagnosePreOperationAsync(string registryID, System.Xml.XmlNode result, object userState) {
            if ((this.GetDiagnosePreOperationOperationCompleted == null)) {
                this.GetDiagnosePreOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDiagnosePreOperationOperationCompleted);
            }
            this.InvokeAsync("GetDiagnosePreOperation", new object[] {
                        registryID,
                        result}, this.GetDiagnosePreOperationOperationCompleted, userState);
        }
        
        private void OnGetDiagnosePreOperationOperationCompleted(object arg) {
            if ((this.GetDiagnosePreOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDiagnosePreOperationCompleted(this, new GetDiagnosePreOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/DegreeOrderTime", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DegreeOrderTime(string registryID, ref System.Xml.XmlNode degree) {
            object[] results = this.Invoke("DegreeOrderTime", new object[] {
                        registryID,
                        degree});
            degree = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DegreeOrderTimeAsync(string registryID, System.Xml.XmlNode degree) {
            this.DegreeOrderTimeAsync(registryID, degree, null);
        }
        
        /// <remarks/>
        public void DegreeOrderTimeAsync(string registryID, System.Xml.XmlNode degree, object userState) {
            if ((this.DegreeOrderTimeOperationCompleted == null)) {
                this.DegreeOrderTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDegreeOrderTimeOperationCompleted);
            }
            this.InvokeAsync("DegreeOrderTime", new object[] {
                        registryID,
                        degree}, this.DegreeOrderTimeOperationCompleted, userState);
        }
        
        private void OnDegreeOrderTimeOperationCompleted(object arg) {
            if ((this.DegreeOrderTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DegreeOrderTimeCompleted(this, new DegreeOrderTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/LastStratTimeForDegreeOrder", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LastStratTimeForDegreeOrder(string registryID, ref System.DateTime start) {
            object[] results = this.Invoke("LastStratTimeForDegreeOrder", new object[] {
                        registryID,
                        start});
            start = ((System.DateTime)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LastStratTimeForDegreeOrderAsync(string registryID, System.DateTime start) {
            this.LastStratTimeForDegreeOrderAsync(registryID, start, null);
        }
        
        /// <remarks/>
        public void LastStratTimeForDegreeOrderAsync(string registryID, System.DateTime start, object userState) {
            if ((this.LastStratTimeForDegreeOrderOperationCompleted == null)) {
                this.LastStratTimeForDegreeOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLastStratTimeForDegreeOrderOperationCompleted);
            }
            this.InvokeAsync("LastStratTimeForDegreeOrder", new object[] {
                        registryID,
                        start}, this.LastStratTimeForDegreeOrderOperationCompleted, userState);
        }
        
        private void OnLastStratTimeForDegreeOrderOperationCompleted(object arg) {
            if ((this.LastStratTimeForDegreeOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LastStratTimeForDegreeOrderCompleted(this, new LastStratTimeForDegreeOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/DoneTimeForOperations", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DoneTimeForOperations(string registryID, ref System.Xml.XmlNode doneTime) {
            object[] results = this.Invoke("DoneTimeForOperations", new object[] {
                        registryID,
                        doneTime});
            doneTime = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DoneTimeForOperationsAsync(string registryID, System.Xml.XmlNode doneTime) {
            this.DoneTimeForOperationsAsync(registryID, doneTime, null);
        }
        
        /// <remarks/>
        public void DoneTimeForOperationsAsync(string registryID, System.Xml.XmlNode doneTime, object userState) {
            if ((this.DoneTimeForOperationsOperationCompleted == null)) {
                this.DoneTimeForOperationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoneTimeForOperationsOperationCompleted);
            }
            this.InvokeAsync("DoneTimeForOperations", new object[] {
                        registryID,
                        doneTime}, this.DoneTimeForOperationsOperationCompleted, userState);
        }
        
        private void OnDoneTimeForOperationsOperationCompleted(object arg) {
            if ((this.DoneTimeForOperationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoneTimeForOperationsCompleted(this, new DoneTimeForOperationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrpatients/DoneTimeForRescues", RequestNamespace="http://shoujia.org/emrpatients", ResponseNamespace="http://shoujia.org/emrpatients", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DoneTimeForRescues(string registryID, ref System.Xml.XmlNode doneTime) {
            object[] results = this.Invoke("DoneTimeForRescues", new object[] {
                        registryID,
                        doneTime});
            doneTime = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DoneTimeForRescuesAsync(string registryID, System.Xml.XmlNode doneTime) {
            this.DoneTimeForRescuesAsync(registryID, doneTime, null);
        }
        
        /// <remarks/>
        public void DoneTimeForRescuesAsync(string registryID, System.Xml.XmlNode doneTime, object userState) {
            if ((this.DoneTimeForRescuesOperationCompleted == null)) {
                this.DoneTimeForRescuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoneTimeForRescuesOperationCompleted);
            }
            this.InvokeAsync("DoneTimeForRescues", new object[] {
                        registryID,
                        doneTime}, this.DoneTimeForRescuesOperationCompleted, userState);
        }
        
        private void OnDoneTimeForRescuesOperationCompleted(object arg) {
            if ((this.DoneTimeForRescuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoneTimeForRescuesCompleted(this, new DoneTimeForRescuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://shoujia.org/emrpatients")]
    public enum WorkMode {
        
        /// <remarks/>
        InHospital,
        
        /// <remarks/>
        OutHospital,
        
        /// <remarks/>
        Service,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://shoujia.org/emrpatients")]
    public enum QueryMode {
        
        /// <remarks/>
        ArchiveNum,
        
        /// <remarks/>
        RegistryID,
        
        /// <remarks/>
        PatientName,
        
        /// <remarks/>
        CardNum,
        
        /// <remarks/>
        IDNum,
        
        /// <remarks/>
        Commpose,
        
        /// <remarks/>
        AllPatientName,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://shoujia.org/emrpatients")]
    public enum PatientGettingMode {
        
        /// <remarks/>
        PatientsInHospital,
        
        /// <remarks/>
        PatientsInArea,
        
        /// <remarks/>
        PatientsInDepartment,
        
        /// <remarks/>
        MyPatients,
        
        /// <remarks/>
        PatientsInDepartmentOut,
        
        /// <remarks/>
        MyPatientsOut,
        
        /// <remarks/>
        Consult,
        
        /// <remarks/>
        MyOwner,
        
        /// <remarks/>
        Operation,
        
        /// <remarks/>
        BloodDialysis,
        
        /// <remarks/>
        ZLzz,
        
        /// <remarks/>
        PatientsInDepartmentCK,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://shoujia.org/emrpatients")]
    public enum OrderByMode {
        
        /// <remarks/>
        ByBed,
        
        /// <remarks/>
        BySexAndName,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateNowPSSelectKsCompletedEventHandler(object sender, ValuateNowPSSelectKsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateNowPSSelectKsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateNowPSSelectKsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateEndPSSelectKsCompletedEventHandler(object sender, ValuateEndPSSelectKsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateEndPSSelectKsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateEndPSSelectKsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateEndPSSelectExCompletedEventHandler(object sender, ValuateEndPSSelectExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateEndPSSelectExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateEndPSSelectExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuatePSSelectExCompletedEventHandler(object sender, ValuatePSSelectExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuatePSSelectExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuatePSSelectExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateNowPSSelectQyCompletedEventHandler(object sender, ValuateNowPSSelectQyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateNowPSSelectQyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateNowPSSelectQyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DeleteAndInsertValueCompletedEventHandler(object sender, DeleteAndInsertValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAndInsertValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAndInsertValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateEndPSSelectQyCompletedEventHandler(object sender, ValuateEndPSSelectQyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateEndPSSelectQyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateEndPSSelectQyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateNowPSSelectHzCompletedEventHandler(object sender, ValuateNowPSSelectHzCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateNowPSSelectHzCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateNowPSSelectHzCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateEndPSSelectHzCompletedEventHandler(object sender, ValuateEndPSSelectHzCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateEndPSSelectHzCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateEndPSSelectHzCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateNowPSSelectCompletedEventHandler(object sender, ValuateNowPSSelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateNowPSSelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateNowPSSelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateNowPSSelectQCompletedEventHandler(object sender, ValuateNowPSSelectQCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateNowPSSelectQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateNowPSSelectQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateNowPjLCompletedEventHandler(object sender, ValuateNowPjLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateNowPjLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateNowPjLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DelValuateNowCompletedEventHandler(object sender, DelValuateNowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelValuateNowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelValuateNowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DelValuateEndCompletedEventHandler(object sender, DelValuateEndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelValuateEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelValuateEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetValuateNowYsmCompletedEventHandler(object sender, GetValuateNowYsmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValuateNowYsmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValuateNowYsmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DoneTimeForTransferInCompletedEventHandler(object sender, DoneTimeForTransferInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoneTimeForTransferInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoneTimeForTransferInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode doneTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DoneTimeForTransferOutCompletedEventHandler(object sender, DoneTimeForTransferOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoneTimeForTransferOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoneTimeForTransferOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode doneTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DoneTimeForTakeOverCompletedEventHandler(object sender, DoneTimeForTakeOverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoneTimeForTakeOverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoneTimeForTakeOverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode doneTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DoneTimeForConsultQTCompletedEventHandler(object sender, DoneTimeForConsultQTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoneTimeForConsultQTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoneTimeForConsultQTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode doneTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DoneTimeForConsultCompletedEventHandler(object sender, DoneTimeForConsultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoneTimeForConsultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoneTimeForConsultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode doneTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DoneTimeForConsultExCompletedEventHandler(object sender, DoneTimeForConsultExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoneTimeForConsultExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoneTimeForConsultExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode doneTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void RemindConsultExCompletedEventHandler(object sender, RemindConsultExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemindConsultExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemindConsultExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void RemindConsultExDgCompletedEventHandler(object sender, RemindConsultExDgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemindConsultExDgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemindConsultExDgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetoperatorsCompletedEventHandler(object sender, GetoperatorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetoperatorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetoperatorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode ops {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void FinishConsultNoteCompletedEventHandler(object sender, FinishConsultNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinishConsultNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FinishConsultNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetFinishConsultationListCompletedEventHandler(object sender, GetFinishConsultationListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFinishConsultationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFinishConsultationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetFinishConsultationListQCCompletedEventHandler(object sender, GetFinishConsultationListQCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFinishConsultationListQCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFinishConsultationListQCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetFinishConsultationListQCNewCompletedEventHandler(object sender, GetFinishConsultationListQCNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFinishConsultationListQCNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFinishConsultationListQCNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetQCTableByMonthCompletedEventHandler(object sender, GetQCTableByMonthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQCTableByMonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQCTableByMonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetQCTableByMonthNewCompletedEventHandler(object sender, GetQCTableByMonthNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQCTableByMonthNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQCTableByMonthNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void InSertValueOffCompletedEventHandler(object sender, InSertValueOffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InSertValueOffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InSertValueOffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetQCTableByMonthEndCompletedEventHandler(object sender, GetQCTableByMonthEndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQCTableByMonthEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQCTableByMonthEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetQCTableByMonthEndNewCompletedEventHandler(object sender, GetQCTableByMonthEndNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQCTableByMonthEndNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQCTableByMonthEndNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void IsInHospitalCompletedEventHandler(object sender, IsInHospitalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsInHospitalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsInHospitalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDepartmentListCompletedEventHandler(object sender, GetDepartmentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDoctorListCompletedEventHandler(object sender, GetDoctorListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoctorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoctorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDoctorListDgCompletedEventHandler(object sender, GetDoctorListDgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoctorListDgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoctorListDgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDoctorListByDepartmentCompletedEventHandler(object sender, GetDoctorListByDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoctorListByDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoctorListByDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDoctorListByDepartmentAndTitleCompletedEventHandler(object sender, GetDoctorListByDepartmentAndTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoctorListByDepartmentAndTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoctorListByDepartmentAndTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDepartmentByDoctorCompletedEventHandler(object sender, GetDepartmentByDoctorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentByDoctorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentByDoctorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetIdentificationCompletedEventHandler(object sender, GetIdentificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIdentificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIdentificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDescriptionCompletedEventHandler(object sender, GetDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateIdentificationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDescCompletedEventHandler(object sender, GetDescCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDescCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDescCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetIdentsCompletedEventHandler(object sender, GetIdentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIdentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIdentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateDescriptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPatientClinicIDCompletedEventHandler(object sender, GetPatientClinicIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientClinicIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientClinicIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ReturnConsultNoteCompletedEventHandler(object sender, ReturnConsultNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnConsultNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnConsultNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateOperatorsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetOpInfCompletedEventHandler(object sender, GetOpInfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpInfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpInfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void IsGuideDCompletedEventHandler(object sender, IsGuideDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsGuideDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsGuideDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPatientInfZYCompletedEventHandler(object sender, GetPatientInfZYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientInfZYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientInfZYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPatientInfCompletedEventHandler(object sender, GetPatientInfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientInfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientInfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetCPatientInfCompletedEventHandler(object sender, GetCPatientInfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCPatientInfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCPatientInfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDepartmentListByModeDSCompletedEventHandler(object sender, GetDepartmentListByModeDSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentListByModeDSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentListByModeDSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPatientListByEmrstatusCompletedEventHandler(object sender, GetPatientListByEmrstatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientListByEmrstatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientListByEmrstatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetNewMedicalDataCompletedEventHandler(object sender, GetNewMedicalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewMedicalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewMedicalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet dst1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dst2 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dst3 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dst4 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dt {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetMedicalDataCompletedEventHandler(object sender, GetMedicalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMedicalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMedicalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet dst1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dst2 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet dst3 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetMedicalDataExCompletedEventHandler(object sender, GetMedicalDataExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMedicalDataExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMedicalDataExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetQCTableByMonthStatistics_PersonalEndCompletedEventHandler(object sender, GetQCTableByMonthStatistics_PersonalEndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQCTableByMonthStatistics_PersonalEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQCTableByMonthStatistics_PersonalEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetQCTableByMonthStatisticsEndCompletedEventHandler(object sender, GetQCTableByMonthStatisticsEndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQCTableByMonthStatisticsEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQCTableByMonthStatisticsEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void QueryPatientListExCompletedEventHandler(object sender, QueryPatientListExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPatientListExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPatientListExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPatientListByEmrstatusExCompletedEventHandler(object sender, GetPatientListByEmrstatusExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientListByEmrstatusExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientListByEmrstatusExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void IsDischargedExCompletedEventHandler(object sender, IsDischargedExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsDischargedExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsDischargedExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode outRegistryIDs {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDoctorLevelCompletedEventHandler(object sender, GetDoctorLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoctorLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoctorLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void CommposePatientListExCompletedEventHandler(object sender, CommposePatientListExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommposePatientListExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommposePatientListExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateNowExCompletedEventHandler(object sender, ValuateNowExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateNowExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateNowExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateNowISSHCompletedEventHandler(object sender, ValuateNowISSHCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateNowISSHCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateNowISSHCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateEndIsCheckCompletedEventHandler(object sender, ValuateEndIsCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateEndIsCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateEndIsCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateNowBAPSBZCompletedEventHandler(object sender, ValuateNowBAPSBZCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateNowBAPSBZCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateNowBAPSBZCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateNowBAPSBZNewCompletedEventHandler(object sender, ValuateNowBAPSBZNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateNowBAPSBZNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateNowBAPSBZNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateEndCheckInfoCompletedEventHandler(object sender, ValuateEndCheckInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateEndCheckInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateEndCheckInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateNowSHCompletedEventHandler(object sender, ValuateNowSHCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateNowSHCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateNowSHCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateEndSHCompletedEventHandler(object sender, ValuateEndSHCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateEndSHCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateEndSHCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateEndCheckCompletedEventHandler(object sender, ValuateEndCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateEndCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateEndCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateNowPSHisCompletedEventHandler(object sender, ValuateNowPSHisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateNowPSHisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateNowPSHisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateNowPSCompletedEventHandler(object sender, ValuateNowPSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateNowPSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateNowPSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateEndPsCompletedEventHandler(object sender, ValuateEndPsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateEndPsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateEndPsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DoctorNameListCompletedEventHandler(object sender, DoctorNameListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoctorNameListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoctorNameListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DoctorListCompletedEventHandler(object sender, DoctorListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoctorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoctorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DoctorListEmrCompletedEventHandler(object sender, DoctorListEmrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoctorListEmrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoctorListEmrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DoctorListExCompletedEventHandler(object sender, DoctorListExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoctorListExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoctorListExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void LevelExCompletedEventHandler(object sender, LevelExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LevelExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LevelExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void OperatorTypeCompletedEventHandler(object sender, OperatorTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OperatorTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OperatorTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDoctorTypeCompletedEventHandler(object sender, GetDoctorTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoctorTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoctorTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PatientListCompletedEventHandler(object sender, PatientListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PatientListExExCompletedEventHandler(object sender, PatientListExExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientListExExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientListExExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PatientListExExExCompletedEventHandler(object sender, PatientListExExExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientListExExExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientListExExExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DoneTimeForConsultExExCompletedEventHandler(object sender, DoneTimeForConsultExExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoneTimeForConsultExExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoneTimeForConsultExExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode doneTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PatientListExCompletedEventHandler(object sender, PatientListExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientListExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientListExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PatientListErCompletedEventHandler(object sender, PatientListErCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientListErCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientListErCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PatientListEx1CompletedEventHandler(object sender, PatientListEx1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientListEx1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientListEx1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PatientListExACompletedEventHandler(object sender, PatientListExACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientListExACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientListExACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PatientListExConsultCompletedEventHandler(object sender, PatientListExConsultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientListExConsultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientListExConsultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PatientListFromRegistryIDsCompletedEventHandler(object sender, PatientListFromRegistryIDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientListFromRegistryIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientListFromRegistryIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void QueryPatientListCompletedEventHandler(object sender, QueryPatientListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPatientListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPatientListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void QueryPatientListJHCompletedEventHandler(object sender, QueryPatientListJHCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPatientListJHCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPatientListJHCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void CommposePatientListCompletedEventHandler(object sender, CommposePatientListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommposePatientListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommposePatientListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetGroupOwnerCompletedEventHandler(object sender, GetGroupOwnerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupOwnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupOwnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetOperatorNameCompletedEventHandler(object sender, GetOperatorNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperatorNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperatorNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string opname {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string passwd {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string department {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string departname {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetOperatorNameBqCompletedEventHandler(object sender, GetOperatorNameBqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperatorNameBqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperatorNameBqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string opname {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string passwd {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string department {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string departname {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string AreaCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetOperatorName1CompletedEventHandler(object sender, GetOperatorName1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperatorName1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperatorName1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string opname {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string passwd {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string department {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void AuthenticChekCompletedEventHandler(object sender, AuthenticChekCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticChekCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticChekCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string opname {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string passwd {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDepartmentListByModeCompletedEventHandler(object sender, GetDepartmentListByModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentListByModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentListByModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetAreaCodeOfDepartmentCompletedEventHandler(object sender, GetAreaCodeOfDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAreaCodeOfDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAreaCodeOfDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDepartmentNameCompletedEventHandler(object sender, GetDepartmentNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetAreasCompletedEventHandler(object sender, GetAreasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetTestsAndExamsCompletedEventHandler(object sender, GetTestsAndExamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTestsAndExamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTestsAndExamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDoctorOrdersCompletedEventHandler(object sender, GetDoctorOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoctorOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoctorOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDoctorOrdersExCompletedEventHandler(object sender, GetDoctorOrdersExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoctorOrdersExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoctorOrdersExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDoctorOrdersDischargedExCompletedEventHandler(object sender, GetDoctorOrdersDischargedExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoctorOrdersDischargedExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoctorOrdersDischargedExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDoctorOrdersDischargedCompletedEventHandler(object sender, GetDoctorOrdersDischargedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoctorOrdersDischargedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoctorOrdersDischargedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ConnectHisdbCompletedEventHandler(object sender, ConnectHisdbCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConnectHisdbCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConnectHisdbCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void IsDischargedCompletedEventHandler(object sender, IsDischargedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsDischargedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsDischargedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode outRegistryIDs {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ByzyrqCompletedEventHandler(object sender, ByzyrqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByzyrqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByzyrqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode outRegistryIDs {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void BycyrqCompletedEventHandler(object sender, BycyrqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BycyrqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BycyrqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode outRegistryIDs {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetHospitalNameCompletedEventHandler(object sender, GetHospitalNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHospitalNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHospitalNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetNameAndArchiveNumberForInpatientCompletedEventHandler(object sender, GetNameAndArchiveNumberForInpatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNameAndArchiveNumberForInpatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNameAndArchiveNumberForInpatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string pname {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string archiveNum {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void IsNurseCompletedEventHandler(object sender, IsNurseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsNurseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsNurseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetStartTimeCompletedEventHandler(object sender, GetStartTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStartTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStartTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime startTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDiagnosePreOperationCompletedEventHandler(object sender, GetDiagnosePreOperationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDiagnosePreOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDiagnosePreOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DegreeOrderTimeCompletedEventHandler(object sender, DegreeOrderTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DegreeOrderTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DegreeOrderTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode degree {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void LastStratTimeForDegreeOrderCompletedEventHandler(object sender, LastStratTimeForDegreeOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LastStratTimeForDegreeOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LastStratTimeForDegreeOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime start {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DoneTimeForOperationsCompletedEventHandler(object sender, DoneTimeForOperationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoneTimeForOperationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoneTimeForOperationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode doneTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DoneTimeForRescuesCompletedEventHandler(object sender, DoneTimeForRescuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoneTimeForRescuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoneTimeForRescuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode doneTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591