//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.0
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.0 版自动生成。
// 
#pragma warning disable 1591

namespace EMR.gjtEmrOrder {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EmrOrderSoap", Namespace="http://shoujia.org/emrorders/")]
    public partial class EmrOrder : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetTestResultForOneRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPoorPatientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryRegistryInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreatForOutPatientByCardNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientsForArchiveNumByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegistryIDsForOneCardNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCardTypeByCardNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepositOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegistryInfoByCardNumForCallBackOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderInfoByRegistryIDForQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentsForRegistryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutPatientTreatFeeForOneOperatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreatFeeForOneOutPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback Icd10OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemsForBeInpatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback RoomsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PayReturnOperationCompleted;
        
        private System.Threading.SendOrPostCallback FinishOutPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecallOutPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback OutTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnSeePatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback BeInpatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback OutpatientBeenSeeingOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImageExamTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImageExamItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImageExamStylesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImageExamFeeIndexesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImageExamInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback PhysicalExamTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback PhysicalExamItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestItemsDepartmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestSubitemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExamTestInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback TreatClassOperationCompleted;
        
        private System.Threading.SendOrPostCallback TreatSubitemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback TreatOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback TreatOrderDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback TreatInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExamTestFeeItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExamTestPriceListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExamTestChargeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegistryIDByCardNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClinicalInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrescriptionForOutPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrescriptionForOneNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreatForOutPatientByRegistryIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreatForOutPatientByBillOperationCompleted;
        
        private System.Threading.SendOrPostCallback DrugListForOnePharmacyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AnaesthesiaDrugListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DrugWayListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChineseDrugWayListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChineseDrugHowListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DrugTimeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback PharmacyListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DrugKindListOperationCompleted;
        
        private System.Threading.SendOrPostCallback CombineConflictOperationCompleted;
        
        private System.Threading.SendOrPostCallback DrugListExOperationCompleted;
        
        private System.Threading.SendOrPostCallback PredefinedOrderForDoctorOperationCompleted;
        
        private System.Threading.SendOrPostCallback PredefinedOrderForDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback PredefinedItemsForDoctorOperationCompleted;
        
        private System.Threading.SendOrPostCallback PredefinedItemsForDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrivateDrugListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPrivateDrugOperationCompleted;
        
        private System.Threading.SendOrPostCallback PredefinedFullOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPredefinedFullOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePredefinedFullOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePredefinedFullOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewOutOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback OldOutOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveOutOrderOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EmrOrder() {
            this.Url = global::EMR.Properties.Settings.Default.EMR_gjtEmrOrder_EmrOrder;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetTestResultForOneRequisitionCompletedEventHandler GetTestResultForOneRequisitionCompleted;
        
        /// <remarks/>
        public event GetPoorPatientsCompletedEventHandler GetPoorPatientsCompleted;
        
        /// <remarks/>
        public event GetHistoryRegistryInfoCompletedEventHandler GetHistoryRegistryInfoCompleted;
        
        /// <remarks/>
        public event GetTreatForOutPatientByCardNumCompletedEventHandler GetTreatForOutPatientByCardNumCompleted;
        
        /// <remarks/>
        public event GetPatientsForArchiveNumByNameCompletedEventHandler GetPatientsForArchiveNumByNameCompleted;
        
        /// <remarks/>
        public event GetRegistryIDsForOneCardNumCompletedEventHandler GetRegistryIDsForOneCardNumCompleted;
        
        /// <remarks/>
        public event GetCardTypeByCardNumCompletedEventHandler GetCardTypeByCardNumCompleted;
        
        /// <remarks/>
        public event GetDepositCompletedEventHandler GetDepositCompleted;
        
        /// <remarks/>
        public event GetRegistryInfoByCardNumForCallBackCompletedEventHandler GetRegistryInfoByCardNumForCallBackCompleted;
        
        /// <remarks/>
        public event GetOrderInfoByRegistryIDForQueryCompletedEventHandler GetOrderInfoByRegistryIDForQueryCompleted;
        
        /// <remarks/>
        public event GetDepartmentsForRegistryCompletedEventHandler GetDepartmentsForRegistryCompleted;
        
        /// <remarks/>
        public event GetOutPatientTreatFeeForOneOperatorCompletedEventHandler GetOutPatientTreatFeeForOneOperatorCompleted;
        
        /// <remarks/>
        public event GetTreatFeeForOneOutPatientCompletedEventHandler GetTreatFeeForOneOutPatientCompleted;
        
        /// <remarks/>
        public event Icd10CompletedEventHandler Icd10Completed;
        
        /// <remarks/>
        public event GetItemsForBeInpatientCompletedEventHandler GetItemsForBeInpatientCompleted;
        
        /// <remarks/>
        public event RoomsCompletedEventHandler RoomsCompleted;
        
        /// <remarks/>
        public event PayReturnCompletedEventHandler PayReturnCompleted;
        
        /// <remarks/>
        public event FinishOutPatientCompletedEventHandler FinishOutPatientCompleted;
        
        /// <remarks/>
        public event RecallOutPatientCompletedEventHandler RecallOutPatientCompleted;
        
        /// <remarks/>
        public event OutTransferCompletedEventHandler OutTransferCompleted;
        
        /// <remarks/>
        public event UnSeePatientCompletedEventHandler UnSeePatientCompleted;
        
        /// <remarks/>
        public event BeInpatientCompletedEventHandler BeInpatientCompleted;
        
        /// <remarks/>
        public event OutpatientBeenSeeingCompletedEventHandler OutpatientBeenSeeingCompleted;
        
        /// <remarks/>
        public event ImageExamTypesCompletedEventHandler ImageExamTypesCompleted;
        
        /// <remarks/>
        public event ImageExamItemsCompletedEventHandler ImageExamItemsCompleted;
        
        /// <remarks/>
        public event ImageExamStylesCompletedEventHandler ImageExamStylesCompleted;
        
        /// <remarks/>
        public event ImageExamFeeIndexesCompletedEventHandler ImageExamFeeIndexesCompleted;
        
        /// <remarks/>
        public event ImageExamInfoCompletedEventHandler ImageExamInfoCompleted;
        
        /// <remarks/>
        public event PhysicalExamTypesCompletedEventHandler PhysicalExamTypesCompleted;
        
        /// <remarks/>
        public event PhysicalExamItemsCompletedEventHandler PhysicalExamItemsCompleted;
        
        /// <remarks/>
        public event TestTypesCompletedEventHandler TestTypesCompleted;
        
        /// <remarks/>
        public event TestItemsCompletedEventHandler TestItemsCompleted;
        
        /// <remarks/>
        public event TestItemsDepartmentsCompletedEventHandler TestItemsDepartmentsCompleted;
        
        /// <remarks/>
        public event TestSubitemsCompletedEventHandler TestSubitemsCompleted;
        
        /// <remarks/>
        public event ExamTestInfoCompletedEventHandler ExamTestInfoCompleted;
        
        /// <remarks/>
        public event TreatClassCompletedEventHandler TreatClassCompleted;
        
        /// <remarks/>
        public event TreatSubitemsCompletedEventHandler TreatSubitemsCompleted;
        
        /// <remarks/>
        public event TreatOrderCompletedEventHandler TreatOrderCompleted;
        
        /// <remarks/>
        public event TreatOrderDetailCompletedEventHandler TreatOrderDetailCompleted;
        
        /// <remarks/>
        public event TreatInfoCompletedEventHandler TreatInfoCompleted;
        
        /// <remarks/>
        public event ExamTestFeeItemsCompletedEventHandler ExamTestFeeItemsCompleted;
        
        /// <remarks/>
        public event ExamTestPriceListCompletedEventHandler ExamTestPriceListCompleted;
        
        /// <remarks/>
        public event ExamTestChargeInfoCompletedEventHandler ExamTestChargeInfoCompleted;
        
        /// <remarks/>
        public event GetRegistryIDByCardNumCompletedEventHandler GetRegistryIDByCardNumCompleted;
        
        /// <remarks/>
        public event GetClinicalInfoCompletedEventHandler GetClinicalInfoCompleted;
        
        /// <remarks/>
        public event GetPrescriptionForOutPatientCompletedEventHandler GetPrescriptionForOutPatientCompleted;
        
        /// <remarks/>
        public event GetPrescriptionForOneNumberCompletedEventHandler GetPrescriptionForOneNumberCompleted;
        
        /// <remarks/>
        public event GetTreatForOutPatientByRegistryIDCompletedEventHandler GetTreatForOutPatientByRegistryIDCompleted;
        
        /// <remarks/>
        public event GetTreatForOutPatientByBillCompletedEventHandler GetTreatForOutPatientByBillCompleted;
        
        /// <remarks/>
        public event DrugListForOnePharmacyCompletedEventHandler DrugListForOnePharmacyCompleted;
        
        /// <remarks/>
        public event AnaesthesiaDrugListCompletedEventHandler AnaesthesiaDrugListCompleted;
        
        /// <remarks/>
        public event DrugWayListCompletedEventHandler DrugWayListCompleted;
        
        /// <remarks/>
        public event ChineseDrugWayListCompletedEventHandler ChineseDrugWayListCompleted;
        
        /// <remarks/>
        public event ChineseDrugHowListCompletedEventHandler ChineseDrugHowListCompleted;
        
        /// <remarks/>
        public event DrugTimeListCompletedEventHandler DrugTimeListCompleted;
        
        /// <remarks/>
        public event PharmacyListCompletedEventHandler PharmacyListCompleted;
        
        /// <remarks/>
        public event DrugKindListCompletedEventHandler DrugKindListCompleted;
        
        /// <remarks/>
        public event CombineConflictCompletedEventHandler CombineConflictCompleted;
        
        /// <remarks/>
        public event DrugListExCompletedEventHandler DrugListExCompleted;
        
        /// <remarks/>
        public event PredefinedOrderForDoctorCompletedEventHandler PredefinedOrderForDoctorCompleted;
        
        /// <remarks/>
        public event PredefinedOrderForDepartmentCompletedEventHandler PredefinedOrderForDepartmentCompleted;
        
        /// <remarks/>
        public event PredefinedItemsForDoctorCompletedEventHandler PredefinedItemsForDoctorCompleted;
        
        /// <remarks/>
        public event PredefinedItemsForDepartmentCompletedEventHandler PredefinedItemsForDepartmentCompleted;
        
        /// <remarks/>
        public event PrivateDrugListCompletedEventHandler PrivateDrugListCompleted;
        
        /// <remarks/>
        public event AddPrivateDrugCompletedEventHandler AddPrivateDrugCompleted;
        
        /// <remarks/>
        public event PredefinedFullCompletedEventHandler PredefinedFullCompleted;
        
        /// <remarks/>
        public event AddPredefinedFullCompletedEventHandler AddPredefinedFullCompleted;
        
        /// <remarks/>
        public event UpdatePredefinedFullCompletedEventHandler UpdatePredefinedFullCompleted;
        
        /// <remarks/>
        public event DeletePredefinedFullCompletedEventHandler DeletePredefinedFullCompleted;
        
        /// <remarks/>
        public event NewOutOrderCompletedEventHandler NewOutOrderCompleted;
        
        /// <remarks/>
        public event OldOutOrderCompletedEventHandler OldOutOrderCompleted;
        
        /// <remarks/>
        public event RemoveOutOrderCompletedEventHandler RemoveOutOrderCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/GetTestResultForOneRequisition", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTestResultForOneRequisition(decimal requisitionNum) {
            object[] results = this.Invoke("GetTestResultForOneRequisition", new object[] {
                        requisitionNum});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTestResultForOneRequisitionAsync(decimal requisitionNum) {
            this.GetTestResultForOneRequisitionAsync(requisitionNum, null);
        }
        
        /// <remarks/>
        public void GetTestResultForOneRequisitionAsync(decimal requisitionNum, object userState) {
            if ((this.GetTestResultForOneRequisitionOperationCompleted == null)) {
                this.GetTestResultForOneRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTestResultForOneRequisitionOperationCompleted);
            }
            this.InvokeAsync("GetTestResultForOneRequisition", new object[] {
                        requisitionNum}, this.GetTestResultForOneRequisitionOperationCompleted, userState);
        }
        
        private void OnGetTestResultForOneRequisitionOperationCompleted(object arg) {
            if ((this.GetTestResultForOneRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTestResultForOneRequisitionCompleted(this, new GetTestResultForOneRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/GetPoorPatients", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPoorPatients(string doctorID, string departmentCode, double dayLimit) {
            object[] results = this.Invoke("GetPoorPatients", new object[] {
                        doctorID,
                        departmentCode,
                        dayLimit});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPoorPatientsAsync(string doctorID, string departmentCode, double dayLimit) {
            this.GetPoorPatientsAsync(doctorID, departmentCode, dayLimit, null);
        }
        
        /// <remarks/>
        public void GetPoorPatientsAsync(string doctorID, string departmentCode, double dayLimit, object userState) {
            if ((this.GetPoorPatientsOperationCompleted == null)) {
                this.GetPoorPatientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPoorPatientsOperationCompleted);
            }
            this.InvokeAsync("GetPoorPatients", new object[] {
                        doctorID,
                        departmentCode,
                        dayLimit}, this.GetPoorPatientsOperationCompleted, userState);
        }
        
        private void OnGetPoorPatientsOperationCompleted(object arg) {
            if ((this.GetPoorPatientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPoorPatientsCompleted(this, new GetPoorPatientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/GetHistoryRegistryInfo", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetHistoryRegistryInfo(string archiveNum) {
            object[] results = this.Invoke("GetHistoryRegistryInfo", new object[] {
                        archiveNum});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryRegistryInfoAsync(string archiveNum) {
            this.GetHistoryRegistryInfoAsync(archiveNum, null);
        }
        
        /// <remarks/>
        public void GetHistoryRegistryInfoAsync(string archiveNum, object userState) {
            if ((this.GetHistoryRegistryInfoOperationCompleted == null)) {
                this.GetHistoryRegistryInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryRegistryInfoOperationCompleted);
            }
            this.InvokeAsync("GetHistoryRegistryInfo", new object[] {
                        archiveNum}, this.GetHistoryRegistryInfoOperationCompleted, userState);
        }
        
        private void OnGetHistoryRegistryInfoOperationCompleted(object arg) {
            if ((this.GetHistoryRegistryInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryRegistryInfoCompleted(this, new GetHistoryRegistryInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/GetTreatForOutPatientByCardNum", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTreatForOutPatientByCardNum(string cardNum, System.DateTime dayStart, string departmentCode) {
            object[] results = this.Invoke("GetTreatForOutPatientByCardNum", new object[] {
                        cardNum,
                        dayStart,
                        departmentCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTreatForOutPatientByCardNumAsync(string cardNum, System.DateTime dayStart, string departmentCode) {
            this.GetTreatForOutPatientByCardNumAsync(cardNum, dayStart, departmentCode, null);
        }
        
        /// <remarks/>
        public void GetTreatForOutPatientByCardNumAsync(string cardNum, System.DateTime dayStart, string departmentCode, object userState) {
            if ((this.GetTreatForOutPatientByCardNumOperationCompleted == null)) {
                this.GetTreatForOutPatientByCardNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreatForOutPatientByCardNumOperationCompleted);
            }
            this.InvokeAsync("GetTreatForOutPatientByCardNum", new object[] {
                        cardNum,
                        dayStart,
                        departmentCode}, this.GetTreatForOutPatientByCardNumOperationCompleted, userState);
        }
        
        private void OnGetTreatForOutPatientByCardNumOperationCompleted(object arg) {
            if ((this.GetTreatForOutPatientByCardNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreatForOutPatientByCardNumCompleted(this, new GetTreatForOutPatientByCardNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/GetPatientsForArchiveNumByName", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPatientsForArchiveNumByName(string patientName) {
            object[] results = this.Invoke("GetPatientsForArchiveNumByName", new object[] {
                        patientName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientsForArchiveNumByNameAsync(string patientName) {
            this.GetPatientsForArchiveNumByNameAsync(patientName, null);
        }
        
        /// <remarks/>
        public void GetPatientsForArchiveNumByNameAsync(string patientName, object userState) {
            if ((this.GetPatientsForArchiveNumByNameOperationCompleted == null)) {
                this.GetPatientsForArchiveNumByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientsForArchiveNumByNameOperationCompleted);
            }
            this.InvokeAsync("GetPatientsForArchiveNumByName", new object[] {
                        patientName}, this.GetPatientsForArchiveNumByNameOperationCompleted, userState);
        }
        
        private void OnGetPatientsForArchiveNumByNameOperationCompleted(object arg) {
            if ((this.GetPatientsForArchiveNumByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientsForArchiveNumByNameCompleted(this, new GetPatientsForArchiveNumByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/GetRegistryIDsForOneCardNum", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRegistryIDsForOneCardNum(string cardNum) {
            object[] results = this.Invoke("GetRegistryIDsForOneCardNum", new object[] {
                        cardNum});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegistryIDsForOneCardNumAsync(string cardNum) {
            this.GetRegistryIDsForOneCardNumAsync(cardNum, null);
        }
        
        /// <remarks/>
        public void GetRegistryIDsForOneCardNumAsync(string cardNum, object userState) {
            if ((this.GetRegistryIDsForOneCardNumOperationCompleted == null)) {
                this.GetRegistryIDsForOneCardNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegistryIDsForOneCardNumOperationCompleted);
            }
            this.InvokeAsync("GetRegistryIDsForOneCardNum", new object[] {
                        cardNum}, this.GetRegistryIDsForOneCardNumOperationCompleted, userState);
        }
        
        private void OnGetRegistryIDsForOneCardNumOperationCompleted(object arg) {
            if ((this.GetRegistryIDsForOneCardNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegistryIDsForOneCardNumCompleted(this, new GetRegistryIDsForOneCardNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/GetCardTypeByCardNum", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCardTypeByCardNum(string cardNum) {
            object[] results = this.Invoke("GetCardTypeByCardNum", new object[] {
                        cardNum});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCardTypeByCardNumAsync(string cardNum) {
            this.GetCardTypeByCardNumAsync(cardNum, null);
        }
        
        /// <remarks/>
        public void GetCardTypeByCardNumAsync(string cardNum, object userState) {
            if ((this.GetCardTypeByCardNumOperationCompleted == null)) {
                this.GetCardTypeByCardNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCardTypeByCardNumOperationCompleted);
            }
            this.InvokeAsync("GetCardTypeByCardNum", new object[] {
                        cardNum}, this.GetCardTypeByCardNumOperationCompleted, userState);
        }
        
        private void OnGetCardTypeByCardNumOperationCompleted(object arg) {
            if ((this.GetCardTypeByCardNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCardTypeByCardNumCompleted(this, new GetCardTypeByCardNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/GetDeposit", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDeposit(string registryID) {
            object[] results = this.Invoke("GetDeposit", new object[] {
                        registryID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepositAsync(string registryID) {
            this.GetDepositAsync(registryID, null);
        }
        
        /// <remarks/>
        public void GetDepositAsync(string registryID, object userState) {
            if ((this.GetDepositOperationCompleted == null)) {
                this.GetDepositOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepositOperationCompleted);
            }
            this.InvokeAsync("GetDeposit", new object[] {
                        registryID}, this.GetDepositOperationCompleted, userState);
        }
        
        private void OnGetDepositOperationCompleted(object arg) {
            if ((this.GetDepositCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepositCompleted(this, new GetDepositCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/GetRegistryInfoByCardNumForCallBack", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRegistryInfoByCardNumForCallBack(string department, System.DateTime dayStart, string cardNum) {
            object[] results = this.Invoke("GetRegistryInfoByCardNumForCallBack", new object[] {
                        department,
                        dayStart,
                        cardNum});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegistryInfoByCardNumForCallBackAsync(string department, System.DateTime dayStart, string cardNum) {
            this.GetRegistryInfoByCardNumForCallBackAsync(department, dayStart, cardNum, null);
        }
        
        /// <remarks/>
        public void GetRegistryInfoByCardNumForCallBackAsync(string department, System.DateTime dayStart, string cardNum, object userState) {
            if ((this.GetRegistryInfoByCardNumForCallBackOperationCompleted == null)) {
                this.GetRegistryInfoByCardNumForCallBackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegistryInfoByCardNumForCallBackOperationCompleted);
            }
            this.InvokeAsync("GetRegistryInfoByCardNumForCallBack", new object[] {
                        department,
                        dayStart,
                        cardNum}, this.GetRegistryInfoByCardNumForCallBackOperationCompleted, userState);
        }
        
        private void OnGetRegistryInfoByCardNumForCallBackOperationCompleted(object arg) {
            if ((this.GetRegistryInfoByCardNumForCallBackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegistryInfoByCardNumForCallBackCompleted(this, new GetRegistryInfoByCardNumForCallBackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/GetOrderInfoByRegistryIDForQuery", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOrderInfoByRegistryIDForQuery(string registryID) {
            object[] results = this.Invoke("GetOrderInfoByRegistryIDForQuery", new object[] {
                        registryID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderInfoByRegistryIDForQueryAsync(string registryID) {
            this.GetOrderInfoByRegistryIDForQueryAsync(registryID, null);
        }
        
        /// <remarks/>
        public void GetOrderInfoByRegistryIDForQueryAsync(string registryID, object userState) {
            if ((this.GetOrderInfoByRegistryIDForQueryOperationCompleted == null)) {
                this.GetOrderInfoByRegistryIDForQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderInfoByRegistryIDForQueryOperationCompleted);
            }
            this.InvokeAsync("GetOrderInfoByRegistryIDForQuery", new object[] {
                        registryID}, this.GetOrderInfoByRegistryIDForQueryOperationCompleted, userState);
        }
        
        private void OnGetOrderInfoByRegistryIDForQueryOperationCompleted(object arg) {
            if ((this.GetOrderInfoByRegistryIDForQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderInfoByRegistryIDForQueryCompleted(this, new GetOrderInfoByRegistryIDForQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/GetDepartmentsForRegistry", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDepartmentsForRegistry() {
            object[] results = this.Invoke("GetDepartmentsForRegistry", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentsForRegistryAsync() {
            this.GetDepartmentsForRegistryAsync(null);
        }
        
        /// <remarks/>
        public void GetDepartmentsForRegistryAsync(object userState) {
            if ((this.GetDepartmentsForRegistryOperationCompleted == null)) {
                this.GetDepartmentsForRegistryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentsForRegistryOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentsForRegistry", new object[0], this.GetDepartmentsForRegistryOperationCompleted, userState);
        }
        
        private void OnGetDepartmentsForRegistryOperationCompleted(object arg) {
            if ((this.GetDepartmentsForRegistryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentsForRegistryCompleted(this, new GetDepartmentsForRegistryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/GetOutPatientTreatFeeForOneOperator", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOutPatientTreatFeeForOneOperator(string opcode, System.DateTime dayFrom, System.DateTime dayTo) {
            object[] results = this.Invoke("GetOutPatientTreatFeeForOneOperator", new object[] {
                        opcode,
                        dayFrom,
                        dayTo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOutPatientTreatFeeForOneOperatorAsync(string opcode, System.DateTime dayFrom, System.DateTime dayTo) {
            this.GetOutPatientTreatFeeForOneOperatorAsync(opcode, dayFrom, dayTo, null);
        }
        
        /// <remarks/>
        public void GetOutPatientTreatFeeForOneOperatorAsync(string opcode, System.DateTime dayFrom, System.DateTime dayTo, object userState) {
            if ((this.GetOutPatientTreatFeeForOneOperatorOperationCompleted == null)) {
                this.GetOutPatientTreatFeeForOneOperatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutPatientTreatFeeForOneOperatorOperationCompleted);
            }
            this.InvokeAsync("GetOutPatientTreatFeeForOneOperator", new object[] {
                        opcode,
                        dayFrom,
                        dayTo}, this.GetOutPatientTreatFeeForOneOperatorOperationCompleted, userState);
        }
        
        private void OnGetOutPatientTreatFeeForOneOperatorOperationCompleted(object arg) {
            if ((this.GetOutPatientTreatFeeForOneOperatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutPatientTreatFeeForOneOperatorCompleted(this, new GetOutPatientTreatFeeForOneOperatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/GetTreatFeeForOneOutPatient", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTreatFeeForOneOutPatient(string opcode, string registryID) {
            object[] results = this.Invoke("GetTreatFeeForOneOutPatient", new object[] {
                        opcode,
                        registryID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTreatFeeForOneOutPatientAsync(string opcode, string registryID) {
            this.GetTreatFeeForOneOutPatientAsync(opcode, registryID, null);
        }
        
        /// <remarks/>
        public void GetTreatFeeForOneOutPatientAsync(string opcode, string registryID, object userState) {
            if ((this.GetTreatFeeForOneOutPatientOperationCompleted == null)) {
                this.GetTreatFeeForOneOutPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreatFeeForOneOutPatientOperationCompleted);
            }
            this.InvokeAsync("GetTreatFeeForOneOutPatient", new object[] {
                        opcode,
                        registryID}, this.GetTreatFeeForOneOutPatientOperationCompleted, userState);
        }
        
        private void OnGetTreatFeeForOneOutPatientOperationCompleted(object arg) {
            if ((this.GetTreatFeeForOneOutPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreatFeeForOneOutPatientCompleted(this, new GetTreatFeeForOneOutPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/Icd10", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Icd10() {
            object[] results = this.Invoke("Icd10", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Icd10Async() {
            this.Icd10Async(null);
        }
        
        /// <remarks/>
        public void Icd10Async(object userState) {
            if ((this.Icd10OperationCompleted == null)) {
                this.Icd10OperationCompleted = new System.Threading.SendOrPostCallback(this.OnIcd10OperationCompleted);
            }
            this.InvokeAsync("Icd10", new object[0], this.Icd10OperationCompleted, userState);
        }
        
        private void OnIcd10OperationCompleted(object arg) {
            if ((this.Icd10Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Icd10Completed(this, new Icd10CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/GetItemsForBeInpatient", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetItemsForBeInpatient() {
            object[] results = this.Invoke("GetItemsForBeInpatient", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemsForBeInpatientAsync() {
            this.GetItemsForBeInpatientAsync(null);
        }
        
        /// <remarks/>
        public void GetItemsForBeInpatientAsync(object userState) {
            if ((this.GetItemsForBeInpatientOperationCompleted == null)) {
                this.GetItemsForBeInpatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemsForBeInpatientOperationCompleted);
            }
            this.InvokeAsync("GetItemsForBeInpatient", new object[0], this.GetItemsForBeInpatientOperationCompleted, userState);
        }
        
        private void OnGetItemsForBeInpatientOperationCompleted(object arg) {
            if ((this.GetItemsForBeInpatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemsForBeInpatientCompleted(this, new GetItemsForBeInpatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/Rooms", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Rooms(string areaCode) {
            object[] results = this.Invoke("Rooms", new object[] {
                        areaCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RoomsAsync(string areaCode) {
            this.RoomsAsync(areaCode, null);
        }
        
        /// <remarks/>
        public void RoomsAsync(string areaCode, object userState) {
            if ((this.RoomsOperationCompleted == null)) {
                this.RoomsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRoomsOperationCompleted);
            }
            this.InvokeAsync("Rooms", new object[] {
                        areaCode}, this.RoomsOperationCompleted, userState);
        }
        
        private void OnRoomsOperationCompleted(object arg) {
            if ((this.RoomsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RoomsCompleted(this, new RoomsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/PayReturn", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PayReturn(string registryID, string doctorID, double total, string billNum) {
            object[] results = this.Invoke("PayReturn", new object[] {
                        registryID,
                        doctorID,
                        total,
                        billNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PayReturnAsync(string registryID, string doctorID, double total, string billNum) {
            this.PayReturnAsync(registryID, doctorID, total, billNum, null);
        }
        
        /// <remarks/>
        public void PayReturnAsync(string registryID, string doctorID, double total, string billNum, object userState) {
            if ((this.PayReturnOperationCompleted == null)) {
                this.PayReturnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPayReturnOperationCompleted);
            }
            this.InvokeAsync("PayReturn", new object[] {
                        registryID,
                        doctorID,
                        total,
                        billNum}, this.PayReturnOperationCompleted, userState);
        }
        
        private void OnPayReturnOperationCompleted(object arg) {
            if ((this.PayReturnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PayReturnCompleted(this, new PayReturnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/FinishOutPatient", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FinishOutPatient(string registryID, bool callQueue) {
            object[] results = this.Invoke("FinishOutPatient", new object[] {
                        registryID,
                        callQueue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FinishOutPatientAsync(string registryID, bool callQueue) {
            this.FinishOutPatientAsync(registryID, callQueue, null);
        }
        
        /// <remarks/>
        public void FinishOutPatientAsync(string registryID, bool callQueue, object userState) {
            if ((this.FinishOutPatientOperationCompleted == null)) {
                this.FinishOutPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishOutPatientOperationCompleted);
            }
            this.InvokeAsync("FinishOutPatient", new object[] {
                        registryID,
                        callQueue}, this.FinishOutPatientOperationCompleted, userState);
        }
        
        private void OnFinishOutPatientOperationCompleted(object arg) {
            if ((this.FinishOutPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinishOutPatientCompleted(this, new FinishOutPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/RecallOutPatient", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RecallOutPatient(string opcode, string registryID, string reason, string doctorID) {
            object[] results = this.Invoke("RecallOutPatient", new object[] {
                        opcode,
                        registryID,
                        reason,
                        doctorID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RecallOutPatientAsync(string opcode, string registryID, string reason, string doctorID) {
            this.RecallOutPatientAsync(opcode, registryID, reason, doctorID, null);
        }
        
        /// <remarks/>
        public void RecallOutPatientAsync(string opcode, string registryID, string reason, string doctorID, object userState) {
            if ((this.RecallOutPatientOperationCompleted == null)) {
                this.RecallOutPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecallOutPatientOperationCompleted);
            }
            this.InvokeAsync("RecallOutPatient", new object[] {
                        opcode,
                        registryID,
                        reason,
                        doctorID}, this.RecallOutPatientOperationCompleted, userState);
        }
        
        private void OnRecallOutPatientOperationCompleted(object arg) {
            if ((this.RecallOutPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecallOutPatientCompleted(this, new RecallOutPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/OutTransfer", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OutTransfer(string registryID, string department, string regType, string oldDepartment, bool callQueue) {
            object[] results = this.Invoke("OutTransfer", new object[] {
                        registryID,
                        department,
                        regType,
                        oldDepartment,
                        callQueue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OutTransferAsync(string registryID, string department, string regType, string oldDepartment, bool callQueue) {
            this.OutTransferAsync(registryID, department, regType, oldDepartment, callQueue, null);
        }
        
        /// <remarks/>
        public void OutTransferAsync(string registryID, string department, string regType, string oldDepartment, bool callQueue, object userState) {
            if ((this.OutTransferOperationCompleted == null)) {
                this.OutTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOutTransferOperationCompleted);
            }
            this.InvokeAsync("OutTransfer", new object[] {
                        registryID,
                        department,
                        regType,
                        oldDepartment,
                        callQueue}, this.OutTransferOperationCompleted, userState);
        }
        
        private void OnOutTransferOperationCompleted(object arg) {
            if ((this.OutTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OutTransferCompleted(this, new OutTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/UnSeePatient", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UnSeePatient(string registryID, string registryType, bool callQueue) {
            object[] results = this.Invoke("UnSeePatient", new object[] {
                        registryID,
                        registryType,
                        callQueue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnSeePatientAsync(string registryID, string registryType, bool callQueue) {
            this.UnSeePatientAsync(registryID, registryType, callQueue, null);
        }
        
        /// <remarks/>
        public void UnSeePatientAsync(string registryID, string registryType, bool callQueue, object userState) {
            if ((this.UnSeePatientOperationCompleted == null)) {
                this.UnSeePatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnSeePatientOperationCompleted);
            }
            this.InvokeAsync("UnSeePatient", new object[] {
                        registryID,
                        registryType,
                        callQueue}, this.UnSeePatientOperationCompleted, userState);
        }
        
        private void OnUnSeePatientOperationCompleted(object arg) {
            if ((this.UnSeePatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnSeePatientCompleted(this, new UnSeePatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/BeInpatient", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BeInpatient(System.Data.DataSet dsInfo, bool callQueue) {
            object[] results = this.Invoke("BeInpatient", new object[] {
                        dsInfo,
                        callQueue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BeInpatientAsync(System.Data.DataSet dsInfo, bool callQueue) {
            this.BeInpatientAsync(dsInfo, callQueue, null);
        }
        
        /// <remarks/>
        public void BeInpatientAsync(System.Data.DataSet dsInfo, bool callQueue, object userState) {
            if ((this.BeInpatientOperationCompleted == null)) {
                this.BeInpatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeInpatientOperationCompleted);
            }
            this.InvokeAsync("BeInpatient", new object[] {
                        dsInfo,
                        callQueue}, this.BeInpatientOperationCompleted, userState);
        }
        
        private void OnBeInpatientOperationCompleted(object arg) {
            if ((this.BeInpatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeInpatientCompleted(this, new BeInpatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/OutpatientBeenSeeing", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OutpatientBeenSeeing(string regID, string doctorID, string departmentCode, RegState rstatus, bool callQueue) {
            object[] results = this.Invoke("OutpatientBeenSeeing", new object[] {
                        regID,
                        doctorID,
                        departmentCode,
                        rstatus,
                        callQueue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OutpatientBeenSeeingAsync(string regID, string doctorID, string departmentCode, RegState rstatus, bool callQueue) {
            this.OutpatientBeenSeeingAsync(regID, doctorID, departmentCode, rstatus, callQueue, null);
        }
        
        /// <remarks/>
        public void OutpatientBeenSeeingAsync(string regID, string doctorID, string departmentCode, RegState rstatus, bool callQueue, object userState) {
            if ((this.OutpatientBeenSeeingOperationCompleted == null)) {
                this.OutpatientBeenSeeingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOutpatientBeenSeeingOperationCompleted);
            }
            this.InvokeAsync("OutpatientBeenSeeing", new object[] {
                        regID,
                        doctorID,
                        departmentCode,
                        rstatus,
                        callQueue}, this.OutpatientBeenSeeingOperationCompleted, userState);
        }
        
        private void OnOutpatientBeenSeeingOperationCompleted(object arg) {
            if ((this.OutpatientBeenSeeingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OutpatientBeenSeeingCompleted(this, new OutpatientBeenSeeingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/ImageExamTypes", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ImageExamTypes() {
            object[] results = this.Invoke("ImageExamTypes", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ImageExamTypesAsync() {
            this.ImageExamTypesAsync(null);
        }
        
        /// <remarks/>
        public void ImageExamTypesAsync(object userState) {
            if ((this.ImageExamTypesOperationCompleted == null)) {
                this.ImageExamTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImageExamTypesOperationCompleted);
            }
            this.InvokeAsync("ImageExamTypes", new object[0], this.ImageExamTypesOperationCompleted, userState);
        }
        
        private void OnImageExamTypesOperationCompleted(object arg) {
            if ((this.ImageExamTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImageExamTypesCompleted(this, new ImageExamTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/ImageExamItems", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ImageExamItems() {
            object[] results = this.Invoke("ImageExamItems", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ImageExamItemsAsync() {
            this.ImageExamItemsAsync(null);
        }
        
        /// <remarks/>
        public void ImageExamItemsAsync(object userState) {
            if ((this.ImageExamItemsOperationCompleted == null)) {
                this.ImageExamItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImageExamItemsOperationCompleted);
            }
            this.InvokeAsync("ImageExamItems", new object[0], this.ImageExamItemsOperationCompleted, userState);
        }
        
        private void OnImageExamItemsOperationCompleted(object arg) {
            if ((this.ImageExamItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImageExamItemsCompleted(this, new ImageExamItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/ImageExamStyles", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ImageExamStyles() {
            object[] results = this.Invoke("ImageExamStyles", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ImageExamStylesAsync() {
            this.ImageExamStylesAsync(null);
        }
        
        /// <remarks/>
        public void ImageExamStylesAsync(object userState) {
            if ((this.ImageExamStylesOperationCompleted == null)) {
                this.ImageExamStylesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImageExamStylesOperationCompleted);
            }
            this.InvokeAsync("ImageExamStyles", new object[0], this.ImageExamStylesOperationCompleted, userState);
        }
        
        private void OnImageExamStylesOperationCompleted(object arg) {
            if ((this.ImageExamStylesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImageExamStylesCompleted(this, new ImageExamStylesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/ImageExamFeeIndexes", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ImageExamFeeIndexes() {
            object[] results = this.Invoke("ImageExamFeeIndexes", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ImageExamFeeIndexesAsync() {
            this.ImageExamFeeIndexesAsync(null);
        }
        
        /// <remarks/>
        public void ImageExamFeeIndexesAsync(object userState) {
            if ((this.ImageExamFeeIndexesOperationCompleted == null)) {
                this.ImageExamFeeIndexesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImageExamFeeIndexesOperationCompleted);
            }
            this.InvokeAsync("ImageExamFeeIndexes", new object[0], this.ImageExamFeeIndexesOperationCompleted, userState);
        }
        
        private void OnImageExamFeeIndexesOperationCompleted(object arg) {
            if ((this.ImageExamFeeIndexesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImageExamFeeIndexesCompleted(this, new ImageExamFeeIndexesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/ImageExamInfo", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ImageExamInfo() {
            object[] results = this.Invoke("ImageExamInfo", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ImageExamInfoAsync() {
            this.ImageExamInfoAsync(null);
        }
        
        /// <remarks/>
        public void ImageExamInfoAsync(object userState) {
            if ((this.ImageExamInfoOperationCompleted == null)) {
                this.ImageExamInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImageExamInfoOperationCompleted);
            }
            this.InvokeAsync("ImageExamInfo", new object[0], this.ImageExamInfoOperationCompleted, userState);
        }
        
        private void OnImageExamInfoOperationCompleted(object arg) {
            if ((this.ImageExamInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImageExamInfoCompleted(this, new ImageExamInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/PhysicalExamTypes", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PhysicalExamTypes() {
            object[] results = this.Invoke("PhysicalExamTypes", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PhysicalExamTypesAsync() {
            this.PhysicalExamTypesAsync(null);
        }
        
        /// <remarks/>
        public void PhysicalExamTypesAsync(object userState) {
            if ((this.PhysicalExamTypesOperationCompleted == null)) {
                this.PhysicalExamTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPhysicalExamTypesOperationCompleted);
            }
            this.InvokeAsync("PhysicalExamTypes", new object[0], this.PhysicalExamTypesOperationCompleted, userState);
        }
        
        private void OnPhysicalExamTypesOperationCompleted(object arg) {
            if ((this.PhysicalExamTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PhysicalExamTypesCompleted(this, new PhysicalExamTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/PhysicalExamItems", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PhysicalExamItems() {
            object[] results = this.Invoke("PhysicalExamItems", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PhysicalExamItemsAsync() {
            this.PhysicalExamItemsAsync(null);
        }
        
        /// <remarks/>
        public void PhysicalExamItemsAsync(object userState) {
            if ((this.PhysicalExamItemsOperationCompleted == null)) {
                this.PhysicalExamItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPhysicalExamItemsOperationCompleted);
            }
            this.InvokeAsync("PhysicalExamItems", new object[0], this.PhysicalExamItemsOperationCompleted, userState);
        }
        
        private void OnPhysicalExamItemsOperationCompleted(object arg) {
            if ((this.PhysicalExamItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PhysicalExamItemsCompleted(this, new PhysicalExamItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/TestTypes", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TestTypes() {
            object[] results = this.Invoke("TestTypes", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TestTypesAsync() {
            this.TestTypesAsync(null);
        }
        
        /// <remarks/>
        public void TestTypesAsync(object userState) {
            if ((this.TestTypesOperationCompleted == null)) {
                this.TestTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestTypesOperationCompleted);
            }
            this.InvokeAsync("TestTypes", new object[0], this.TestTypesOperationCompleted, userState);
        }
        
        private void OnTestTypesOperationCompleted(object arg) {
            if ((this.TestTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestTypesCompleted(this, new TestTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/TestItems", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TestItems() {
            object[] results = this.Invoke("TestItems", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TestItemsAsync() {
            this.TestItemsAsync(null);
        }
        
        /// <remarks/>
        public void TestItemsAsync(object userState) {
            if ((this.TestItemsOperationCompleted == null)) {
                this.TestItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestItemsOperationCompleted);
            }
            this.InvokeAsync("TestItems", new object[0], this.TestItemsOperationCompleted, userState);
        }
        
        private void OnTestItemsOperationCompleted(object arg) {
            if ((this.TestItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestItemsCompleted(this, new TestItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/TestItemsDepartments", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TestItemsDepartments() {
            object[] results = this.Invoke("TestItemsDepartments", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TestItemsDepartmentsAsync() {
            this.TestItemsDepartmentsAsync(null);
        }
        
        /// <remarks/>
        public void TestItemsDepartmentsAsync(object userState) {
            if ((this.TestItemsDepartmentsOperationCompleted == null)) {
                this.TestItemsDepartmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestItemsDepartmentsOperationCompleted);
            }
            this.InvokeAsync("TestItemsDepartments", new object[0], this.TestItemsDepartmentsOperationCompleted, userState);
        }
        
        private void OnTestItemsDepartmentsOperationCompleted(object arg) {
            if ((this.TestItemsDepartmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestItemsDepartmentsCompleted(this, new TestItemsDepartmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/TestSubitems", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TestSubitems() {
            object[] results = this.Invoke("TestSubitems", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TestSubitemsAsync() {
            this.TestSubitemsAsync(null);
        }
        
        /// <remarks/>
        public void TestSubitemsAsync(object userState) {
            if ((this.TestSubitemsOperationCompleted == null)) {
                this.TestSubitemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestSubitemsOperationCompleted);
            }
            this.InvokeAsync("TestSubitems", new object[0], this.TestSubitemsOperationCompleted, userState);
        }
        
        private void OnTestSubitemsOperationCompleted(object arg) {
            if ((this.TestSubitemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestSubitemsCompleted(this, new TestSubitemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/ExamTestInfo", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ExamTestInfo() {
            object[] results = this.Invoke("ExamTestInfo", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExamTestInfoAsync() {
            this.ExamTestInfoAsync(null);
        }
        
        /// <remarks/>
        public void ExamTestInfoAsync(object userState) {
            if ((this.ExamTestInfoOperationCompleted == null)) {
                this.ExamTestInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExamTestInfoOperationCompleted);
            }
            this.InvokeAsync("ExamTestInfo", new object[0], this.ExamTestInfoOperationCompleted, userState);
        }
        
        private void OnExamTestInfoOperationCompleted(object arg) {
            if ((this.ExamTestInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExamTestInfoCompleted(this, new ExamTestInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/TreatClass", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TreatClass() {
            object[] results = this.Invoke("TreatClass", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TreatClassAsync() {
            this.TreatClassAsync(null);
        }
        
        /// <remarks/>
        public void TreatClassAsync(object userState) {
            if ((this.TreatClassOperationCompleted == null)) {
                this.TreatClassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTreatClassOperationCompleted);
            }
            this.InvokeAsync("TreatClass", new object[0], this.TreatClassOperationCompleted, userState);
        }
        
        private void OnTreatClassOperationCompleted(object arg) {
            if ((this.TreatClassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TreatClassCompleted(this, new TreatClassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/TreatSubitems", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TreatSubitems() {
            object[] results = this.Invoke("TreatSubitems", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TreatSubitemsAsync() {
            this.TreatSubitemsAsync(null);
        }
        
        /// <remarks/>
        public void TreatSubitemsAsync(object userState) {
            if ((this.TreatSubitemsOperationCompleted == null)) {
                this.TreatSubitemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTreatSubitemsOperationCompleted);
            }
            this.InvokeAsync("TreatSubitems", new object[0], this.TreatSubitemsOperationCompleted, userState);
        }
        
        private void OnTreatSubitemsOperationCompleted(object arg) {
            if ((this.TreatSubitemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TreatSubitemsCompleted(this, new TreatSubitemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/TreatOrder", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TreatOrder() {
            object[] results = this.Invoke("TreatOrder", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TreatOrderAsync() {
            this.TreatOrderAsync(null);
        }
        
        /// <remarks/>
        public void TreatOrderAsync(object userState) {
            if ((this.TreatOrderOperationCompleted == null)) {
                this.TreatOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTreatOrderOperationCompleted);
            }
            this.InvokeAsync("TreatOrder", new object[0], this.TreatOrderOperationCompleted, userState);
        }
        
        private void OnTreatOrderOperationCompleted(object arg) {
            if ((this.TreatOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TreatOrderCompleted(this, new TreatOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/TreatOrderDetail", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TreatOrderDetail(decimal orderSequence) {
            object[] results = this.Invoke("TreatOrderDetail", new object[] {
                        orderSequence});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TreatOrderDetailAsync(decimal orderSequence) {
            this.TreatOrderDetailAsync(orderSequence, null);
        }
        
        /// <remarks/>
        public void TreatOrderDetailAsync(decimal orderSequence, object userState) {
            if ((this.TreatOrderDetailOperationCompleted == null)) {
                this.TreatOrderDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTreatOrderDetailOperationCompleted);
            }
            this.InvokeAsync("TreatOrderDetail", new object[] {
                        orderSequence}, this.TreatOrderDetailOperationCompleted, userState);
        }
        
        private void OnTreatOrderDetailOperationCompleted(object arg) {
            if ((this.TreatOrderDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TreatOrderDetailCompleted(this, new TreatOrderDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/TreatInfo", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TreatInfo() {
            object[] results = this.Invoke("TreatInfo", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TreatInfoAsync() {
            this.TreatInfoAsync(null);
        }
        
        /// <remarks/>
        public void TreatInfoAsync(object userState) {
            if ((this.TreatInfoOperationCompleted == null)) {
                this.TreatInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTreatInfoOperationCompleted);
            }
            this.InvokeAsync("TreatInfo", new object[0], this.TreatInfoOperationCompleted, userState);
        }
        
        private void OnTreatInfoOperationCompleted(object arg) {
            if ((this.TreatInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TreatInfoCompleted(this, new TreatInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/ExamTestFeeItems", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ExamTestFeeItems() {
            object[] results = this.Invoke("ExamTestFeeItems", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExamTestFeeItemsAsync() {
            this.ExamTestFeeItemsAsync(null);
        }
        
        /// <remarks/>
        public void ExamTestFeeItemsAsync(object userState) {
            if ((this.ExamTestFeeItemsOperationCompleted == null)) {
                this.ExamTestFeeItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExamTestFeeItemsOperationCompleted);
            }
            this.InvokeAsync("ExamTestFeeItems", new object[0], this.ExamTestFeeItemsOperationCompleted, userState);
        }
        
        private void OnExamTestFeeItemsOperationCompleted(object arg) {
            if ((this.ExamTestFeeItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExamTestFeeItemsCompleted(this, new ExamTestFeeItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/ExamTestPriceList", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ExamTestPriceList(string departmentCode) {
            object[] results = this.Invoke("ExamTestPriceList", new object[] {
                        departmentCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExamTestPriceListAsync(string departmentCode) {
            this.ExamTestPriceListAsync(departmentCode, null);
        }
        
        /// <remarks/>
        public void ExamTestPriceListAsync(string departmentCode, object userState) {
            if ((this.ExamTestPriceListOperationCompleted == null)) {
                this.ExamTestPriceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExamTestPriceListOperationCompleted);
            }
            this.InvokeAsync("ExamTestPriceList", new object[] {
                        departmentCode}, this.ExamTestPriceListOperationCompleted, userState);
        }
        
        private void OnExamTestPriceListOperationCompleted(object arg) {
            if ((this.ExamTestPriceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExamTestPriceListCompleted(this, new ExamTestPriceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/ExamTestChargeInfo", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ExamTestChargeInfo(string departmentCode) {
            object[] results = this.Invoke("ExamTestChargeInfo", new object[] {
                        departmentCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExamTestChargeInfoAsync(string departmentCode) {
            this.ExamTestChargeInfoAsync(departmentCode, null);
        }
        
        /// <remarks/>
        public void ExamTestChargeInfoAsync(string departmentCode, object userState) {
            if ((this.ExamTestChargeInfoOperationCompleted == null)) {
                this.ExamTestChargeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExamTestChargeInfoOperationCompleted);
            }
            this.InvokeAsync("ExamTestChargeInfo", new object[] {
                        departmentCode}, this.ExamTestChargeInfoOperationCompleted, userState);
        }
        
        private void OnExamTestChargeInfoOperationCompleted(object arg) {
            if ((this.ExamTestChargeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExamTestChargeInfoCompleted(this, new ExamTestChargeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/GetRegistryIDByCardNum", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRegistryIDByCardNum(string doctorID, string department, System.DateTime regDate, string cardNum) {
            object[] results = this.Invoke("GetRegistryIDByCardNum", new object[] {
                        doctorID,
                        department,
                        regDate,
                        cardNum});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegistryIDByCardNumAsync(string doctorID, string department, System.DateTime regDate, string cardNum) {
            this.GetRegistryIDByCardNumAsync(doctorID, department, regDate, cardNum, null);
        }
        
        /// <remarks/>
        public void GetRegistryIDByCardNumAsync(string doctorID, string department, System.DateTime regDate, string cardNum, object userState) {
            if ((this.GetRegistryIDByCardNumOperationCompleted == null)) {
                this.GetRegistryIDByCardNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegistryIDByCardNumOperationCompleted);
            }
            this.InvokeAsync("GetRegistryIDByCardNum", new object[] {
                        doctorID,
                        department,
                        regDate,
                        cardNum}, this.GetRegistryIDByCardNumOperationCompleted, userState);
        }
        
        private void OnGetRegistryIDByCardNumOperationCompleted(object arg) {
            if ((this.GetRegistryIDByCardNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegistryIDByCardNumCompleted(this, new GetRegistryIDByCardNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/GetClinicalInfo", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetClinicalInfo(string registryID, string department, double limitInDays) {
            object[] results = this.Invoke("GetClinicalInfo", new object[] {
                        registryID,
                        department,
                        limitInDays});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetClinicalInfoAsync(string registryID, string department, double limitInDays) {
            this.GetClinicalInfoAsync(registryID, department, limitInDays, null);
        }
        
        /// <remarks/>
        public void GetClinicalInfoAsync(string registryID, string department, double limitInDays, object userState) {
            if ((this.GetClinicalInfoOperationCompleted == null)) {
                this.GetClinicalInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClinicalInfoOperationCompleted);
            }
            this.InvokeAsync("GetClinicalInfo", new object[] {
                        registryID,
                        department,
                        limitInDays}, this.GetClinicalInfoOperationCompleted, userState);
        }
        
        private void OnGetClinicalInfoOperationCompleted(object arg) {
            if ((this.GetClinicalInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClinicalInfoCompleted(this, new GetClinicalInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/GetPrescriptionForOutPatient", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPrescriptionForOutPatient(string registryID) {
            object[] results = this.Invoke("GetPrescriptionForOutPatient", new object[] {
                        registryID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrescriptionForOutPatientAsync(string registryID) {
            this.GetPrescriptionForOutPatientAsync(registryID, null);
        }
        
        /// <remarks/>
        public void GetPrescriptionForOutPatientAsync(string registryID, object userState) {
            if ((this.GetPrescriptionForOutPatientOperationCompleted == null)) {
                this.GetPrescriptionForOutPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrescriptionForOutPatientOperationCompleted);
            }
            this.InvokeAsync("GetPrescriptionForOutPatient", new object[] {
                        registryID}, this.GetPrescriptionForOutPatientOperationCompleted, userState);
        }
        
        private void OnGetPrescriptionForOutPatientOperationCompleted(object arg) {
            if ((this.GetPrescriptionForOutPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrescriptionForOutPatientCompleted(this, new GetPrescriptionForOutPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/GetPrescriptionForOneNumber", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPrescriptionForOneNumber(string registryID, decimal prescriptionNum) {
            object[] results = this.Invoke("GetPrescriptionForOneNumber", new object[] {
                        registryID,
                        prescriptionNum});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrescriptionForOneNumberAsync(string registryID, decimal prescriptionNum) {
            this.GetPrescriptionForOneNumberAsync(registryID, prescriptionNum, null);
        }
        
        /// <remarks/>
        public void GetPrescriptionForOneNumberAsync(string registryID, decimal prescriptionNum, object userState) {
            if ((this.GetPrescriptionForOneNumberOperationCompleted == null)) {
                this.GetPrescriptionForOneNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrescriptionForOneNumberOperationCompleted);
            }
            this.InvokeAsync("GetPrescriptionForOneNumber", new object[] {
                        registryID,
                        prescriptionNum}, this.GetPrescriptionForOneNumberOperationCompleted, userState);
        }
        
        private void OnGetPrescriptionForOneNumberOperationCompleted(object arg) {
            if ((this.GetPrescriptionForOneNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrescriptionForOneNumberCompleted(this, new GetPrescriptionForOneNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/GetTreatForOutPatientByRegistryID", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTreatForOutPatientByRegistryID(string registryID, string departmentCode) {
            object[] results = this.Invoke("GetTreatForOutPatientByRegistryID", new object[] {
                        registryID,
                        departmentCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTreatForOutPatientByRegistryIDAsync(string registryID, string departmentCode) {
            this.GetTreatForOutPatientByRegistryIDAsync(registryID, departmentCode, null);
        }
        
        /// <remarks/>
        public void GetTreatForOutPatientByRegistryIDAsync(string registryID, string departmentCode, object userState) {
            if ((this.GetTreatForOutPatientByRegistryIDOperationCompleted == null)) {
                this.GetTreatForOutPatientByRegistryIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreatForOutPatientByRegistryIDOperationCompleted);
            }
            this.InvokeAsync("GetTreatForOutPatientByRegistryID", new object[] {
                        registryID,
                        departmentCode}, this.GetTreatForOutPatientByRegistryIDOperationCompleted, userState);
        }
        
        private void OnGetTreatForOutPatientByRegistryIDOperationCompleted(object arg) {
            if ((this.GetTreatForOutPatientByRegistryIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreatForOutPatientByRegistryIDCompleted(this, new GetTreatForOutPatientByRegistryIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/GetTreatForOutPatientByBill", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTreatForOutPatientByBill(string billNum, string departmentCode) {
            object[] results = this.Invoke("GetTreatForOutPatientByBill", new object[] {
                        billNum,
                        departmentCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTreatForOutPatientByBillAsync(string billNum, string departmentCode) {
            this.GetTreatForOutPatientByBillAsync(billNum, departmentCode, null);
        }
        
        /// <remarks/>
        public void GetTreatForOutPatientByBillAsync(string billNum, string departmentCode, object userState) {
            if ((this.GetTreatForOutPatientByBillOperationCompleted == null)) {
                this.GetTreatForOutPatientByBillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreatForOutPatientByBillOperationCompleted);
            }
            this.InvokeAsync("GetTreatForOutPatientByBill", new object[] {
                        billNum,
                        departmentCode}, this.GetTreatForOutPatientByBillOperationCompleted, userState);
        }
        
        private void OnGetTreatForOutPatientByBillOperationCompleted(object arg) {
            if ((this.GetTreatForOutPatientByBillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreatForOutPatientByBillCompleted(this, new GetTreatForOutPatientByBillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/DrugListForOnePharmacy", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DrugListForOnePharmacy(string pharmacyCode) {
            object[] results = this.Invoke("DrugListForOnePharmacy", new object[] {
                        pharmacyCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DrugListForOnePharmacyAsync(string pharmacyCode) {
            this.DrugListForOnePharmacyAsync(pharmacyCode, null);
        }
        
        /// <remarks/>
        public void DrugListForOnePharmacyAsync(string pharmacyCode, object userState) {
            if ((this.DrugListForOnePharmacyOperationCompleted == null)) {
                this.DrugListForOnePharmacyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDrugListForOnePharmacyOperationCompleted);
            }
            this.InvokeAsync("DrugListForOnePharmacy", new object[] {
                        pharmacyCode}, this.DrugListForOnePharmacyOperationCompleted, userState);
        }
        
        private void OnDrugListForOnePharmacyOperationCompleted(object arg) {
            if ((this.DrugListForOnePharmacyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DrugListForOnePharmacyCompleted(this, new DrugListForOnePharmacyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/AnaesthesiaDrugList", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet AnaesthesiaDrugList(string pharmacyCode) {
            object[] results = this.Invoke("AnaesthesiaDrugList", new object[] {
                        pharmacyCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void AnaesthesiaDrugListAsync(string pharmacyCode) {
            this.AnaesthesiaDrugListAsync(pharmacyCode, null);
        }
        
        /// <remarks/>
        public void AnaesthesiaDrugListAsync(string pharmacyCode, object userState) {
            if ((this.AnaesthesiaDrugListOperationCompleted == null)) {
                this.AnaesthesiaDrugListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAnaesthesiaDrugListOperationCompleted);
            }
            this.InvokeAsync("AnaesthesiaDrugList", new object[] {
                        pharmacyCode}, this.AnaesthesiaDrugListOperationCompleted, userState);
        }
        
        private void OnAnaesthesiaDrugListOperationCompleted(object arg) {
            if ((this.AnaesthesiaDrugListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AnaesthesiaDrugListCompleted(this, new AnaesthesiaDrugListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/DrugWayList", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DrugWayList() {
            object[] results = this.Invoke("DrugWayList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DrugWayListAsync() {
            this.DrugWayListAsync(null);
        }
        
        /// <remarks/>
        public void DrugWayListAsync(object userState) {
            if ((this.DrugWayListOperationCompleted == null)) {
                this.DrugWayListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDrugWayListOperationCompleted);
            }
            this.InvokeAsync("DrugWayList", new object[0], this.DrugWayListOperationCompleted, userState);
        }
        
        private void OnDrugWayListOperationCompleted(object arg) {
            if ((this.DrugWayListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DrugWayListCompleted(this, new DrugWayListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/ChineseDrugWayList", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ChineseDrugWayList() {
            object[] results = this.Invoke("ChineseDrugWayList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ChineseDrugWayListAsync() {
            this.ChineseDrugWayListAsync(null);
        }
        
        /// <remarks/>
        public void ChineseDrugWayListAsync(object userState) {
            if ((this.ChineseDrugWayListOperationCompleted == null)) {
                this.ChineseDrugWayListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChineseDrugWayListOperationCompleted);
            }
            this.InvokeAsync("ChineseDrugWayList", new object[0], this.ChineseDrugWayListOperationCompleted, userState);
        }
        
        private void OnChineseDrugWayListOperationCompleted(object arg) {
            if ((this.ChineseDrugWayListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChineseDrugWayListCompleted(this, new ChineseDrugWayListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/ChineseDrugHowList", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ChineseDrugHowList() {
            object[] results = this.Invoke("ChineseDrugHowList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ChineseDrugHowListAsync() {
            this.ChineseDrugHowListAsync(null);
        }
        
        /// <remarks/>
        public void ChineseDrugHowListAsync(object userState) {
            if ((this.ChineseDrugHowListOperationCompleted == null)) {
                this.ChineseDrugHowListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChineseDrugHowListOperationCompleted);
            }
            this.InvokeAsync("ChineseDrugHowList", new object[0], this.ChineseDrugHowListOperationCompleted, userState);
        }
        
        private void OnChineseDrugHowListOperationCompleted(object arg) {
            if ((this.ChineseDrugHowListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChineseDrugHowListCompleted(this, new ChineseDrugHowListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/DrugTimeList", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DrugTimeList() {
            object[] results = this.Invoke("DrugTimeList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DrugTimeListAsync() {
            this.DrugTimeListAsync(null);
        }
        
        /// <remarks/>
        public void DrugTimeListAsync(object userState) {
            if ((this.DrugTimeListOperationCompleted == null)) {
                this.DrugTimeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDrugTimeListOperationCompleted);
            }
            this.InvokeAsync("DrugTimeList", new object[0], this.DrugTimeListOperationCompleted, userState);
        }
        
        private void OnDrugTimeListOperationCompleted(object arg) {
            if ((this.DrugTimeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DrugTimeListCompleted(this, new DrugTimeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/PharmacyList", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PharmacyList() {
            object[] results = this.Invoke("PharmacyList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PharmacyListAsync() {
            this.PharmacyListAsync(null);
        }
        
        /// <remarks/>
        public void PharmacyListAsync(object userState) {
            if ((this.PharmacyListOperationCompleted == null)) {
                this.PharmacyListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPharmacyListOperationCompleted);
            }
            this.InvokeAsync("PharmacyList", new object[0], this.PharmacyListOperationCompleted, userState);
        }
        
        private void OnPharmacyListOperationCompleted(object arg) {
            if ((this.PharmacyListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PharmacyListCompleted(this, new PharmacyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/DrugKindList", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DrugKindList() {
            object[] results = this.Invoke("DrugKindList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DrugKindListAsync() {
            this.DrugKindListAsync(null);
        }
        
        /// <remarks/>
        public void DrugKindListAsync(object userState) {
            if ((this.DrugKindListOperationCompleted == null)) {
                this.DrugKindListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDrugKindListOperationCompleted);
            }
            this.InvokeAsync("DrugKindList", new object[0], this.DrugKindListOperationCompleted, userState);
        }
        
        private void OnDrugKindListOperationCompleted(object arg) {
            if ((this.DrugKindListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DrugKindListCompleted(this, new DrugKindListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/CombineConflict", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CombineConflict() {
            object[] results = this.Invoke("CombineConflict", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CombineConflictAsync() {
            this.CombineConflictAsync(null);
        }
        
        /// <remarks/>
        public void CombineConflictAsync(object userState) {
            if ((this.CombineConflictOperationCompleted == null)) {
                this.CombineConflictOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCombineConflictOperationCompleted);
            }
            this.InvokeAsync("CombineConflict", new object[0], this.CombineConflictOperationCompleted, userState);
        }
        
        private void OnCombineConflictOperationCompleted(object arg) {
            if ((this.CombineConflictCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CombineConflictCompleted(this, new CombineConflictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/DrugListEx", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DrugListEx(string[] pharmacyCodes, int pharmacyCount) {
            object[] results = this.Invoke("DrugListEx", new object[] {
                        pharmacyCodes,
                        pharmacyCount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DrugListExAsync(string[] pharmacyCodes, int pharmacyCount) {
            this.DrugListExAsync(pharmacyCodes, pharmacyCount, null);
        }
        
        /// <remarks/>
        public void DrugListExAsync(string[] pharmacyCodes, int pharmacyCount, object userState) {
            if ((this.DrugListExOperationCompleted == null)) {
                this.DrugListExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDrugListExOperationCompleted);
            }
            this.InvokeAsync("DrugListEx", new object[] {
                        pharmacyCodes,
                        pharmacyCount}, this.DrugListExOperationCompleted, userState);
        }
        
        private void OnDrugListExOperationCompleted(object arg) {
            if ((this.DrugListExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DrugListExCompleted(this, new DrugListExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/PredefinedOrderForDoctor", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PredefinedOrderForDoctor(string doctorID) {
            object[] results = this.Invoke("PredefinedOrderForDoctor", new object[] {
                        doctorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PredefinedOrderForDoctorAsync(string doctorID) {
            this.PredefinedOrderForDoctorAsync(doctorID, null);
        }
        
        /// <remarks/>
        public void PredefinedOrderForDoctorAsync(string doctorID, object userState) {
            if ((this.PredefinedOrderForDoctorOperationCompleted == null)) {
                this.PredefinedOrderForDoctorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPredefinedOrderForDoctorOperationCompleted);
            }
            this.InvokeAsync("PredefinedOrderForDoctor", new object[] {
                        doctorID}, this.PredefinedOrderForDoctorOperationCompleted, userState);
        }
        
        private void OnPredefinedOrderForDoctorOperationCompleted(object arg) {
            if ((this.PredefinedOrderForDoctorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PredefinedOrderForDoctorCompleted(this, new PredefinedOrderForDoctorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/PredefinedOrderForDepartment", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PredefinedOrderForDepartment(string departmentCode) {
            object[] results = this.Invoke("PredefinedOrderForDepartment", new object[] {
                        departmentCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PredefinedOrderForDepartmentAsync(string departmentCode) {
            this.PredefinedOrderForDepartmentAsync(departmentCode, null);
        }
        
        /// <remarks/>
        public void PredefinedOrderForDepartmentAsync(string departmentCode, object userState) {
            if ((this.PredefinedOrderForDepartmentOperationCompleted == null)) {
                this.PredefinedOrderForDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPredefinedOrderForDepartmentOperationCompleted);
            }
            this.InvokeAsync("PredefinedOrderForDepartment", new object[] {
                        departmentCode}, this.PredefinedOrderForDepartmentOperationCompleted, userState);
        }
        
        private void OnPredefinedOrderForDepartmentOperationCompleted(object arg) {
            if ((this.PredefinedOrderForDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PredefinedOrderForDepartmentCompleted(this, new PredefinedOrderForDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/PredefinedItemsForDoctor", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PredefinedItemsForDoctor(string doctorID) {
            object[] results = this.Invoke("PredefinedItemsForDoctor", new object[] {
                        doctorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PredefinedItemsForDoctorAsync(string doctorID) {
            this.PredefinedItemsForDoctorAsync(doctorID, null);
        }
        
        /// <remarks/>
        public void PredefinedItemsForDoctorAsync(string doctorID, object userState) {
            if ((this.PredefinedItemsForDoctorOperationCompleted == null)) {
                this.PredefinedItemsForDoctorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPredefinedItemsForDoctorOperationCompleted);
            }
            this.InvokeAsync("PredefinedItemsForDoctor", new object[] {
                        doctorID}, this.PredefinedItemsForDoctorOperationCompleted, userState);
        }
        
        private void OnPredefinedItemsForDoctorOperationCompleted(object arg) {
            if ((this.PredefinedItemsForDoctorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PredefinedItemsForDoctorCompleted(this, new PredefinedItemsForDoctorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/PredefinedItemsForDepartment", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PredefinedItemsForDepartment(string departmentCode) {
            object[] results = this.Invoke("PredefinedItemsForDepartment", new object[] {
                        departmentCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PredefinedItemsForDepartmentAsync(string departmentCode) {
            this.PredefinedItemsForDepartmentAsync(departmentCode, null);
        }
        
        /// <remarks/>
        public void PredefinedItemsForDepartmentAsync(string departmentCode, object userState) {
            if ((this.PredefinedItemsForDepartmentOperationCompleted == null)) {
                this.PredefinedItemsForDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPredefinedItemsForDepartmentOperationCompleted);
            }
            this.InvokeAsync("PredefinedItemsForDepartment", new object[] {
                        departmentCode}, this.PredefinedItemsForDepartmentOperationCompleted, userState);
        }
        
        private void OnPredefinedItemsForDepartmentOperationCompleted(object arg) {
            if ((this.PredefinedItemsForDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PredefinedItemsForDepartmentCompleted(this, new PredefinedItemsForDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/PrivateDrugList", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PrivateDrugList(string doctorID) {
            object[] results = this.Invoke("PrivateDrugList", new object[] {
                        doctorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PrivateDrugListAsync(string doctorID) {
            this.PrivateDrugListAsync(doctorID, null);
        }
        
        /// <remarks/>
        public void PrivateDrugListAsync(string doctorID, object userState) {
            if ((this.PrivateDrugListOperationCompleted == null)) {
                this.PrivateDrugListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrivateDrugListOperationCompleted);
            }
            this.InvokeAsync("PrivateDrugList", new object[] {
                        doctorID}, this.PrivateDrugListOperationCompleted, userState);
        }
        
        private void OnPrivateDrugListOperationCompleted(object arg) {
            if ((this.PrivateDrugListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrivateDrugListCompleted(this, new PrivateDrugListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/AddPrivateDrug", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddPrivateDrug(string drugCode, string doctorID, string drugKindCode) {
            object[] results = this.Invoke("AddPrivateDrug", new object[] {
                        drugCode,
                        doctorID,
                        drugKindCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPrivateDrugAsync(string drugCode, string doctorID, string drugKindCode) {
            this.AddPrivateDrugAsync(drugCode, doctorID, drugKindCode, null);
        }
        
        /// <remarks/>
        public void AddPrivateDrugAsync(string drugCode, string doctorID, string drugKindCode, object userState) {
            if ((this.AddPrivateDrugOperationCompleted == null)) {
                this.AddPrivateDrugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPrivateDrugOperationCompleted);
            }
            this.InvokeAsync("AddPrivateDrug", new object[] {
                        drugCode,
                        doctorID,
                        drugKindCode}, this.AddPrivateDrugOperationCompleted, userState);
        }
        
        private void OnAddPrivateDrugOperationCompleted(object arg) {
            if ((this.AddPrivateDrugCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPrivateDrugCompleted(this, new AddPrivateDrugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/PredefinedFull", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PredefinedFull(string doctorID, string departmentCode) {
            object[] results = this.Invoke("PredefinedFull", new object[] {
                        doctorID,
                        departmentCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PredefinedFullAsync(string doctorID, string departmentCode) {
            this.PredefinedFullAsync(doctorID, departmentCode, null);
        }
        
        /// <remarks/>
        public void PredefinedFullAsync(string doctorID, string departmentCode, object userState) {
            if ((this.PredefinedFullOperationCompleted == null)) {
                this.PredefinedFullOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPredefinedFullOperationCompleted);
            }
            this.InvokeAsync("PredefinedFull", new object[] {
                        doctorID,
                        departmentCode}, this.PredefinedFullOperationCompleted, userState);
        }
        
        private void OnPredefinedFullOperationCompleted(object arg) {
            if ((this.PredefinedFullCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PredefinedFullCompleted(this, new PredefinedFullCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/AddPredefinedFull", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddPredefinedFull(string doctorID, string departmentCode, System.Data.DataSet predefined, ref int orderPk) {
            object[] results = this.Invoke("AddPredefinedFull", new object[] {
                        doctorID,
                        departmentCode,
                        predefined,
                        orderPk});
            orderPk = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPredefinedFullAsync(string doctorID, string departmentCode, System.Data.DataSet predefined, int orderPk) {
            this.AddPredefinedFullAsync(doctorID, departmentCode, predefined, orderPk, null);
        }
        
        /// <remarks/>
        public void AddPredefinedFullAsync(string doctorID, string departmentCode, System.Data.DataSet predefined, int orderPk, object userState) {
            if ((this.AddPredefinedFullOperationCompleted == null)) {
                this.AddPredefinedFullOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPredefinedFullOperationCompleted);
            }
            this.InvokeAsync("AddPredefinedFull", new object[] {
                        doctorID,
                        departmentCode,
                        predefined,
                        orderPk}, this.AddPredefinedFullOperationCompleted, userState);
        }
        
        private void OnAddPredefinedFullOperationCompleted(object arg) {
            if ((this.AddPredefinedFullCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPredefinedFullCompleted(this, new AddPredefinedFullCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/UpdatePredefinedFull", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePredefinedFull(string doctorID, string departmentCode, System.Data.DataSet predefined, int oldOrderPk, ref int newOrderPk) {
            object[] results = this.Invoke("UpdatePredefinedFull", new object[] {
                        doctorID,
                        departmentCode,
                        predefined,
                        oldOrderPk,
                        newOrderPk});
            newOrderPk = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePredefinedFullAsync(string doctorID, string departmentCode, System.Data.DataSet predefined, int oldOrderPk, int newOrderPk) {
            this.UpdatePredefinedFullAsync(doctorID, departmentCode, predefined, oldOrderPk, newOrderPk, null);
        }
        
        /// <remarks/>
        public void UpdatePredefinedFullAsync(string doctorID, string departmentCode, System.Data.DataSet predefined, int oldOrderPk, int newOrderPk, object userState) {
            if ((this.UpdatePredefinedFullOperationCompleted == null)) {
                this.UpdatePredefinedFullOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePredefinedFullOperationCompleted);
            }
            this.InvokeAsync("UpdatePredefinedFull", new object[] {
                        doctorID,
                        departmentCode,
                        predefined,
                        oldOrderPk,
                        newOrderPk}, this.UpdatePredefinedFullOperationCompleted, userState);
        }
        
        private void OnUpdatePredefinedFullOperationCompleted(object arg) {
            if ((this.UpdatePredefinedFullCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePredefinedFullCompleted(this, new UpdatePredefinedFullCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/DeletePredefinedFull", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeletePredefinedFull(int oldOrderPk) {
            object[] results = this.Invoke("DeletePredefinedFull", new object[] {
                        oldOrderPk});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePredefinedFullAsync(int oldOrderPk) {
            this.DeletePredefinedFullAsync(oldOrderPk, null);
        }
        
        /// <remarks/>
        public void DeletePredefinedFullAsync(int oldOrderPk, object userState) {
            if ((this.DeletePredefinedFullOperationCompleted == null)) {
                this.DeletePredefinedFullOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePredefinedFullOperationCompleted);
            }
            this.InvokeAsync("DeletePredefinedFull", new object[] {
                        oldOrderPk}, this.DeletePredefinedFullOperationCompleted, userState);
        }
        
        private void OnDeletePredefinedFullOperationCompleted(object arg) {
            if ((this.DeletePredefinedFullCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePredefinedFullCompleted(this, new DeletePredefinedFullCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/NewOutOrder", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NewOutOrder(System.Data.DataSet dsOrder, ref System.Xml.XmlNode errors) {
            object[] results = this.Invoke("NewOutOrder", new object[] {
                        dsOrder,
                        errors});
            errors = ((System.Xml.XmlNode)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NewOutOrderAsync(System.Data.DataSet dsOrder, System.Xml.XmlNode errors) {
            this.NewOutOrderAsync(dsOrder, errors, null);
        }
        
        /// <remarks/>
        public void NewOutOrderAsync(System.Data.DataSet dsOrder, System.Xml.XmlNode errors, object userState) {
            if ((this.NewOutOrderOperationCompleted == null)) {
                this.NewOutOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewOutOrderOperationCompleted);
            }
            this.InvokeAsync("NewOutOrder", new object[] {
                        dsOrder,
                        errors}, this.NewOutOrderOperationCompleted, userState);
        }
        
        private void OnNewOutOrderOperationCompleted(object arg) {
            if ((this.NewOutOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewOutOrderCompleted(this, new NewOutOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/OldOutOrder", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool OldOutOrder(System.Data.DataSet dsOrder, ref System.Xml.XmlNode errors) {
            object[] results = this.Invoke("OldOutOrder", new object[] {
                        dsOrder,
                        errors});
            errors = ((System.Xml.XmlNode)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void OldOutOrderAsync(System.Data.DataSet dsOrder, System.Xml.XmlNode errors) {
            this.OldOutOrderAsync(dsOrder, errors, null);
        }
        
        /// <remarks/>
        public void OldOutOrderAsync(System.Data.DataSet dsOrder, System.Xml.XmlNode errors, object userState) {
            if ((this.OldOutOrderOperationCompleted == null)) {
                this.OldOutOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOldOutOrderOperationCompleted);
            }
            this.InvokeAsync("OldOutOrder", new object[] {
                        dsOrder,
                        errors}, this.OldOutOrderOperationCompleted, userState);
        }
        
        private void OnOldOutOrderOperationCompleted(object arg) {
            if ((this.OldOutOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OldOutOrderCompleted(this, new OldOutOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrorders/RemoveOutOrder", RequestNamespace="http://shoujia.org/emrorders/", ResponseNamespace="http://shoujia.org/emrorders/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveOutOrder(string orderType, string registryID, decimal sequence, ref string error) {
            object[] results = this.Invoke("RemoveOutOrder", new object[] {
                        orderType,
                        registryID,
                        sequence,
                        error});
            error = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveOutOrderAsync(string orderType, string registryID, decimal sequence, string error) {
            this.RemoveOutOrderAsync(orderType, registryID, sequence, error, null);
        }
        
        /// <remarks/>
        public void RemoveOutOrderAsync(string orderType, string registryID, decimal sequence, string error, object userState) {
            if ((this.RemoveOutOrderOperationCompleted == null)) {
                this.RemoveOutOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveOutOrderOperationCompleted);
            }
            this.InvokeAsync("RemoveOutOrder", new object[] {
                        orderType,
                        registryID,
                        sequence,
                        error}, this.RemoveOutOrderOperationCompleted, userState);
        }
        
        private void OnRemoveOutOrderOperationCompleted(object arg) {
            if ((this.RemoveOutOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveOutOrderCompleted(this, new RemoveOutOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://shoujia.org/emrorders/")]
    public enum RegState {
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        Seeing,
        
        /// <remarks/>
        Reserve1,
        
        /// <remarks/>
        Transfered,
        
        /// <remarks/>
        Reaseve2,
        
        /// <remarks/>
        Reaseve3,
        
        /// <remarks/>
        Reaseve4,
        
        /// <remarks/>
        Reaseve5,
        
        /// <remarks/>
        Expired,
        
        /// <remarks/>
        Finished,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetTestResultForOneRequisitionCompletedEventHandler(object sender, GetTestResultForOneRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTestResultForOneRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTestResultForOneRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPoorPatientsCompletedEventHandler(object sender, GetPoorPatientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPoorPatientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPoorPatientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetHistoryRegistryInfoCompletedEventHandler(object sender, GetHistoryRegistryInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryRegistryInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryRegistryInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetTreatForOutPatientByCardNumCompletedEventHandler(object sender, GetTreatForOutPatientByCardNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTreatForOutPatientByCardNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTreatForOutPatientByCardNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPatientsForArchiveNumByNameCompletedEventHandler(object sender, GetPatientsForArchiveNumByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientsForArchiveNumByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientsForArchiveNumByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetRegistryIDsForOneCardNumCompletedEventHandler(object sender, GetRegistryIDsForOneCardNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegistryIDsForOneCardNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegistryIDsForOneCardNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetCardTypeByCardNumCompletedEventHandler(object sender, GetCardTypeByCardNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCardTypeByCardNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCardTypeByCardNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDepositCompletedEventHandler(object sender, GetDepositCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepositCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepositCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetRegistryInfoByCardNumForCallBackCompletedEventHandler(object sender, GetRegistryInfoByCardNumForCallBackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegistryInfoByCardNumForCallBackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegistryInfoByCardNumForCallBackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetOrderInfoByRegistryIDForQueryCompletedEventHandler(object sender, GetOrderInfoByRegistryIDForQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderInfoByRegistryIDForQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderInfoByRegistryIDForQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDepartmentsForRegistryCompletedEventHandler(object sender, GetDepartmentsForRegistryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentsForRegistryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentsForRegistryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetOutPatientTreatFeeForOneOperatorCompletedEventHandler(object sender, GetOutPatientTreatFeeForOneOperatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutPatientTreatFeeForOneOperatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutPatientTreatFeeForOneOperatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetTreatFeeForOneOutPatientCompletedEventHandler(object sender, GetTreatFeeForOneOutPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTreatFeeForOneOutPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTreatFeeForOneOutPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void Icd10CompletedEventHandler(object sender, Icd10CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Icd10CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Icd10CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetItemsForBeInpatientCompletedEventHandler(object sender, GetItemsForBeInpatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemsForBeInpatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemsForBeInpatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void RoomsCompletedEventHandler(object sender, RoomsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RoomsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RoomsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PayReturnCompletedEventHandler(object sender, PayReturnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PayReturnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PayReturnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void FinishOutPatientCompletedEventHandler(object sender, FinishOutPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinishOutPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FinishOutPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void RecallOutPatientCompletedEventHandler(object sender, RecallOutPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecallOutPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecallOutPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void OutTransferCompletedEventHandler(object sender, OutTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OutTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OutTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UnSeePatientCompletedEventHandler(object sender, UnSeePatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnSeePatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnSeePatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void BeInpatientCompletedEventHandler(object sender, BeInpatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeInpatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BeInpatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void OutpatientBeenSeeingCompletedEventHandler(object sender, OutpatientBeenSeeingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OutpatientBeenSeeingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OutpatientBeenSeeingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ImageExamTypesCompletedEventHandler(object sender, ImageExamTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImageExamTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImageExamTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ImageExamItemsCompletedEventHandler(object sender, ImageExamItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImageExamItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImageExamItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ImageExamStylesCompletedEventHandler(object sender, ImageExamStylesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImageExamStylesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImageExamStylesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ImageExamFeeIndexesCompletedEventHandler(object sender, ImageExamFeeIndexesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImageExamFeeIndexesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImageExamFeeIndexesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ImageExamInfoCompletedEventHandler(object sender, ImageExamInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImageExamInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImageExamInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PhysicalExamTypesCompletedEventHandler(object sender, PhysicalExamTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PhysicalExamTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PhysicalExamTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PhysicalExamItemsCompletedEventHandler(object sender, PhysicalExamItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PhysicalExamItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PhysicalExamItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void TestTypesCompletedEventHandler(object sender, TestTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void TestItemsCompletedEventHandler(object sender, TestItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void TestItemsDepartmentsCompletedEventHandler(object sender, TestItemsDepartmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestItemsDepartmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestItemsDepartmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void TestSubitemsCompletedEventHandler(object sender, TestSubitemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestSubitemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestSubitemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ExamTestInfoCompletedEventHandler(object sender, ExamTestInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExamTestInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExamTestInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void TreatClassCompletedEventHandler(object sender, TreatClassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TreatClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TreatClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void TreatSubitemsCompletedEventHandler(object sender, TreatSubitemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TreatSubitemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TreatSubitemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void TreatOrderCompletedEventHandler(object sender, TreatOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TreatOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TreatOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void TreatOrderDetailCompletedEventHandler(object sender, TreatOrderDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TreatOrderDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TreatOrderDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void TreatInfoCompletedEventHandler(object sender, TreatInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TreatInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TreatInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ExamTestFeeItemsCompletedEventHandler(object sender, ExamTestFeeItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExamTestFeeItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExamTestFeeItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ExamTestPriceListCompletedEventHandler(object sender, ExamTestPriceListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExamTestPriceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExamTestPriceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ExamTestChargeInfoCompletedEventHandler(object sender, ExamTestChargeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExamTestChargeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExamTestChargeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetRegistryIDByCardNumCompletedEventHandler(object sender, GetRegistryIDByCardNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegistryIDByCardNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegistryIDByCardNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetClinicalInfoCompletedEventHandler(object sender, GetClinicalInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClinicalInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClinicalInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPrescriptionForOutPatientCompletedEventHandler(object sender, GetPrescriptionForOutPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrescriptionForOutPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrescriptionForOutPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPrescriptionForOneNumberCompletedEventHandler(object sender, GetPrescriptionForOneNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrescriptionForOneNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrescriptionForOneNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetTreatForOutPatientByRegistryIDCompletedEventHandler(object sender, GetTreatForOutPatientByRegistryIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTreatForOutPatientByRegistryIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTreatForOutPatientByRegistryIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetTreatForOutPatientByBillCompletedEventHandler(object sender, GetTreatForOutPatientByBillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTreatForOutPatientByBillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTreatForOutPatientByBillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DrugListForOnePharmacyCompletedEventHandler(object sender, DrugListForOnePharmacyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DrugListForOnePharmacyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DrugListForOnePharmacyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void AnaesthesiaDrugListCompletedEventHandler(object sender, AnaesthesiaDrugListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AnaesthesiaDrugListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AnaesthesiaDrugListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DrugWayListCompletedEventHandler(object sender, DrugWayListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DrugWayListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DrugWayListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ChineseDrugWayListCompletedEventHandler(object sender, ChineseDrugWayListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChineseDrugWayListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChineseDrugWayListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ChineseDrugHowListCompletedEventHandler(object sender, ChineseDrugHowListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChineseDrugHowListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChineseDrugHowListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DrugTimeListCompletedEventHandler(object sender, DrugTimeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DrugTimeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DrugTimeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PharmacyListCompletedEventHandler(object sender, PharmacyListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PharmacyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PharmacyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DrugKindListCompletedEventHandler(object sender, DrugKindListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DrugKindListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DrugKindListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void CombineConflictCompletedEventHandler(object sender, CombineConflictCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CombineConflictCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CombineConflictCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DrugListExCompletedEventHandler(object sender, DrugListExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DrugListExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DrugListExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PredefinedOrderForDoctorCompletedEventHandler(object sender, PredefinedOrderForDoctorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PredefinedOrderForDoctorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PredefinedOrderForDoctorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PredefinedOrderForDepartmentCompletedEventHandler(object sender, PredefinedOrderForDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PredefinedOrderForDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PredefinedOrderForDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PredefinedItemsForDoctorCompletedEventHandler(object sender, PredefinedItemsForDoctorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PredefinedItemsForDoctorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PredefinedItemsForDoctorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PredefinedItemsForDepartmentCompletedEventHandler(object sender, PredefinedItemsForDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PredefinedItemsForDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PredefinedItemsForDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PrivateDrugListCompletedEventHandler(object sender, PrivateDrugListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrivateDrugListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrivateDrugListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void AddPrivateDrugCompletedEventHandler(object sender, AddPrivateDrugCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPrivateDrugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPrivateDrugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PredefinedFullCompletedEventHandler(object sender, PredefinedFullCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PredefinedFullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PredefinedFullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void AddPredefinedFullCompletedEventHandler(object sender, AddPredefinedFullCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPredefinedFullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPredefinedFullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int orderPk {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdatePredefinedFullCompletedEventHandler(object sender, UpdatePredefinedFullCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePredefinedFullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePredefinedFullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int newOrderPk {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DeletePredefinedFullCompletedEventHandler(object sender, DeletePredefinedFullCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePredefinedFullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePredefinedFullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void NewOutOrderCompletedEventHandler(object sender, NewOutOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewOutOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewOutOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode errors {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void OldOutOrderCompletedEventHandler(object sender, OldOutOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OldOutOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OldOutOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode errors {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void RemoveOutOrderCompletedEventHandler(object sender, RemoveOutOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveOutOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveOutOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string error {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591