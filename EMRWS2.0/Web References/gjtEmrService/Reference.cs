//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.0
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.0 版自动生成。
// 
#pragma warning disable 1591

namespace EMR.gjtEmrService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="emrServiceXmlSoap", Namespace="http://shoujia.org/emrservices/")]
    public partial class emrServiceXml : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetBorrowInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRolesPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrDocumentStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArchiveStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArchiveStatusByZyhOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBaBsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSignWithArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewValuateRulesExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransferInfoExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransferInfoExExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransferInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransferInfoDgOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutTransferInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutTransferInfoDgOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTransferInfoDgOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTransferInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelTransferInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewOperationLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemindToReviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback InfoEmrNoteExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfoBackOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfoBackByDoctorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfoBackByDoctorRegOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInfoBackByDoctorRegOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownLoadWordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatelcljOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetlcCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReDownLoadWordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLcljHzmxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransferInfoExExExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInvalidInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetzuofeiOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetunzuofeiOperationCompleted;
        
        private System.Threading.SendOrPostCallback lw_invalidInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback lw_GetTransferInfoExExOperationCompleted;
        
        private System.Threading.SendOrPostCallback obtainjkdmOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClinicPathmonitorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValuateDetailExOperationCompleted;
        
        private System.Threading.SendOrPostCallback IndexSearcherOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreationTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Page_LoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataminingSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataminingSearchExOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSeachOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSeachExOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelSeachOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeachListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeachListExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNoteIDsWithValuateRulesEndOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValuateDetailEndExExOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValuateOpcodeEndOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewValuateDetailEndEXOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSettlementdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutRangexOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletRangexOperationCompleted;
        
        private System.Threading.SendOrPostCallback ArchiveBatchExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBorrowInfoBackEmrOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBorrowInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback BackEmrOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIllNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateIllNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateIllNameZlgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNoteTemplateExOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNoteTemplateExZlgOperationCompleted;
        
        private System.Threading.SendOrPostCallback InSertNoteTemplateExOperationCompleted;
        
        private System.Threading.SendOrPostCallback InSertNoteTemplateExZlgOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertIllOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHospitalTemplatePkzOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHospitalTemplatePkzZlgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartTemplatePkzOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartTemplatePkzZlgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonTemplatePkzOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonTemplatePkzZlgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPicturesNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePictureNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrBlockKeysNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPageInfOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePageInfOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDoctorListWithPTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDoctorListWithPTemplateZlgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateDetailZlgOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTemplatePTagOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTemplatePTagZlgOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetfanxiuOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImpPatternDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImpPatternDocZlgOperationCompleted;
        
        private System.Threading.SendOrPostCallback SehPatternDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExpPatternDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelPatternDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatternDocOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageSignOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIsKeyUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUpload_TimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback testOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsRemberPoint1OperationCompleted;
        
        private System.Threading.SendOrPostCallback IsRemberPoint2OperationCompleted;
        
        private System.Threading.SendOrPostCallback IsRemberPointOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutRangex1OperationCompleted;
        
        private System.Threading.SendOrPostCallback PutRangex2OperationCompleted;
        
        private System.Threading.SendOrPostCallback PutRangeExOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletRangex1OperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletRangex2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNotetempOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatternTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatternItemsByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatternTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePatternTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllNoteNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetGradeOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsValuateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNotesWithFilingSetupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveNoteWithFilingSetupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilingSetupfromDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewFilingSetupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNoteStatusWithArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNoteIDWithArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegistryIDsWithRedLightOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewPrintRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrintRequisitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPrintedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrintedStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountNotePrintingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNotePrintingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlockEmrdocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanEditLockedEmrdocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockedEmrdocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrLockInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UncommitEmrNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUncommitInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewValuateRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewValuateRulesEndOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveNoteWithValuateRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveNoteWithValuateRulesEndOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValuateRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValuateRulesEndOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNotesWithValuateRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNotesWithValuateRulesEndOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNoteIDsWithValuateRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewValuateDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewValuateDetailEndOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValuateDetailDTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValuateDetailDTExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValuateDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValuateDetailEndOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewValuateScoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewValuateScoreEndOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDoctorScoreForDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentScoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientScoreForDoctorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperatorsRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOperatorRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRolesForOneOperatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRolesForOneOperatorHISOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckSysClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegistryIDsWithKeywordOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoneTimeForConsultOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnableCommitLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEnabledStatusToOneOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsEnabledCommitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEnabledStatusForOneDoctorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEnabledStatusForOneDoctorDTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSignMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectOperatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetXmlDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnableChangeStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHospitalTemplatePksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHospitalTemplatePksZlgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonTemplatePksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonTemplatePksZlgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonTemplatePksExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonTemplatePksExZlgOperationCompleted;
        
        private System.Threading.SendOrPostCallback DepartTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DepartTemplateZlgOperationCompleted;
        
        private System.Threading.SendOrPostCallback PersonNoteTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback PersonNoteTemplateZlgOperationCompleted;
        
        private System.Threading.SendOrPostCallback TemplateExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback TemplateExistZlgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrPatternOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEmrPatternOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEmrNoteIntoPatternsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveEmrNoteFromPatternsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReplaceEmrNoteInPatternsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReplaceEmrNoteInPatternForOneDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEndPrintGroupInPatternsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEndPrintGroupInPatternOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEmrBlocksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEmrBlockOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmrBlockOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmrBlockOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrBlocksForOneDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrBlockKeysOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrBlockOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportEmrBlocksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPicturesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConnectSqlOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNotePhrasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNotePhrasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportNotePhrasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ArchiveByMeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ArchiveBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback Archive_ArchiveNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastWriteTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavenewOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSecuriyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSecurityConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReplacePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrEncoderOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmrDecoderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GrantReaderForRegistryOperationCompleted;
        
        private System.Threading.SendOrPostCallback HavePrivilegeForRegistryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrustOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsTrusterOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddComponetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComponetOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTrafficLightToRedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTrafficLightToGreenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllEmrNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SysTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ErrorLogExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastErrorExOperationCompleted;
        
        private System.Threading.SendOrPostCallback ErrorLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertEmrDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertEmrNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNoteDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrDocumentWithoutNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutEmrDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmrDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmrDocumentWithoutNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmrNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmrNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SyncEmrDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CjjSyncEmrDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOneEmrNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPrintedForEmrdocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrintedStatusForEmrdocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegistryIDsXqueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastWriteTimeOfEmrDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmrDocumentWithoutNote2OperationCompleted;
        
        private System.Threading.SendOrPostCallback NewEmrNoteExOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewEmrNoteExZOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertOrReplaceAttributeOfEmrdocument_EmrOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmrNoteExOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmrNoteExZOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmrNoteExOperationCompleted;
        
        private System.Threading.SendOrPostCallback UncommitEmrNoteExOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewEmrNoteExExaOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyCertAndUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelTemplateDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewEmrNoteExExaZOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewEmrNoteExExOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmrNoteExExOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmrNoteExExaOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmrNoteExExaZOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmrNoteExExOperationCompleted;
        
        private System.Threading.SendOrPostCallback UncommitEmrNoteExExOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateConfigureOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutRelationshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLowersOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRelationshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckPatientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewNoteTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewNoteTemplateZlgOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNoteTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNoteTemplateZlgOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveNoteTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveNoteTemplateZlgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNoteTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNoteTemplateZlgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartTemplatePksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartTemplatePksZlgOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public emrServiceXml() {
            this.Url = global::EMR.Properties.Settings.Default.EMR_gjtEmrService_emrServiceXml;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetBorrowInfoCompletedEventHandler GetBorrowInfoCompleted;
        
        /// <remarks/>
        public event GetRolesPermissionCompletedEventHandler GetRolesPermissionCompleted;
        
        /// <remarks/>
        public event GetEmrDocumentStatusCompletedEventHandler GetEmrDocumentStatusCompleted;
        
        /// <remarks/>
        public event GetArchiveStatusCompletedEventHandler GetArchiveStatusCompleted;
        
        /// <remarks/>
        public event GetArchiveStatusByZyhCompletedEventHandler GetArchiveStatusByZyhCompleted;
        
        /// <remarks/>
        public event GetBaBsCompletedEventHandler GetBaBsCompleted;
        
        /// <remarks/>
        public event GetSignWithArchiveCompletedEventHandler GetSignWithArchiveCompleted;
        
        /// <remarks/>
        public event NewValuateRulesExCompletedEventHandler NewValuateRulesExCompleted;
        
        /// <remarks/>
        public event GetTransferInfoExCompletedEventHandler GetTransferInfoExCompleted;
        
        /// <remarks/>
        public event GetTransferInfoExExCompletedEventHandler GetTransferInfoExExCompleted;
        
        /// <remarks/>
        public event GetTransferInfoCompletedEventHandler GetTransferInfoCompleted;
        
        /// <remarks/>
        public event GetTransferInfoDgCompletedEventHandler GetTransferInfoDgCompleted;
        
        /// <remarks/>
        public event PutTransferInfoCompletedEventHandler PutTransferInfoCompleted;
        
        /// <remarks/>
        public event PutTransferInfoDgCompletedEventHandler PutTransferInfoDgCompleted;
        
        /// <remarks/>
        public event UpdateTransferInfoDgCompletedEventHandler UpdateTransferInfoDgCompleted;
        
        /// <remarks/>
        public event UpdateTransferInfoCompletedEventHandler UpdateTransferInfoCompleted;
        
        /// <remarks/>
        public event DelTransferInfoCompletedEventHandler DelTransferInfoCompleted;
        
        /// <remarks/>
        public event NewOperationLogCompletedEventHandler NewOperationLogCompleted;
        
        /// <remarks/>
        public event RemindToReviewCompletedEventHandler RemindToReviewCompleted;
        
        /// <remarks/>
        public event InfoEmrNoteExCompletedEventHandler InfoEmrNoteExCompleted;
        
        /// <remarks/>
        public event GetInfoBackCompletedEventHandler GetInfoBackCompleted;
        
        /// <remarks/>
        public event GetInfoBackByDoctorCompletedEventHandler GetInfoBackByDoctorCompleted;
        
        /// <remarks/>
        public event GetInfoBackByDoctorRegCompletedEventHandler GetInfoBackByDoctorRegCompleted;
        
        /// <remarks/>
        public event UpdateInfoBackByDoctorRegCompletedEventHandler UpdateInfoBackByDoctorRegCompleted;
        
        /// <remarks/>
        public event DownLoadWordCompletedEventHandler DownLoadWordCompleted;
        
        /// <remarks/>
        public event UpdatelcljCompletedEventHandler UpdatelcljCompleted;
        
        /// <remarks/>
        public event GetlcCountCompletedEventHandler GetlcCountCompleted;
        
        /// <remarks/>
        public event ReDownLoadWordCompletedEventHandler ReDownLoadWordCompleted;
        
        /// <remarks/>
        public event CheckUpdateCompletedEventHandler CheckUpdateCompleted;
        
        /// <remarks/>
        public event UpdateLcljHzmxCompletedEventHandler UpdateLcljHzmxCompleted;
        
        /// <remarks/>
        public event GetTransferInfoExExExCompletedEventHandler GetTransferInfoExExExCompleted;
        
        /// <remarks/>
        public event GetInvalidInfoCompletedEventHandler GetInvalidInfoCompleted;
        
        /// <remarks/>
        public event SetzuofeiCompletedEventHandler SetzuofeiCompleted;
        
        /// <remarks/>
        public event SetunzuofeiCompletedEventHandler SetunzuofeiCompleted;
        
        /// <remarks/>
        public event lw_invalidInfoCompletedEventHandler lw_invalidInfoCompleted;
        
        /// <remarks/>
        public event lw_GetTransferInfoExExCompletedEventHandler lw_GetTransferInfoExExCompleted;
        
        /// <remarks/>
        public event obtainjkdmCompletedEventHandler obtainjkdmCompleted;
        
        /// <remarks/>
        public event ClinicPathmonitorCompletedEventHandler ClinicPathmonitorCompleted;
        
        /// <remarks/>
        public event GetValuateDetailExCompletedEventHandler GetValuateDetailExCompleted;
        
        /// <remarks/>
        public event IndexSearcherCompletedEventHandler IndexSearcherCompleted;
        
        /// <remarks/>
        public event GetCreationTimeCompletedEventHandler GetCreationTimeCompleted;
        
        /// <remarks/>
        public event Page_LoadCompletedEventHandler Page_LoadCompleted;
        
        /// <remarks/>
        public event GetDataminingSearchCompletedEventHandler GetDataminingSearchCompleted;
        
        /// <remarks/>
        public event GetDataminingSearchExCompletedEventHandler GetDataminingSearchExCompleted;
        
        /// <remarks/>
        public event SaveSeachCompletedEventHandler SaveSeachCompleted;
        
        /// <remarks/>
        public event SaveSeachExCompletedEventHandler SaveSeachExCompleted;
        
        /// <remarks/>
        public event DelSeachCompletedEventHandler DelSeachCompleted;
        
        /// <remarks/>
        public event GetSeachListCompletedEventHandler GetSeachListCompleted;
        
        /// <remarks/>
        public event GetSeachListExCompletedEventHandler GetSeachListExCompleted;
        
        /// <remarks/>
        public event GetNoteIDsWithValuateRulesEndCompletedEventHandler GetNoteIDsWithValuateRulesEndCompleted;
        
        /// <remarks/>
        public event GetValuateDetailEndExExCompletedEventHandler GetValuateDetailEndExExCompleted;
        
        /// <remarks/>
        public event ValuateOpcodeEndCompletedEventHandler ValuateOpcodeEndCompleted;
        
        /// <remarks/>
        public event NewValuateDetailEndEXCompletedEventHandler NewValuateDetailEndEXCompleted;
        
        /// <remarks/>
        public event GetSettlementdateCompletedEventHandler GetSettlementdateCompleted;
        
        /// <remarks/>
        public event PutRangexCompletedEventHandler PutRangexCompleted;
        
        /// <remarks/>
        public event DeletRangexCompletedEventHandler DeletRangexCompleted;
        
        /// <remarks/>
        public event ArchiveBatchExCompletedEventHandler ArchiveBatchExCompleted;
        
        /// <remarks/>
        public event GetBorrowInfoBackEmrCompletedEventHandler GetBorrowInfoBackEmrCompleted;
        
        /// <remarks/>
        public event InsertBorrowInfoCompletedEventHandler InsertBorrowInfoCompleted;
        
        /// <remarks/>
        public event BackEmrCompletedEventHandler BackEmrCompleted;
        
        /// <remarks/>
        public event GetAllBasicCompletedEventHandler GetAllBasicCompleted;
        
        /// <remarks/>
        public event GetIllNameCompletedEventHandler GetIllNameCompleted;
        
        /// <remarks/>
        public event GetTemplateIllNameCompletedEventHandler GetTemplateIllNameCompleted;
        
        /// <remarks/>
        public event GetTemplateIllNameZlgCompletedEventHandler GetTemplateIllNameZlgCompleted;
        
        /// <remarks/>
        public event GetTemplateTypeCompletedEventHandler GetTemplateTypeCompleted;
        
        /// <remarks/>
        public event UpdateNoteTemplateExCompletedEventHandler UpdateNoteTemplateExCompleted;
        
        /// <remarks/>
        public event UpdateNoteTemplateExZlgCompletedEventHandler UpdateNoteTemplateExZlgCompleted;
        
        /// <remarks/>
        public event InSertNoteTemplateExCompletedEventHandler InSertNoteTemplateExCompleted;
        
        /// <remarks/>
        public event InSertNoteTemplateExZlgCompletedEventHandler InSertNoteTemplateExZlgCompleted;
        
        /// <remarks/>
        public event InsertIllCompletedEventHandler InsertIllCompleted;
        
        /// <remarks/>
        public event GetHospitalTemplatePkzCompletedEventHandler GetHospitalTemplatePkzCompleted;
        
        /// <remarks/>
        public event GetHospitalTemplatePkzZlgCompletedEventHandler GetHospitalTemplatePkzZlgCompleted;
        
        /// <remarks/>
        public event GetDepartTemplatePkzCompletedEventHandler GetDepartTemplatePkzCompleted;
        
        /// <remarks/>
        public event GetDepartTemplatePkzZlgCompletedEventHandler GetDepartTemplatePkzZlgCompleted;
        
        /// <remarks/>
        public event GetPersonTemplatePkzCompletedEventHandler GetPersonTemplatePkzCompleted;
        
        /// <remarks/>
        public event GetPersonTemplatePkzZlgCompletedEventHandler GetPersonTemplatePkzZlgCompleted;
        
        /// <remarks/>
        public event GetPicturesNewCompletedEventHandler GetPicturesNewCompleted;
        
        /// <remarks/>
        public event DeletePictureNewCompletedEventHandler DeletePictureNewCompleted;
        
        /// <remarks/>
        public event GetEmrBlockKeysNewCompletedEventHandler GetEmrBlockKeysNewCompleted;
        
        /// <remarks/>
        public event InsertLinkCompletedEventHandler InsertLinkCompleted;
        
        /// <remarks/>
        public event GetLinkCompletedEventHandler GetLinkCompleted;
        
        /// <remarks/>
        public event GetPageInfCompletedEventHandler GetPageInfCompleted;
        
        /// <remarks/>
        public event UpdatePageInfCompletedEventHandler UpdatePageInfCompleted;
        
        /// <remarks/>
        public event GetDoctorListWithPTemplateCompletedEventHandler GetDoctorListWithPTemplateCompleted;
        
        /// <remarks/>
        public event GetDoctorListWithPTemplateZlgCompletedEventHandler GetDoctorListWithPTemplateZlgCompleted;
        
        /// <remarks/>
        public event GetTemplateDetailCompletedEventHandler GetTemplateDetailCompleted;
        
        /// <remarks/>
        public event GetTemplateDetailZlgCompletedEventHandler GetTemplateDetailZlgCompleted;
        
        /// <remarks/>
        public event UpdateTemplatePTagCompletedEventHandler UpdateTemplatePTagCompleted;
        
        /// <remarks/>
        public event UpdateTemplatePTagZlgCompletedEventHandler UpdateTemplatePTagZlgCompleted;
        
        /// <remarks/>
        public event SetfanxiuCompletedEventHandler SetfanxiuCompleted;
        
        /// <remarks/>
        public event ImpPatternDocCompletedEventHandler ImpPatternDocCompleted;
        
        /// <remarks/>
        public event ImpPatternDocZlgCompletedEventHandler ImpPatternDocZlgCompleted;
        
        /// <remarks/>
        public event SehPatternDocCompletedEventHandler SehPatternDocCompleted;
        
        /// <remarks/>
        public event ExpPatternDocCompletedEventHandler ExpPatternDocCompleted;
        
        /// <remarks/>
        public event DelPatternDocCompletedEventHandler DelPatternDocCompleted;
        
        /// <remarks/>
        public event GetPatternDocCompletedEventHandler GetPatternDocCompleted;
        
        /// <remarks/>
        public event GetImageSignCompletedEventHandler GetImageSignCompleted;
        
        /// <remarks/>
        public event GetIsKeyUserCompletedEventHandler GetIsKeyUserCompleted;
        
        /// <remarks/>
        public event UpdateUpload_TimeCompletedEventHandler UpdateUpload_TimeCompleted;
        
        /// <remarks/>
        public event testCompletedEventHandler testCompleted;
        
        /// <remarks/>
        public event IsRemberPoint1CompletedEventHandler IsRemberPoint1Completed;
        
        /// <remarks/>
        public event IsRemberPoint2CompletedEventHandler IsRemberPoint2Completed;
        
        /// <remarks/>
        public event IsRemberPointCompletedEventHandler IsRemberPointCompleted;
        
        /// <remarks/>
        public event PutRangeCompletedEventHandler PutRangeCompleted;
        
        /// <remarks/>
        public event PutRangex1CompletedEventHandler PutRangex1Completed;
        
        /// <remarks/>
        public event PutRangex2CompletedEventHandler PutRangex2Completed;
        
        /// <remarks/>
        public event PutRangeExCompletedEventHandler PutRangeExCompleted;
        
        /// <remarks/>
        public event DeletRangeCompletedEventHandler DeletRangeCompleted;
        
        /// <remarks/>
        public event DeletRangex1CompletedEventHandler DeletRangex1Completed;
        
        /// <remarks/>
        public event DeletRangex2CompletedEventHandler DeletRangex2Completed;
        
        /// <remarks/>
        public event GetNotetempCompletedEventHandler GetNotetempCompleted;
        
        /// <remarks/>
        public event GetPatternTypeCompletedEventHandler GetPatternTypeCompleted;
        
        /// <remarks/>
        public event GetPatternItemsByTypeCompletedEventHandler GetPatternItemsByTypeCompleted;
        
        /// <remarks/>
        public event GetPatternTypesCompletedEventHandler GetPatternTypesCompleted;
        
        /// <remarks/>
        public event UpdatePatternTypeCompletedEventHandler UpdatePatternTypeCompleted;
        
        /// <remarks/>
        public event GetAllNoteNamesCompletedEventHandler GetAllNoteNamesCompleted;
        
        /// <remarks/>
        public event SetGradeCompletedEventHandler SetGradeCompleted;
        
        /// <remarks/>
        public event IsValuateCompletedEventHandler IsValuateCompleted;
        
        /// <remarks/>
        public event GetNotesWithFilingSetupCompletedEventHandler GetNotesWithFilingSetupCompleted;
        
        /// <remarks/>
        public event RemoveNoteWithFilingSetupCompletedEventHandler RemoveNoteWithFilingSetupCompleted;
        
        /// <remarks/>
        public event GetFilingSetupfromDepartmentCompletedEventHandler GetFilingSetupfromDepartmentCompleted;
        
        /// <remarks/>
        public event NewFilingSetupCompletedEventHandler NewFilingSetupCompleted;
        
        /// <remarks/>
        public event GetNoteStatusWithArchiveCompletedEventHandler GetNoteStatusWithArchiveCompleted;
        
        /// <remarks/>
        public event GetNoteIDWithArchiveCompletedEventHandler GetNoteIDWithArchiveCompleted;
        
        /// <remarks/>
        public event GetRegistryIDsWithRedLightCompletedEventHandler GetRegistryIDsWithRedLightCompleted;
        
        /// <remarks/>
        public event NewPrintRequisitionCompletedEventHandler NewPrintRequisitionCompleted;
        
        /// <remarks/>
        public event GetPrintRequisitionsCompletedEventHandler GetPrintRequisitionsCompleted;
        
        /// <remarks/>
        public event SetPrintedCompletedEventHandler SetPrintedCompleted;
        
        /// <remarks/>
        public event GetPrintedStateCompletedEventHandler GetPrintedStateCompleted;
        
        /// <remarks/>
        public event CountNotePrintingCompletedEventHandler CountNotePrintingCompleted;
        
        /// <remarks/>
        public event GetNotePrintingCompletedEventHandler GetNotePrintingCompleted;
        
        /// <remarks/>
        public event UnlockEmrdocumentCompletedEventHandler UnlockEmrdocumentCompleted;
        
        /// <remarks/>
        public event CanEditLockedEmrdocumentCompletedEventHandler CanEditLockedEmrdocumentCompleted;
        
        /// <remarks/>
        public event LockedEmrdocumentCompletedEventHandler LockedEmrdocumentCompleted;
        
        /// <remarks/>
        public event GetEmrLockInfoCompletedEventHandler GetEmrLockInfoCompleted;
        
        /// <remarks/>
        public event UncommitEmrNoteCompletedEventHandler UncommitEmrNoteCompleted;
        
        /// <remarks/>
        public event GetUncommitInfoCompletedEventHandler GetUncommitInfoCompleted;
        
        /// <remarks/>
        public event NewValuateRulesCompletedEventHandler NewValuateRulesCompleted;
        
        /// <remarks/>
        public event NewValuateRulesEndCompletedEventHandler NewValuateRulesEndCompleted;
        
        /// <remarks/>
        public event RemoveNoteWithValuateRulesCompletedEventHandler RemoveNoteWithValuateRulesCompleted;
        
        /// <remarks/>
        public event RemoveNoteWithValuateRulesEndCompletedEventHandler RemoveNoteWithValuateRulesEndCompleted;
        
        /// <remarks/>
        public event GetValuateRulesCompletedEventHandler GetValuateRulesCompleted;
        
        /// <remarks/>
        public event GetValuateRulesEndCompletedEventHandler GetValuateRulesEndCompleted;
        
        /// <remarks/>
        public event GetNotesWithValuateRulesCompletedEventHandler GetNotesWithValuateRulesCompleted;
        
        /// <remarks/>
        public event GetNotesWithValuateRulesEndCompletedEventHandler GetNotesWithValuateRulesEndCompleted;
        
        /// <remarks/>
        public event GetNoteIDsWithValuateRulesCompletedEventHandler GetNoteIDsWithValuateRulesCompleted;
        
        /// <remarks/>
        public event NewValuateDetailCompletedEventHandler NewValuateDetailCompleted;
        
        /// <remarks/>
        public event NewValuateDetailEndCompletedEventHandler NewValuateDetailEndCompleted;
        
        /// <remarks/>
        public event GetValuateDetailDTCompletedEventHandler GetValuateDetailDTCompleted;
        
        /// <remarks/>
        public event GetValuateDetailDTExCompletedEventHandler GetValuateDetailDTExCompleted;
        
        /// <remarks/>
        public event GetValuateDetailCompletedEventHandler GetValuateDetailCompleted;
        
        /// <remarks/>
        public event GetValuateDetailEndCompletedEventHandler GetValuateDetailEndCompleted;
        
        /// <remarks/>
        public event NewValuateScoreCompletedEventHandler NewValuateScoreCompleted;
        
        /// <remarks/>
        public event NewValuateScoreEndCompletedEventHandler NewValuateScoreEndCompleted;
        
        /// <remarks/>
        public event GetDoctorScoreForDepartmentCompletedEventHandler GetDoctorScoreForDepartmentCompleted;
        
        /// <remarks/>
        public event GetDepartmentScoreCompletedEventHandler GetDepartmentScoreCompleted;
        
        /// <remarks/>
        public event GetPatientScoreForDoctorCompletedEventHandler GetPatientScoreForDoctorCompleted;
        
        /// <remarks/>
        public event GetOperatorsRolesCompletedEventHandler GetOperatorsRolesCompleted;
        
        /// <remarks/>
        public event SetOperatorRolesCompletedEventHandler SetOperatorRolesCompleted;
        
        /// <remarks/>
        public event GetRolesForOneOperatorCompletedEventHandler GetRolesForOneOperatorCompleted;
        
        /// <remarks/>
        public event GetRolesForOneOperatorHISCompletedEventHandler GetRolesForOneOperatorHISCompleted;
        
        /// <remarks/>
        public event CheckSysClientCompletedEventHandler CheckSysClientCompleted;
        
        /// <remarks/>
        public event ResetDatabaseCompletedEventHandler ResetDatabaseCompleted;
        
        /// <remarks/>
        public event GetRegistryIDsWithKeywordCompletedEventHandler GetRegistryIDsWithKeywordCompleted;
        
        /// <remarks/>
        public event DoneTimeForConsultCompletedEventHandler DoneTimeForConsultCompleted;
        
        /// <remarks/>
        public event EnableCommitLogCompletedEventHandler EnableCommitLogCompleted;
        
        /// <remarks/>
        public event SetEnabledStatusToOneCompletedEventHandler SetEnabledStatusToOneCompleted;
        
        /// <remarks/>
        public event IsEnabledCommitCompletedEventHandler IsEnabledCommitCompleted;
        
        /// <remarks/>
        public event GetEnabledStatusForOneDoctorCompletedEventHandler GetEnabledStatusForOneDoctorCompleted;
        
        /// <remarks/>
        public event GetEnabledStatusForOneDoctorDTCompletedEventHandler GetEnabledStatusForOneDoctorDTCompleted;
        
        /// <remarks/>
        public event GetSignMessageCompletedEventHandler GetSignMessageCompleted;
        
        /// <remarks/>
        public event UpdateOperatorCompletedEventHandler UpdateOperatorCompleted;
        
        /// <remarks/>
        public event SelectOperatorCompletedEventHandler SelectOperatorCompleted;
        
        /// <remarks/>
        public event GetImageUrlCompletedEventHandler GetImageUrlCompleted;
        
        /// <remarks/>
        public event GetImageCompletedEventHandler GetImageCompleted;
        
        /// <remarks/>
        public event GetXmlDocumentCompletedEventHandler GetXmlDocumentCompleted;
        
        /// <remarks/>
        public event EnableChangeStatusCompletedEventHandler EnableChangeStatusCompleted;
        
        /// <remarks/>
        public event GetChangesCompletedEventHandler GetChangesCompleted;
        
        /// <remarks/>
        public event SaveCompletedEventHandler SaveCompleted;
        
        /// <remarks/>
        public event GetHospitalTemplatePksCompletedEventHandler GetHospitalTemplatePksCompleted;
        
        /// <remarks/>
        public event GetHospitalTemplatePksZlgCompletedEventHandler GetHospitalTemplatePksZlgCompleted;
        
        /// <remarks/>
        public event GetPersonTemplatePksCompletedEventHandler GetPersonTemplatePksCompleted;
        
        /// <remarks/>
        public event GetPersonTemplatePksZlgCompletedEventHandler GetPersonTemplatePksZlgCompleted;
        
        /// <remarks/>
        public event GetPersonTemplatePksExCompletedEventHandler GetPersonTemplatePksExCompleted;
        
        /// <remarks/>
        public event GetPersonTemplatePksExZlgCompletedEventHandler GetPersonTemplatePksExZlgCompleted;
        
        /// <remarks/>
        public event DepartTemplateCompletedEventHandler DepartTemplateCompleted;
        
        /// <remarks/>
        public event DepartTemplateZlgCompletedEventHandler DepartTemplateZlgCompleted;
        
        /// <remarks/>
        public event PersonNoteTemplateCompletedEventHandler PersonNoteTemplateCompleted;
        
        /// <remarks/>
        public event PersonNoteTemplateZlgCompletedEventHandler PersonNoteTemplateZlgCompleted;
        
        /// <remarks/>
        public event TemplateExistCompletedEventHandler TemplateExistCompleted;
        
        /// <remarks/>
        public event TemplateExistZlgCompletedEventHandler TemplateExistZlgCompleted;
        
        /// <remarks/>
        public event GetEmrPatternCompletedEventHandler GetEmrPatternCompleted;
        
        /// <remarks/>
        public event AddEmrPatternCompletedEventHandler AddEmrPatternCompleted;
        
        /// <remarks/>
        public event AddEmrNoteIntoPatternsCompletedEventHandler AddEmrNoteIntoPatternsCompleted;
        
        /// <remarks/>
        public event RemoveEmrNoteFromPatternsCompletedEventHandler RemoveEmrNoteFromPatternsCompleted;
        
        /// <remarks/>
        public event ReplaceEmrNoteInPatternsCompletedEventHandler ReplaceEmrNoteInPatternsCompleted;
        
        /// <remarks/>
        public event ReplaceEmrNoteInPatternForOneDepartmentCompletedEventHandler ReplaceEmrNoteInPatternForOneDepartmentCompleted;
        
        /// <remarks/>
        public event AddEndPrintGroupInPatternsCompletedEventHandler AddEndPrintGroupInPatternsCompleted;
        
        /// <remarks/>
        public event AddEndPrintGroupInPatternCompletedEventHandler AddEndPrintGroupInPatternCompleted;
        
        /// <remarks/>
        public event AddEmrBlocksCompletedEventHandler AddEmrBlocksCompleted;
        
        /// <remarks/>
        public event AddEmrBlockCompletedEventHandler AddEmrBlockCompleted;
        
        /// <remarks/>
        public event UpdateEmrBlockCompletedEventHandler UpdateEmrBlockCompleted;
        
        /// <remarks/>
        public event DeleteEmrBlockCompletedEventHandler DeleteEmrBlockCompleted;
        
        /// <remarks/>
        public event GetEmrBlocksForOneDepartmentCompletedEventHandler GetEmrBlocksForOneDepartmentCompleted;
        
        /// <remarks/>
        public event GetEmrBlockKeysCompletedEventHandler GetEmrBlockKeysCompleted;
        
        /// <remarks/>
        public event GetEmrBlockCompletedEventHandler GetEmrBlockCompleted;
        
        /// <remarks/>
        public event ExportEmrBlocksCompletedEventHandler ExportEmrBlocksCompleted;
        
        /// <remarks/>
        public event AddPictureCompletedEventHandler AddPictureCompleted;
        
        /// <remarks/>
        public event GetPicturesCompletedEventHandler GetPicturesCompleted;
        
        /// <remarks/>
        public event DeletePictureCompletedEventHandler DeletePictureCompleted;
        
        /// <remarks/>
        public event ConnectSqlCompletedEventHandler ConnectSqlCompleted;
        
        /// <remarks/>
        public event AddNotePhrasesCompletedEventHandler AddNotePhrasesCompleted;
        
        /// <remarks/>
        public event GetNotePhrasesCompletedEventHandler GetNotePhrasesCompleted;
        
        /// <remarks/>
        public event ExportNotePhrasesCompletedEventHandler ExportNotePhrasesCompleted;
        
        /// <remarks/>
        public event ArchiveCompletedEventHandler ArchiveCompleted;
        
        /// <remarks/>
        public event ArchiveByMeCompletedEventHandler ArchiveByMeCompleted;
        
        /// <remarks/>
        public event ArchiveBatchCompletedEventHandler ArchiveBatchCompleted;
        
        /// <remarks/>
        public event Archive_ArchiveNumCompletedEventHandler Archive_ArchiveNumCompleted;
        
        /// <remarks/>
        public event GetLastWriteTimeCompletedEventHandler GetLastWriteTimeCompleted;
        
        /// <remarks/>
        public event SavenewCompletedEventHandler SavenewCompleted;
        
        /// <remarks/>
        public event UpdateSecuriyCompletedEventHandler UpdateSecuriyCompleted;
        
        /// <remarks/>
        public event GetSecurityConfigCompletedEventHandler GetSecurityConfigCompleted;
        
        /// <remarks/>
        public event GetPasswordCompletedEventHandler GetPasswordCompleted;
        
        /// <remarks/>
        public event ReplacePasswordCompletedEventHandler ReplacePasswordCompleted;
        
        /// <remarks/>
        public event EmrEncoderCompletedEventHandler EmrEncoderCompleted;
        
        /// <remarks/>
        public event EmrDecoderCompletedEventHandler EmrDecoderCompleted;
        
        /// <remarks/>
        public event GrantReaderForRegistryCompletedEventHandler GrantReaderForRegistryCompleted;
        
        /// <remarks/>
        public event HavePrivilegeForRegistryCompletedEventHandler HavePrivilegeForRegistryCompleted;
        
        /// <remarks/>
        public event AddTrustCompletedEventHandler AddTrustCompleted;
        
        /// <remarks/>
        public event IsTrusterCompletedEventHandler IsTrusterCompleted;
        
        /// <remarks/>
        public event AddComponetCompletedEventHandler AddComponetCompleted;
        
        /// <remarks/>
        public event GetComponetCompletedEventHandler GetComponetCompleted;
        
        /// <remarks/>
        public event SetTrafficLightToRedCompletedEventHandler SetTrafficLightToRedCompleted;
        
        /// <remarks/>
        public event SetTrafficLightToGreenCompletedEventHandler SetTrafficLightToGreenCompleted;
        
        /// <remarks/>
        public event GetAllEmrNotesCompletedEventHandler GetAllEmrNotesCompleted;
        
        /// <remarks/>
        public event SysTimeCompletedEventHandler SysTimeCompleted;
        
        /// <remarks/>
        public event ErrorLogExCompletedEventHandler ErrorLogExCompleted;
        
        /// <remarks/>
        public event GetLastErrorExCompletedEventHandler GetLastErrorExCompleted;
        
        /// <remarks/>
        public event ErrorLogCompletedEventHandler ErrorLogCompleted;
        
        /// <remarks/>
        public event GetLastErrorCompletedEventHandler GetLastErrorCompleted;
        
        /// <remarks/>
        public event GetEmrDocumentCompletedEventHandler GetEmrDocumentCompleted;
        
        /// <remarks/>
        public event InsertEmrDocumentCompletedEventHandler InsertEmrDocumentCompleted;
        
        /// <remarks/>
        public event InsertEmrNoteCompletedEventHandler InsertEmrNoteCompleted;
        
        /// <remarks/>
        public event AddNoteDocumentCompletedEventHandler AddNoteDocumentCompleted;
        
        /// <remarks/>
        public event GetEmrDocumentWithoutNoteCompletedEventHandler GetEmrDocumentWithoutNoteCompleted;
        
        /// <remarks/>
        public event PutEmrDocumentCompletedEventHandler PutEmrDocumentCompleted;
        
        /// <remarks/>
        public event UpdateEmrDocumentCompletedEventHandler UpdateEmrDocumentCompleted;
        
        /// <remarks/>
        public event UpdateEmrDocumentWithoutNoteCompletedEventHandler UpdateEmrDocumentWithoutNoteCompleted;
        
        /// <remarks/>
        public event UpdateEmrNoteCompletedEventHandler UpdateEmrNoteCompleted;
        
        /// <remarks/>
        public event DeleteEmrNoteCompletedEventHandler DeleteEmrNoteCompleted;
        
        /// <remarks/>
        public event SyncEmrDocumentCompletedEventHandler SyncEmrDocumentCompleted;
        
        /// <remarks/>
        public event CjjSyncEmrDocumentCompletedEventHandler CjjSyncEmrDocumentCompleted;
        
        /// <remarks/>
        public event GetOneEmrNoteCompletedEventHandler GetOneEmrNoteCompleted;
        
        /// <remarks/>
        public event SetPrintedForEmrdocumentCompletedEventHandler SetPrintedForEmrdocumentCompleted;
        
        /// <remarks/>
        public event GetPrintedStatusForEmrdocumentCompletedEventHandler GetPrintedStatusForEmrdocumentCompleted;
        
        /// <remarks/>
        public event GetRegistryIDsXqueryCompletedEventHandler GetRegistryIDsXqueryCompleted;
        
        /// <remarks/>
        public event GetLastWriteTimeOfEmrDocumentCompletedEventHandler GetLastWriteTimeOfEmrDocumentCompleted;
        
        /// <remarks/>
        public event GetEmrDocumentWithoutNote2CompletedEventHandler GetEmrDocumentWithoutNote2Completed;
        
        /// <remarks/>
        public event NewEmrNoteExCompletedEventHandler NewEmrNoteExCompleted;
        
        /// <remarks/>
        public event NewEmrNoteExZCompletedEventHandler NewEmrNoteExZCompleted;
        
        /// <remarks/>
        public event InsertOrReplaceAttributeOfEmrdocument_EmrCompletedEventHandler InsertOrReplaceAttributeOfEmrdocument_EmrCompleted;
        
        /// <remarks/>
        public event UpdateEmrNoteExCompletedEventHandler UpdateEmrNoteExCompleted;
        
        /// <remarks/>
        public event UpdateEmrNoteExZCompletedEventHandler UpdateEmrNoteExZCompleted;
        
        /// <remarks/>
        public event DeleteEmrNoteExCompletedEventHandler DeleteEmrNoteExCompleted;
        
        /// <remarks/>
        public event UncommitEmrNoteExCompletedEventHandler UncommitEmrNoteExCompleted;
        
        /// <remarks/>
        public event NewEmrNoteExExaCompletedEventHandler NewEmrNoteExExaCompleted;
        
        /// <remarks/>
        public event VerifyCertAndUserIDCompletedEventHandler VerifyCertAndUserIDCompleted;
        
        /// <remarks/>
        public event DelTemplateDetailCompletedEventHandler DelTemplateDetailCompleted;
        
        /// <remarks/>
        public event NewEmrNoteExExaZCompletedEventHandler NewEmrNoteExExaZCompleted;
        
        /// <remarks/>
        public event NewEmrNoteExExCompletedEventHandler NewEmrNoteExExCompleted;
        
        /// <remarks/>
        public event UpdateEmrNoteExExCompletedEventHandler UpdateEmrNoteExExCompleted;
        
        /// <remarks/>
        public event UpdateEmrNoteExExaCompletedEventHandler UpdateEmrNoteExExaCompleted;
        
        /// <remarks/>
        public event UpdateEmrNoteExExaZCompletedEventHandler UpdateEmrNoteExExaZCompleted;
        
        /// <remarks/>
        public event DeleteEmrNoteExExCompletedEventHandler DeleteEmrNoteExExCompleted;
        
        /// <remarks/>
        public event UncommitEmrNoteExExCompletedEventHandler UncommitEmrNoteExExCompleted;
        
        /// <remarks/>
        public event UpdateConfigureCompletedEventHandler UpdateConfigureCompleted;
        
        /// <remarks/>
        public event PutRelationshipCompletedEventHandler PutRelationshipCompleted;
        
        /// <remarks/>
        public event GetLowersCompletedEventHandler GetLowersCompleted;
        
        /// <remarks/>
        public event UpdateRelationshipCompletedEventHandler UpdateRelationshipCompleted;
        
        /// <remarks/>
        public event CheckPatientsCompletedEventHandler CheckPatientsCompleted;
        
        /// <remarks/>
        public event NewNoteTemplateCompletedEventHandler NewNoteTemplateCompleted;
        
        /// <remarks/>
        public event NewNoteTemplateZlgCompletedEventHandler NewNoteTemplateZlgCompleted;
        
        /// <remarks/>
        public event UpdateNoteTemplateCompletedEventHandler UpdateNoteTemplateCompleted;
        
        /// <remarks/>
        public event UpdateNoteTemplateZlgCompletedEventHandler UpdateNoteTemplateZlgCompleted;
        
        /// <remarks/>
        public event RemoveNoteTemplateCompletedEventHandler RemoveNoteTemplateCompleted;
        
        /// <remarks/>
        public event RemoveNoteTemplateZlgCompletedEventHandler RemoveNoteTemplateZlgCompleted;
        
        /// <remarks/>
        public event GetNoteTemplateCompletedEventHandler GetNoteTemplateCompleted;
        
        /// <remarks/>
        public event GetNoteTemplateZlgCompletedEventHandler GetNoteTemplateZlgCompleted;
        
        /// <remarks/>
        public event GetDepartTemplatePksCompletedEventHandler GetDepartTemplatePksCompleted;
        
        /// <remarks/>
        public event GetDepartTemplatePksZlgCompletedEventHandler GetDepartTemplatePksZlgCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetBorrowInfo", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBorrowInfo(string startTime, string endTime) {
            object[] results = this.Invoke("GetBorrowInfo", new object[] {
                        startTime,
                        endTime});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBorrowInfoAsync(string startTime, string endTime) {
            this.GetBorrowInfoAsync(startTime, endTime, null);
        }
        
        /// <remarks/>
        public void GetBorrowInfoAsync(string startTime, string endTime, object userState) {
            if ((this.GetBorrowInfoOperationCompleted == null)) {
                this.GetBorrowInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBorrowInfoOperationCompleted);
            }
            this.InvokeAsync("GetBorrowInfo", new object[] {
                        startTime,
                        endTime}, this.GetBorrowInfoOperationCompleted, userState);
        }
        
        private void OnGetBorrowInfoOperationCompleted(object arg) {
            if ((this.GetBorrowInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBorrowInfoCompleted(this, new GetBorrowInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetRolesPermission", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetRolesPermission(string opcode, string ID) {
            object[] results = this.Invoke("GetRolesPermission", new object[] {
                        opcode,
                        ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetRolesPermissionAsync(string opcode, string ID) {
            this.GetRolesPermissionAsync(opcode, ID, null);
        }
        
        /// <remarks/>
        public void GetRolesPermissionAsync(string opcode, string ID, object userState) {
            if ((this.GetRolesPermissionOperationCompleted == null)) {
                this.GetRolesPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRolesPermissionOperationCompleted);
            }
            this.InvokeAsync("GetRolesPermission", new object[] {
                        opcode,
                        ID}, this.GetRolesPermissionOperationCompleted, userState);
        }
        
        private void OnGetRolesPermissionOperationCompleted(object arg) {
            if ((this.GetRolesPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRolesPermissionCompleted(this, new GetRolesPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetEmrDocumentStatus", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmrDocumentStatus(string strRegistryID) {
            object[] results = this.Invoke("GetEmrDocumentStatus", new object[] {
                        strRegistryID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrDocumentStatusAsync(string strRegistryID) {
            this.GetEmrDocumentStatusAsync(strRegistryID, null);
        }
        
        /// <remarks/>
        public void GetEmrDocumentStatusAsync(string strRegistryID, object userState) {
            if ((this.GetEmrDocumentStatusOperationCompleted == null)) {
                this.GetEmrDocumentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrDocumentStatusOperationCompleted);
            }
            this.InvokeAsync("GetEmrDocumentStatus", new object[] {
                        strRegistryID}, this.GetEmrDocumentStatusOperationCompleted, userState);
        }
        
        private void OnGetEmrDocumentStatusOperationCompleted(object arg) {
            if ((this.GetEmrDocumentStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrDocumentStatusCompleted(this, new GetEmrDocumentStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetArchiveStatus", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetArchiveStatus(string archiveNum) {
            object[] results = this.Invoke("GetArchiveStatus", new object[] {
                        archiveNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetArchiveStatusAsync(string archiveNum) {
            this.GetArchiveStatusAsync(archiveNum, null);
        }
        
        /// <remarks/>
        public void GetArchiveStatusAsync(string archiveNum, object userState) {
            if ((this.GetArchiveStatusOperationCompleted == null)) {
                this.GetArchiveStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArchiveStatusOperationCompleted);
            }
            this.InvokeAsync("GetArchiveStatus", new object[] {
                        archiveNum}, this.GetArchiveStatusOperationCompleted, userState);
        }
        
        private void OnGetArchiveStatusOperationCompleted(object arg) {
            if ((this.GetArchiveStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArchiveStatusCompleted(this, new GetArchiveStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetArchiveStatusByZyh", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetArchiveStatusByZyh(string zyh) {
            object[] results = this.Invoke("GetArchiveStatusByZyh", new object[] {
                        zyh});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetArchiveStatusByZyhAsync(string zyh) {
            this.GetArchiveStatusByZyhAsync(zyh, null);
        }
        
        /// <remarks/>
        public void GetArchiveStatusByZyhAsync(string zyh, object userState) {
            if ((this.GetArchiveStatusByZyhOperationCompleted == null)) {
                this.GetArchiveStatusByZyhOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArchiveStatusByZyhOperationCompleted);
            }
            this.InvokeAsync("GetArchiveStatusByZyh", new object[] {
                        zyh}, this.GetArchiveStatusByZyhOperationCompleted, userState);
        }
        
        private void OnGetArchiveStatusByZyhOperationCompleted(object arg) {
            if ((this.GetArchiveStatusByZyhCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArchiveStatusByZyhCompleted(this, new GetArchiveStatusByZyhCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetBaBs", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBaBs(string strRegistryID) {
            object[] results = this.Invoke("GetBaBs", new object[] {
                        strRegistryID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBaBsAsync(string strRegistryID) {
            this.GetBaBsAsync(strRegistryID, null);
        }
        
        /// <remarks/>
        public void GetBaBsAsync(string strRegistryID, object userState) {
            if ((this.GetBaBsOperationCompleted == null)) {
                this.GetBaBsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBaBsOperationCompleted);
            }
            this.InvokeAsync("GetBaBs", new object[] {
                        strRegistryID}, this.GetBaBsOperationCompleted, userState);
        }
        
        private void OnGetBaBsOperationCompleted(object arg) {
            if ((this.GetBaBsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBaBsCompleted(this, new GetBaBsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetSignWithArchive", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSignWithArchive(string RegistryID, ref System.Data.DataSet ds) {
            object[] results = this.Invoke("GetSignWithArchive", new object[] {
                        RegistryID,
                        ds});
            ds = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSignWithArchiveAsync(string RegistryID, System.Data.DataSet ds) {
            this.GetSignWithArchiveAsync(RegistryID, ds, null);
        }
        
        /// <remarks/>
        public void GetSignWithArchiveAsync(string RegistryID, System.Data.DataSet ds, object userState) {
            if ((this.GetSignWithArchiveOperationCompleted == null)) {
                this.GetSignWithArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSignWithArchiveOperationCompleted);
            }
            this.InvokeAsync("GetSignWithArchive", new object[] {
                        RegistryID,
                        ds}, this.GetSignWithArchiveOperationCompleted, userState);
        }
        
        private void OnGetSignWithArchiveOperationCompleted(object arg) {
            if ((this.GetSignWithArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSignWithArchiveCompleted(this, new GetSignWithArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/NewValuateRulesEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewValuateRulesEx(string noteID, System.Xml.XmlNode rules, string NoteName, bool End) {
            object[] results = this.Invoke("NewValuateRulesEx", new object[] {
                        noteID,
                        rules,
                        NoteName,
                        End});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewValuateRulesExAsync(string noteID, System.Xml.XmlNode rules, string NoteName, bool End) {
            this.NewValuateRulesExAsync(noteID, rules, NoteName, End, null);
        }
        
        /// <remarks/>
        public void NewValuateRulesExAsync(string noteID, System.Xml.XmlNode rules, string NoteName, bool End, object userState) {
            if ((this.NewValuateRulesExOperationCompleted == null)) {
                this.NewValuateRulesExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewValuateRulesExOperationCompleted);
            }
            this.InvokeAsync("NewValuateRulesEx", new object[] {
                        noteID,
                        rules,
                        NoteName,
                        End}, this.NewValuateRulesExOperationCompleted, userState);
        }
        
        private void OnNewValuateRulesExOperationCompleted(object arg) {
            if ((this.NewValuateRulesExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewValuateRulesExCompleted(this, new NewValuateRulesExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetTransferInfoEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTransferInfoEx(string registryID, string WriterID) {
            object[] results = this.Invoke("GetTransferInfoEx", new object[] {
                        registryID,
                        WriterID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransferInfoExAsync(string registryID, string WriterID) {
            this.GetTransferInfoExAsync(registryID, WriterID, null);
        }
        
        /// <remarks/>
        public void GetTransferInfoExAsync(string registryID, string WriterID, object userState) {
            if ((this.GetTransferInfoExOperationCompleted == null)) {
                this.GetTransferInfoExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransferInfoExOperationCompleted);
            }
            this.InvokeAsync("GetTransferInfoEx", new object[] {
                        registryID,
                        WriterID}, this.GetTransferInfoExOperationCompleted, userState);
        }
        
        private void OnGetTransferInfoExOperationCompleted(object arg) {
            if ((this.GetTransferInfoExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransferInfoExCompleted(this, new GetTransferInfoExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetTransferInfoExEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTransferInfoExEx(string registryID, string WriterID, bool Finall) {
            object[] results = this.Invoke("GetTransferInfoExEx", new object[] {
                        registryID,
                        WriterID,
                        Finall});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransferInfoExExAsync(string registryID, string WriterID, bool Finall) {
            this.GetTransferInfoExExAsync(registryID, WriterID, Finall, null);
        }
        
        /// <remarks/>
        public void GetTransferInfoExExAsync(string registryID, string WriterID, bool Finall, object userState) {
            if ((this.GetTransferInfoExExOperationCompleted == null)) {
                this.GetTransferInfoExExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransferInfoExExOperationCompleted);
            }
            this.InvokeAsync("GetTransferInfoExEx", new object[] {
                        registryID,
                        WriterID,
                        Finall}, this.GetTransferInfoExExOperationCompleted, userState);
        }
        
        private void OnGetTransferInfoExExOperationCompleted(object arg) {
            if ((this.GetTransferInfoExExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransferInfoExExCompleted(this, new GetTransferInfoExExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetTransferInfo", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTransferInfo(string ID, string IDType, string criteria, bool Finall) {
            object[] results = this.Invoke("GetTransferInfo", new object[] {
                        ID,
                        IDType,
                        criteria,
                        Finall});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransferInfoAsync(string ID, string IDType, string criteria, bool Finall) {
            this.GetTransferInfoAsync(ID, IDType, criteria, Finall, null);
        }
        
        /// <remarks/>
        public void GetTransferInfoAsync(string ID, string IDType, string criteria, bool Finall, object userState) {
            if ((this.GetTransferInfoOperationCompleted == null)) {
                this.GetTransferInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransferInfoOperationCompleted);
            }
            this.InvokeAsync("GetTransferInfo", new object[] {
                        ID,
                        IDType,
                        criteria,
                        Finall}, this.GetTransferInfoOperationCompleted, userState);
        }
        
        private void OnGetTransferInfoOperationCompleted(object arg) {
            if ((this.GetTransferInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransferInfoCompleted(this, new GetTransferInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetTransferInfoDg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTransferInfoDg(string ID, string IDType, string criteria, bool Finall) {
            object[] results = this.Invoke("GetTransferInfoDg", new object[] {
                        ID,
                        IDType,
                        criteria,
                        Finall});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransferInfoDgAsync(string ID, string IDType, string criteria, bool Finall) {
            this.GetTransferInfoDgAsync(ID, IDType, criteria, Finall, null);
        }
        
        /// <remarks/>
        public void GetTransferInfoDgAsync(string ID, string IDType, string criteria, bool Finall, object userState) {
            if ((this.GetTransferInfoDgOperationCompleted == null)) {
                this.GetTransferInfoDgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransferInfoDgOperationCompleted);
            }
            this.InvokeAsync("GetTransferInfoDg", new object[] {
                        ID,
                        IDType,
                        criteria,
                        Finall}, this.GetTransferInfoDgOperationCompleted, userState);
        }
        
        private void OnGetTransferInfoDgOperationCompleted(object arg) {
            if ((this.GetTransferInfoDgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransferInfoDgCompleted(this, new GetTransferInfoDgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/PutTransferInfo", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PutTransferInfo(string RegistryID, string noteName, string WriterID, string WriterName, string ReceiverID, string InformerID, System.DateTime ReceiverTime, int Counts, bool Finall) {
            object[] results = this.Invoke("PutTransferInfo", new object[] {
                        RegistryID,
                        noteName,
                        WriterID,
                        WriterName,
                        ReceiverID,
                        InformerID,
                        ReceiverTime,
                        Counts,
                        Finall});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PutTransferInfoAsync(string RegistryID, string noteName, string WriterID, string WriterName, string ReceiverID, string InformerID, System.DateTime ReceiverTime, int Counts, bool Finall) {
            this.PutTransferInfoAsync(RegistryID, noteName, WriterID, WriterName, ReceiverID, InformerID, ReceiverTime, Counts, Finall, null);
        }
        
        /// <remarks/>
        public void PutTransferInfoAsync(string RegistryID, string noteName, string WriterID, string WriterName, string ReceiverID, string InformerID, System.DateTime ReceiverTime, int Counts, bool Finall, object userState) {
            if ((this.PutTransferInfoOperationCompleted == null)) {
                this.PutTransferInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutTransferInfoOperationCompleted);
            }
            this.InvokeAsync("PutTransferInfo", new object[] {
                        RegistryID,
                        noteName,
                        WriterID,
                        WriterName,
                        ReceiverID,
                        InformerID,
                        ReceiverTime,
                        Counts,
                        Finall}, this.PutTransferInfoOperationCompleted, userState);
        }
        
        private void OnPutTransferInfoOperationCompleted(object arg) {
            if ((this.PutTransferInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutTransferInfoCompleted(this, new PutTransferInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/PutTransferInfoDg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PutTransferInfoDg(string RegistryID, string noteName, string WriterID, string WriterName, string ReceiverID, string InformerID, System.DateTime ReceiverTime, int Counts, bool Finall, string delayTime) {
            object[] results = this.Invoke("PutTransferInfoDg", new object[] {
                        RegistryID,
                        noteName,
                        WriterID,
                        WriterName,
                        ReceiverID,
                        InformerID,
                        ReceiverTime,
                        Counts,
                        Finall,
                        delayTime});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PutTransferInfoDgAsync(string RegistryID, string noteName, string WriterID, string WriterName, string ReceiverID, string InformerID, System.DateTime ReceiverTime, int Counts, bool Finall, string delayTime) {
            this.PutTransferInfoDgAsync(RegistryID, noteName, WriterID, WriterName, ReceiverID, InformerID, ReceiverTime, Counts, Finall, delayTime, null);
        }
        
        /// <remarks/>
        public void PutTransferInfoDgAsync(string RegistryID, string noteName, string WriterID, string WriterName, string ReceiverID, string InformerID, System.DateTime ReceiverTime, int Counts, bool Finall, string delayTime, object userState) {
            if ((this.PutTransferInfoDgOperationCompleted == null)) {
                this.PutTransferInfoDgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutTransferInfoDgOperationCompleted);
            }
            this.InvokeAsync("PutTransferInfoDg", new object[] {
                        RegistryID,
                        noteName,
                        WriterID,
                        WriterName,
                        ReceiverID,
                        InformerID,
                        ReceiverTime,
                        Counts,
                        Finall,
                        delayTime}, this.PutTransferInfoDgOperationCompleted, userState);
        }
        
        private void OnPutTransferInfoDgOperationCompleted(object arg) {
            if ((this.PutTransferInfoDgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutTransferInfoDgCompleted(this, new PutTransferInfoDgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateTransferInfoDg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateTransferInfoDg(string RegistryID, string noteName, string WriterName, string ReceiverID, string InformerID, System.DateTime ReceiverTime, string DelayTime, int Counts) {
            object[] results = this.Invoke("UpdateTransferInfoDg", new object[] {
                        RegistryID,
                        noteName,
                        WriterName,
                        ReceiverID,
                        InformerID,
                        ReceiverTime,
                        DelayTime,
                        Counts});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTransferInfoDgAsync(string RegistryID, string noteName, string WriterName, string ReceiverID, string InformerID, System.DateTime ReceiverTime, string DelayTime, int Counts) {
            this.UpdateTransferInfoDgAsync(RegistryID, noteName, WriterName, ReceiverID, InformerID, ReceiverTime, DelayTime, Counts, null);
        }
        
        /// <remarks/>
        public void UpdateTransferInfoDgAsync(string RegistryID, string noteName, string WriterName, string ReceiverID, string InformerID, System.DateTime ReceiverTime, string DelayTime, int Counts, object userState) {
            if ((this.UpdateTransferInfoDgOperationCompleted == null)) {
                this.UpdateTransferInfoDgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTransferInfoDgOperationCompleted);
            }
            this.InvokeAsync("UpdateTransferInfoDg", new object[] {
                        RegistryID,
                        noteName,
                        WriterName,
                        ReceiverID,
                        InformerID,
                        ReceiverTime,
                        DelayTime,
                        Counts}, this.UpdateTransferInfoDgOperationCompleted, userState);
        }
        
        private void OnUpdateTransferInfoDgOperationCompleted(object arg) {
            if ((this.UpdateTransferInfoDgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTransferInfoDgCompleted(this, new UpdateTransferInfoDgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateTransferInfo", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateTransferInfo(string RegistryID, string noteName, string WriterName, string ReceiverID, string InformerID, System.DateTime ReceiverTime, int Counts) {
            object[] results = this.Invoke("UpdateTransferInfo", new object[] {
                        RegistryID,
                        noteName,
                        WriterName,
                        ReceiverID,
                        InformerID,
                        ReceiverTime,
                        Counts});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTransferInfoAsync(string RegistryID, string noteName, string WriterName, string ReceiverID, string InformerID, System.DateTime ReceiverTime, int Counts) {
            this.UpdateTransferInfoAsync(RegistryID, noteName, WriterName, ReceiverID, InformerID, ReceiverTime, Counts, null);
        }
        
        /// <remarks/>
        public void UpdateTransferInfoAsync(string RegistryID, string noteName, string WriterName, string ReceiverID, string InformerID, System.DateTime ReceiverTime, int Counts, object userState) {
            if ((this.UpdateTransferInfoOperationCompleted == null)) {
                this.UpdateTransferInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTransferInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateTransferInfo", new object[] {
                        RegistryID,
                        noteName,
                        WriterName,
                        ReceiverID,
                        InformerID,
                        ReceiverTime,
                        Counts}, this.UpdateTransferInfoOperationCompleted, userState);
        }
        
        private void OnUpdateTransferInfoOperationCompleted(object arg) {
            if ((this.UpdateTransferInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTransferInfoCompleted(this, new UpdateTransferInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/DelTransferInfo", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelTransferInfo(string RegistryID, string DoctorID) {
            object[] results = this.Invoke("DelTransferInfo", new object[] {
                        RegistryID,
                        DoctorID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelTransferInfoAsync(string RegistryID, string DoctorID) {
            this.DelTransferInfoAsync(RegistryID, DoctorID, null);
        }
        
        /// <remarks/>
        public void DelTransferInfoAsync(string RegistryID, string DoctorID, object userState) {
            if ((this.DelTransferInfoOperationCompleted == null)) {
                this.DelTransferInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelTransferInfoOperationCompleted);
            }
            this.InvokeAsync("DelTransferInfo", new object[] {
                        RegistryID,
                        DoctorID}, this.DelTransferInfoOperationCompleted, userState);
        }
        
        private void OnDelTransferInfoOperationCompleted(object arg) {
            if ((this.DelTransferInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelTransferInfoCompleted(this, new DelTransferInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/NewOperationLog", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NewOperationLog(string RegistryID, int Series, string DoctorID, System.DateTime OpTime, int OpType, string NoteID) {
            object[] results = this.Invoke("NewOperationLog", new object[] {
                        RegistryID,
                        Series,
                        DoctorID,
                        OpTime,
                        OpType,
                        NoteID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NewOperationLogAsync(string RegistryID, int Series, string DoctorID, System.DateTime OpTime, int OpType, string NoteID) {
            this.NewOperationLogAsync(RegistryID, Series, DoctorID, OpTime, OpType, NoteID, null);
        }
        
        /// <remarks/>
        public void NewOperationLogAsync(string RegistryID, int Series, string DoctorID, System.DateTime OpTime, int OpType, string NoteID, object userState) {
            if ((this.NewOperationLogOperationCompleted == null)) {
                this.NewOperationLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewOperationLogOperationCompleted);
            }
            this.InvokeAsync("NewOperationLog", new object[] {
                        RegistryID,
                        Series,
                        DoctorID,
                        OpTime,
                        OpType,
                        NoteID}, this.NewOperationLogOperationCompleted, userState);
        }
        
        private void OnNewOperationLogOperationCompleted(object arg) {
            if ((this.NewOperationLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewOperationLogCompleted(this, new NewOperationLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/RemindToReview", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RemindToReview(string strKsbm) {
            object[] results = this.Invoke("RemindToReview", new object[] {
                        strKsbm});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RemindToReviewAsync(string strKsbm) {
            this.RemindToReviewAsync(strKsbm, null);
        }
        
        /// <remarks/>
        public void RemindToReviewAsync(string strKsbm, object userState) {
            if ((this.RemindToReviewOperationCompleted == null)) {
                this.RemindToReviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemindToReviewOperationCompleted);
            }
            this.InvokeAsync("RemindToReview", new object[] {
                        strKsbm}, this.RemindToReviewOperationCompleted, userState);
        }
        
        private void OnRemindToReviewOperationCompleted(object arg) {
            if ((this.RemindToReviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemindToReviewCompleted(this, new RemindToReviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/InfoEmrNoteEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InfoEmrNoteEx(string registryID, string Opcode, string departmentCode, string noteID, int series, string doctorcode, System.Xml.XmlNode info, string ArchiveNum, NoteStatus status) {
            object[] results = this.Invoke("InfoEmrNoteEx", new object[] {
                        registryID,
                        Opcode,
                        departmentCode,
                        noteID,
                        series,
                        doctorcode,
                        info,
                        ArchiveNum,
                        status});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InfoEmrNoteExAsync(string registryID, string Opcode, string departmentCode, string noteID, int series, string doctorcode, System.Xml.XmlNode info, string ArchiveNum, NoteStatus status) {
            this.InfoEmrNoteExAsync(registryID, Opcode, departmentCode, noteID, series, doctorcode, info, ArchiveNum, status, null);
        }
        
        /// <remarks/>
        public void InfoEmrNoteExAsync(string registryID, string Opcode, string departmentCode, string noteID, int series, string doctorcode, System.Xml.XmlNode info, string ArchiveNum, NoteStatus status, object userState) {
            if ((this.InfoEmrNoteExOperationCompleted == null)) {
                this.InfoEmrNoteExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInfoEmrNoteExOperationCompleted);
            }
            this.InvokeAsync("InfoEmrNoteEx", new object[] {
                        registryID,
                        Opcode,
                        departmentCode,
                        noteID,
                        series,
                        doctorcode,
                        info,
                        ArchiveNum,
                        status}, this.InfoEmrNoteExOperationCompleted, userState);
        }
        
        private void OnInfoEmrNoteExOperationCompleted(object arg) {
            if ((this.InfoEmrNoteExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InfoEmrNoteExCompleted(this, new InfoEmrNoteExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetInfoBack", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInfoBack(int status, string start, string end) {
            object[] results = this.Invoke("GetInfoBack", new object[] {
                        status,
                        start,
                        end});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoBackAsync(int status, string start, string end) {
            this.GetInfoBackAsync(status, start, end, null);
        }
        
        /// <remarks/>
        public void GetInfoBackAsync(int status, string start, string end, object userState) {
            if ((this.GetInfoBackOperationCompleted == null)) {
                this.GetInfoBackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoBackOperationCompleted);
            }
            this.InvokeAsync("GetInfoBack", new object[] {
                        status,
                        start,
                        end}, this.GetInfoBackOperationCompleted, userState);
        }
        
        private void OnGetInfoBackOperationCompleted(object arg) {
            if ((this.GetInfoBackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoBackCompleted(this, new GetInfoBackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetInfoBackByDoctor", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInfoBackByDoctor(string doctor) {
            object[] results = this.Invoke("GetInfoBackByDoctor", new object[] {
                        doctor});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoBackByDoctorAsync(string doctor) {
            this.GetInfoBackByDoctorAsync(doctor, null);
        }
        
        /// <remarks/>
        public void GetInfoBackByDoctorAsync(string doctor, object userState) {
            if ((this.GetInfoBackByDoctorOperationCompleted == null)) {
                this.GetInfoBackByDoctorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoBackByDoctorOperationCompleted);
            }
            this.InvokeAsync("GetInfoBackByDoctor", new object[] {
                        doctor}, this.GetInfoBackByDoctorOperationCompleted, userState);
        }
        
        private void OnGetInfoBackByDoctorOperationCompleted(object arg) {
            if ((this.GetInfoBackByDoctorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoBackByDoctorCompleted(this, new GetInfoBackByDoctorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetInfoBackByDoctorReg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInfoBackByDoctorReg(string doctor, string registryID) {
            object[] results = this.Invoke("GetInfoBackByDoctorReg", new object[] {
                        doctor,
                        registryID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoBackByDoctorRegAsync(string doctor, string registryID) {
            this.GetInfoBackByDoctorRegAsync(doctor, registryID, null);
        }
        
        /// <remarks/>
        public void GetInfoBackByDoctorRegAsync(string doctor, string registryID, object userState) {
            if ((this.GetInfoBackByDoctorRegOperationCompleted == null)) {
                this.GetInfoBackByDoctorRegOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoBackByDoctorRegOperationCompleted);
            }
            this.InvokeAsync("GetInfoBackByDoctorReg", new object[] {
                        doctor,
                        registryID}, this.GetInfoBackByDoctorRegOperationCompleted, userState);
        }
        
        private void OnGetInfoBackByDoctorRegOperationCompleted(object arg) {
            if ((this.GetInfoBackByDoctorRegCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoBackByDoctorRegCompleted(this, new GetInfoBackByDoctorRegCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateInfoBackByDoctorReg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateInfoBackByDoctorReg(string doctor, string registryID, int series) {
            object[] results = this.Invoke("UpdateInfoBackByDoctorReg", new object[] {
                        doctor,
                        registryID,
                        series});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateInfoBackByDoctorRegAsync(string doctor, string registryID, int series) {
            this.UpdateInfoBackByDoctorRegAsync(doctor, registryID, series, null);
        }
        
        /// <remarks/>
        public void UpdateInfoBackByDoctorRegAsync(string doctor, string registryID, int series, object userState) {
            if ((this.UpdateInfoBackByDoctorRegOperationCompleted == null)) {
                this.UpdateInfoBackByDoctorRegOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInfoBackByDoctorRegOperationCompleted);
            }
            this.InvokeAsync("UpdateInfoBackByDoctorReg", new object[] {
                        doctor,
                        registryID,
                        series}, this.UpdateInfoBackByDoctorRegOperationCompleted, userState);
        }
        
        private void OnUpdateInfoBackByDoctorRegOperationCompleted(object arg) {
            if ((this.UpdateInfoBackByDoctorRegCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInfoBackByDoctorRegCompleted(this, new UpdateInfoBackByDoctorRegCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/DownLoadWord", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DownLoadWord(string zyh) {
            object[] results = this.Invoke("DownLoadWord", new object[] {
                        zyh});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DownLoadWordAsync(string zyh) {
            this.DownLoadWordAsync(zyh, null);
        }
        
        /// <remarks/>
        public void DownLoadWordAsync(string zyh, object userState) {
            if ((this.DownLoadWordOperationCompleted == null)) {
                this.DownLoadWordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownLoadWordOperationCompleted);
            }
            this.InvokeAsync("DownLoadWord", new object[] {
                        zyh}, this.DownLoadWordOperationCompleted, userState);
        }
        
        private void OnDownLoadWordOperationCompleted(object arg) {
            if ((this.DownLoadWordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownLoadWordCompleted(this, new DownLoadWordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/Updatelclj", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Updatelclj(string zyh, string[] jdxh, System.DateTime datetime) {
            object[] results = this.Invoke("Updatelclj", new object[] {
                        zyh,
                        jdxh,
                        datetime});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatelcljAsync(string zyh, string[] jdxh, System.DateTime datetime) {
            this.UpdatelcljAsync(zyh, jdxh, datetime, null);
        }
        
        /// <remarks/>
        public void UpdatelcljAsync(string zyh, string[] jdxh, System.DateTime datetime, object userState) {
            if ((this.UpdatelcljOperationCompleted == null)) {
                this.UpdatelcljOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatelcljOperationCompleted);
            }
            this.InvokeAsync("Updatelclj", new object[] {
                        zyh,
                        jdxh,
                        datetime}, this.UpdatelcljOperationCompleted, userState);
        }
        
        private void OnUpdatelcljOperationCompleted(object arg) {
            if ((this.UpdatelcljCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatelcljCompleted(this, new UpdatelcljCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetlcCount", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetlcCount(string zyh) {
            object[] results = this.Invoke("GetlcCount", new object[] {
                        zyh});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetlcCountAsync(string zyh) {
            this.GetlcCountAsync(zyh, null);
        }
        
        /// <remarks/>
        public void GetlcCountAsync(string zyh, object userState) {
            if ((this.GetlcCountOperationCompleted == null)) {
                this.GetlcCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetlcCountOperationCompleted);
            }
            this.InvokeAsync("GetlcCount", new object[] {
                        zyh}, this.GetlcCountOperationCompleted, userState);
        }
        
        private void OnGetlcCountOperationCompleted(object arg) {
            if ((this.GetlcCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetlcCountCompleted(this, new GetlcCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/ReDownLoadWord", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ReDownLoadWord(string zyh) {
            object[] results = this.Invoke("ReDownLoadWord", new object[] {
                        zyh});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReDownLoadWordAsync(string zyh) {
            this.ReDownLoadWordAsync(zyh, null);
        }
        
        /// <remarks/>
        public void ReDownLoadWordAsync(string zyh, object userState) {
            if ((this.ReDownLoadWordOperationCompleted == null)) {
                this.ReDownLoadWordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReDownLoadWordOperationCompleted);
            }
            this.InvokeAsync("ReDownLoadWord", new object[] {
                        zyh}, this.ReDownLoadWordOperationCompleted, userState);
        }
        
        private void OnReDownLoadWordOperationCompleted(object arg) {
            if ((this.ReDownLoadWordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReDownLoadWordCompleted(this, new ReDownLoadWordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/CheckUpdate", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckUpdate(string zyh) {
            object[] results = this.Invoke("CheckUpdate", new object[] {
                        zyh});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUpdateAsync(string zyh) {
            this.CheckUpdateAsync(zyh, null);
        }
        
        /// <remarks/>
        public void CheckUpdateAsync(string zyh, object userState) {
            if ((this.CheckUpdateOperationCompleted == null)) {
                this.CheckUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUpdateOperationCompleted);
            }
            this.InvokeAsync("CheckUpdate", new object[] {
                        zyh}, this.CheckUpdateOperationCompleted, userState);
        }
        
        private void OnCheckUpdateOperationCompleted(object arg) {
            if ((this.CheckUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUpdateCompleted(this, new CheckUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateLcljHzmx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateLcljHzmx(string zyh) {
            object[] results = this.Invoke("UpdateLcljHzmx", new object[] {
                        zyh});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLcljHzmxAsync(string zyh) {
            this.UpdateLcljHzmxAsync(zyh, null);
        }
        
        /// <remarks/>
        public void UpdateLcljHzmxAsync(string zyh, object userState) {
            if ((this.UpdateLcljHzmxOperationCompleted == null)) {
                this.UpdateLcljHzmxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLcljHzmxOperationCompleted);
            }
            this.InvokeAsync("UpdateLcljHzmx", new object[] {
                        zyh}, this.UpdateLcljHzmxOperationCompleted, userState);
        }
        
        private void OnUpdateLcljHzmxOperationCompleted(object arg) {
            if ((this.UpdateLcljHzmxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLcljHzmxCompleted(this, new UpdateLcljHzmxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetTransferInfoExExEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTransferInfoExExEx(string registryID, string WriterID, bool Finall) {
            object[] results = this.Invoke("GetTransferInfoExExEx", new object[] {
                        registryID,
                        WriterID,
                        Finall});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransferInfoExExExAsync(string registryID, string WriterID, bool Finall) {
            this.GetTransferInfoExExExAsync(registryID, WriterID, Finall, null);
        }
        
        /// <remarks/>
        public void GetTransferInfoExExExAsync(string registryID, string WriterID, bool Finall, object userState) {
            if ((this.GetTransferInfoExExExOperationCompleted == null)) {
                this.GetTransferInfoExExExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransferInfoExExExOperationCompleted);
            }
            this.InvokeAsync("GetTransferInfoExExEx", new object[] {
                        registryID,
                        WriterID,
                        Finall}, this.GetTransferInfoExExExOperationCompleted, userState);
        }
        
        private void OnGetTransferInfoExExExOperationCompleted(object arg) {
            if ((this.GetTransferInfoExExExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransferInfoExExExCompleted(this, new GetTransferInfoExExExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetInvalidInfo", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInvalidInfo(string ID, string IDType, string criteria) {
            object[] results = this.Invoke("GetInvalidInfo", new object[] {
                        ID,
                        IDType,
                        criteria});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetInvalidInfoAsync(string ID, string IDType, string criteria) {
            this.GetInvalidInfoAsync(ID, IDType, criteria, null);
        }
        
        /// <remarks/>
        public void GetInvalidInfoAsync(string ID, string IDType, string criteria, object userState) {
            if ((this.GetInvalidInfoOperationCompleted == null)) {
                this.GetInvalidInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInvalidInfoOperationCompleted);
            }
            this.InvokeAsync("GetInvalidInfo", new object[] {
                        ID,
                        IDType,
                        criteria}, this.GetInvalidInfoOperationCompleted, userState);
        }
        
        private void OnGetInvalidInfoOperationCompleted(object arg) {
            if ((this.GetInvalidInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInvalidInfoCompleted(this, new GetInvalidInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/Setzuofei", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Setzuofei(string registryID, int series) {
            object[] results = this.Invoke("Setzuofei", new object[] {
                        registryID,
                        series});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetzuofeiAsync(string registryID, int series) {
            this.SetzuofeiAsync(registryID, series, null);
        }
        
        /// <remarks/>
        public void SetzuofeiAsync(string registryID, int series, object userState) {
            if ((this.SetzuofeiOperationCompleted == null)) {
                this.SetzuofeiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetzuofeiOperationCompleted);
            }
            this.InvokeAsync("Setzuofei", new object[] {
                        registryID,
                        series}, this.SetzuofeiOperationCompleted, userState);
        }
        
        private void OnSetzuofeiOperationCompleted(object arg) {
            if ((this.SetzuofeiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetzuofeiCompleted(this, new SetzuofeiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/Setunzuofei", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Setunzuofei(string registryID, int series) {
            object[] results = this.Invoke("Setunzuofei", new object[] {
                        registryID,
                        series});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetunzuofeiAsync(string registryID, int series) {
            this.SetunzuofeiAsync(registryID, series, null);
        }
        
        /// <remarks/>
        public void SetunzuofeiAsync(string registryID, int series, object userState) {
            if ((this.SetunzuofeiOperationCompleted == null)) {
                this.SetunzuofeiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetunzuofeiOperationCompleted);
            }
            this.InvokeAsync("Setunzuofei", new object[] {
                        registryID,
                        series}, this.SetunzuofeiOperationCompleted, userState);
        }
        
        private void OnSetunzuofeiOperationCompleted(object arg) {
            if ((this.SetunzuofeiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetunzuofeiCompleted(this, new SetunzuofeiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/lw_invalidInfo", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool lw_invalidInfo(string RegistryID, string noteName, string Opcode, string WriterID, string WriterName, bool Invalid, System.DateTime ReceiverTime) {
            object[] results = this.Invoke("lw_invalidInfo", new object[] {
                        RegistryID,
                        noteName,
                        Opcode,
                        WriterID,
                        WriterName,
                        Invalid,
                        ReceiverTime});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void lw_invalidInfoAsync(string RegistryID, string noteName, string Opcode, string WriterID, string WriterName, bool Invalid, System.DateTime ReceiverTime) {
            this.lw_invalidInfoAsync(RegistryID, noteName, Opcode, WriterID, WriterName, Invalid, ReceiverTime, null);
        }
        
        /// <remarks/>
        public void lw_invalidInfoAsync(string RegistryID, string noteName, string Opcode, string WriterID, string WriterName, bool Invalid, System.DateTime ReceiverTime, object userState) {
            if ((this.lw_invalidInfoOperationCompleted == null)) {
                this.lw_invalidInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.Onlw_invalidInfoOperationCompleted);
            }
            this.InvokeAsync("lw_invalidInfo", new object[] {
                        RegistryID,
                        noteName,
                        Opcode,
                        WriterID,
                        WriterName,
                        Invalid,
                        ReceiverTime}, this.lw_invalidInfoOperationCompleted, userState);
        }
        
        private void Onlw_invalidInfoOperationCompleted(object arg) {
            if ((this.lw_invalidInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lw_invalidInfoCompleted(this, new lw_invalidInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/lw_GetTransferInfoExEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet lw_GetTransferInfoExEx(string registryID, string WriterID, bool Finall) {
            object[] results = this.Invoke("lw_GetTransferInfoExEx", new object[] {
                        registryID,
                        WriterID,
                        Finall});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void lw_GetTransferInfoExExAsync(string registryID, string WriterID, bool Finall) {
            this.lw_GetTransferInfoExExAsync(registryID, WriterID, Finall, null);
        }
        
        /// <remarks/>
        public void lw_GetTransferInfoExExAsync(string registryID, string WriterID, bool Finall, object userState) {
            if ((this.lw_GetTransferInfoExExOperationCompleted == null)) {
                this.lw_GetTransferInfoExExOperationCompleted = new System.Threading.SendOrPostCallback(this.Onlw_GetTransferInfoExExOperationCompleted);
            }
            this.InvokeAsync("lw_GetTransferInfoExEx", new object[] {
                        registryID,
                        WriterID,
                        Finall}, this.lw_GetTransferInfoExExOperationCompleted, userState);
        }
        
        private void Onlw_GetTransferInfoExExOperationCompleted(object arg) {
            if ((this.lw_GetTransferInfoExExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lw_GetTransferInfoExExCompleted(this, new lw_GetTransferInfoExExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/obtainjkdm", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet obtainjkdm(string noteID) {
            object[] results = this.Invoke("obtainjkdm", new object[] {
                        noteID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void obtainjkdmAsync(string noteID) {
            this.obtainjkdmAsync(noteID, null);
        }
        
        /// <remarks/>
        public void obtainjkdmAsync(string noteID, object userState) {
            if ((this.obtainjkdmOperationCompleted == null)) {
                this.obtainjkdmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobtainjkdmOperationCompleted);
            }
            this.InvokeAsync("obtainjkdm", new object[] {
                        noteID}, this.obtainjkdmOperationCompleted, userState);
        }
        
        private void OnobtainjkdmOperationCompleted(object arg) {
            if ((this.obtainjkdmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.obtainjkdmCompleted(this, new obtainjkdmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/ClinicPathmonitor", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ClinicPathmonitor(string registryID, string jkdm, string doctorID) {
            object[] results = this.Invoke("ClinicPathmonitor", new object[] {
                        registryID,
                        jkdm,
                        doctorID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ClinicPathmonitorAsync(string registryID, string jkdm, string doctorID) {
            this.ClinicPathmonitorAsync(registryID, jkdm, doctorID, null);
        }
        
        /// <remarks/>
        public void ClinicPathmonitorAsync(string registryID, string jkdm, string doctorID, object userState) {
            if ((this.ClinicPathmonitorOperationCompleted == null)) {
                this.ClinicPathmonitorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClinicPathmonitorOperationCompleted);
            }
            this.InvokeAsync("ClinicPathmonitor", new object[] {
                        registryID,
                        jkdm,
                        doctorID}, this.ClinicPathmonitorOperationCompleted, userState);
        }
        
        private void OnClinicPathmonitorOperationCompleted(object arg) {
            if ((this.ClinicPathmonitorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClinicPathmonitorCompleted(this, new ClinicPathmonitorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetValuateDetailEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetValuateDetailEx(string noteID, string RegistryID, ref System.Xml.XmlNode Flaws) {
            object[] results = this.Invoke("GetValuateDetailEx", new object[] {
                        noteID,
                        RegistryID,
                        Flaws});
            Flaws = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetValuateDetailExAsync(string noteID, string RegistryID, System.Xml.XmlNode Flaws) {
            this.GetValuateDetailExAsync(noteID, RegistryID, Flaws, null);
        }
        
        /// <remarks/>
        public void GetValuateDetailExAsync(string noteID, string RegistryID, System.Xml.XmlNode Flaws, object userState) {
            if ((this.GetValuateDetailExOperationCompleted == null)) {
                this.GetValuateDetailExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValuateDetailExOperationCompleted);
            }
            this.InvokeAsync("GetValuateDetailEx", new object[] {
                        noteID,
                        RegistryID,
                        Flaws}, this.GetValuateDetailExOperationCompleted, userState);
        }
        
        private void OnGetValuateDetailExOperationCompleted(object arg) {
            if ((this.GetValuateDetailExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValuateDetailExCompleted(this, new GetValuateDetailExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/IndexSearcher", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int IndexSearcher() {
            object[] results = this.Invoke("IndexSearcher", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void IndexSearcherAsync() {
            this.IndexSearcherAsync(null);
        }
        
        /// <remarks/>
        public void IndexSearcherAsync(object userState) {
            if ((this.IndexSearcherOperationCompleted == null)) {
                this.IndexSearcherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIndexSearcherOperationCompleted);
            }
            this.InvokeAsync("IndexSearcher", new object[0], this.IndexSearcherOperationCompleted, userState);
        }
        
        private void OnIndexSearcherOperationCompleted(object arg) {
            if ((this.IndexSearcherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IndexSearcherCompleted(this, new IndexSearcherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetCreationTime", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCreationTime() {
            object[] results = this.Invoke("GetCreationTime", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreationTimeAsync() {
            this.GetCreationTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetCreationTimeAsync(object userState) {
            if ((this.GetCreationTimeOperationCompleted == null)) {
                this.GetCreationTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreationTimeOperationCompleted);
            }
            this.InvokeAsync("GetCreationTime", new object[0], this.GetCreationTimeOperationCompleted, userState);
        }
        
        private void OnGetCreationTimeOperationCompleted(object arg) {
            if ((this.GetCreationTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreationTimeCompleted(this, new GetCreationTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/Page_Load", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Page_Load() {
            this.Invoke("Page_Load", new object[0]);
        }
        
        /// <remarks/>
        public void Page_LoadAsync() {
            this.Page_LoadAsync(null);
        }
        
        /// <remarks/>
        public void Page_LoadAsync(object userState) {
            if ((this.Page_LoadOperationCompleted == null)) {
                this.Page_LoadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPage_LoadOperationCompleted);
            }
            this.InvokeAsync("Page_Load", new object[0], this.Page_LoadOperationCompleted, userState);
        }
        
        private void OnPage_LoadOperationCompleted(object arg) {
            if ((this.Page_LoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Page_LoadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetDataminingSearch", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDataminingSearch(int StartPos, string strStart, string strEnd, string cboDepartment, string strseach, out double zyhcount, out double tj, out decimal EndPos) {
            object[] results = this.Invoke("GetDataminingSearch", new object[] {
                        StartPos,
                        strStart,
                        strEnd,
                        cboDepartment,
                        strseach});
            zyhcount = ((double)(results[1]));
            tj = ((double)(results[2]));
            EndPos = ((decimal)(results[3]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataminingSearchAsync(int StartPos, string strStart, string strEnd, string cboDepartment, string strseach) {
            this.GetDataminingSearchAsync(StartPos, strStart, strEnd, cboDepartment, strseach, null);
        }
        
        /// <remarks/>
        public void GetDataminingSearchAsync(int StartPos, string strStart, string strEnd, string cboDepartment, string strseach, object userState) {
            if ((this.GetDataminingSearchOperationCompleted == null)) {
                this.GetDataminingSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataminingSearchOperationCompleted);
            }
            this.InvokeAsync("GetDataminingSearch", new object[] {
                        StartPos,
                        strStart,
                        strEnd,
                        cboDepartment,
                        strseach}, this.GetDataminingSearchOperationCompleted, userState);
        }
        
        private void OnGetDataminingSearchOperationCompleted(object arg) {
            if ((this.GetDataminingSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataminingSearchCompleted(this, new GetDataminingSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetDataminingSearchEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDataminingSearchEx(int StartPos, string strStart, string strEnd, string cboDepartment, string[] strKeyValuePair, out double zyhcount, out double tj, out decimal EndPos) {
            object[] results = this.Invoke("GetDataminingSearchEx", new object[] {
                        StartPos,
                        strStart,
                        strEnd,
                        cboDepartment,
                        strKeyValuePair});
            zyhcount = ((double)(results[1]));
            tj = ((double)(results[2]));
            EndPos = ((decimal)(results[3]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataminingSearchExAsync(int StartPos, string strStart, string strEnd, string cboDepartment, string[] strKeyValuePair) {
            this.GetDataminingSearchExAsync(StartPos, strStart, strEnd, cboDepartment, strKeyValuePair, null);
        }
        
        /// <remarks/>
        public void GetDataminingSearchExAsync(int StartPos, string strStart, string strEnd, string cboDepartment, string[] strKeyValuePair, object userState) {
            if ((this.GetDataminingSearchExOperationCompleted == null)) {
                this.GetDataminingSearchExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataminingSearchExOperationCompleted);
            }
            this.InvokeAsync("GetDataminingSearchEx", new object[] {
                        StartPos,
                        strStart,
                        strEnd,
                        cboDepartment,
                        strKeyValuePair}, this.GetDataminingSearchExOperationCompleted, userState);
        }
        
        private void OnGetDataminingSearchExOperationCompleted(object arg) {
            if ((this.GetDataminingSearchExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataminingSearchExCompleted(this, new GetDataminingSearchExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/SaveSeach", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveSeach(string strseach, string Opcode) {
            this.Invoke("SaveSeach", new object[] {
                        strseach,
                        Opcode});
        }
        
        /// <remarks/>
        public void SaveSeachAsync(string strseach, string Opcode) {
            this.SaveSeachAsync(strseach, Opcode, null);
        }
        
        /// <remarks/>
        public void SaveSeachAsync(string strseach, string Opcode, object userState) {
            if ((this.SaveSeachOperationCompleted == null)) {
                this.SaveSeachOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSeachOperationCompleted);
            }
            this.InvokeAsync("SaveSeach", new object[] {
                        strseach,
                        Opcode}, this.SaveSeachOperationCompleted, userState);
        }
        
        private void OnSaveSeachOperationCompleted(object arg) {
            if ((this.SaveSeachCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSeachCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/SaveSeachEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveSeachEx(string name, System.Xml.XmlNode doc, string Opcode) {
            this.Invoke("SaveSeachEx", new object[] {
                        name,
                        doc,
                        Opcode});
        }
        
        /// <remarks/>
        public void SaveSeachExAsync(string name, System.Xml.XmlNode doc, string Opcode) {
            this.SaveSeachExAsync(name, doc, Opcode, null);
        }
        
        /// <remarks/>
        public void SaveSeachExAsync(string name, System.Xml.XmlNode doc, string Opcode, object userState) {
            if ((this.SaveSeachExOperationCompleted == null)) {
                this.SaveSeachExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSeachExOperationCompleted);
            }
            this.InvokeAsync("SaveSeachEx", new object[] {
                        name,
                        doc,
                        Opcode}, this.SaveSeachExOperationCompleted, userState);
        }
        
        private void OnSaveSeachExOperationCompleted(object arg) {
            if ((this.SaveSeachExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSeachExCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/DelSeach", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelSeach(string pk) {
            this.Invoke("DelSeach", new object[] {
                        pk});
        }
        
        /// <remarks/>
        public void DelSeachAsync(string pk) {
            this.DelSeachAsync(pk, null);
        }
        
        /// <remarks/>
        public void DelSeachAsync(string pk, object userState) {
            if ((this.DelSeachOperationCompleted == null)) {
                this.DelSeachOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelSeachOperationCompleted);
            }
            this.InvokeAsync("DelSeach", new object[] {
                        pk}, this.DelSeachOperationCompleted, userState);
        }
        
        private void OnDelSeachOperationCompleted(object arg) {
            if ((this.DelSeachCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelSeachCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetSeachList", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeachList(string Opcode) {
            object[] results = this.Invoke("GetSeachList", new object[] {
                        Opcode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeachListAsync(string Opcode) {
            this.GetSeachListAsync(Opcode, null);
        }
        
        /// <remarks/>
        public void GetSeachListAsync(string Opcode, object userState) {
            if ((this.GetSeachListOperationCompleted == null)) {
                this.GetSeachListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeachListOperationCompleted);
            }
            this.InvokeAsync("GetSeachList", new object[] {
                        Opcode}, this.GetSeachListOperationCompleted, userState);
        }
        
        private void OnGetSeachListOperationCompleted(object arg) {
            if ((this.GetSeachListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeachListCompleted(this, new GetSeachListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetSeachListEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeachListEx(string Opcode) {
            object[] results = this.Invoke("GetSeachListEx", new object[] {
                        Opcode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeachListExAsync(string Opcode) {
            this.GetSeachListExAsync(Opcode, null);
        }
        
        /// <remarks/>
        public void GetSeachListExAsync(string Opcode, object userState) {
            if ((this.GetSeachListExOperationCompleted == null)) {
                this.GetSeachListExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeachListExOperationCompleted);
            }
            this.InvokeAsync("GetSeachListEx", new object[] {
                        Opcode}, this.GetSeachListExOperationCompleted, userState);
        }
        
        private void OnGetSeachListExOperationCompleted(object arg) {
            if ((this.GetSeachListExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeachListExCompleted(this, new GetSeachListExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetNoteIDsWithValuateRulesEnd", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNoteIDsWithValuateRulesEnd(ref System.Xml.XmlNode rules) {
            object[] results = this.Invoke("GetNoteIDsWithValuateRulesEnd", new object[] {
                        rules});
            rules = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNoteIDsWithValuateRulesEndAsync(System.Xml.XmlNode rules) {
            this.GetNoteIDsWithValuateRulesEndAsync(rules, null);
        }
        
        /// <remarks/>
        public void GetNoteIDsWithValuateRulesEndAsync(System.Xml.XmlNode rules, object userState) {
            if ((this.GetNoteIDsWithValuateRulesEndOperationCompleted == null)) {
                this.GetNoteIDsWithValuateRulesEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNoteIDsWithValuateRulesEndOperationCompleted);
            }
            this.InvokeAsync("GetNoteIDsWithValuateRulesEnd", new object[] {
                        rules}, this.GetNoteIDsWithValuateRulesEndOperationCompleted, userState);
        }
        
        private void OnGetNoteIDsWithValuateRulesEndOperationCompleted(object arg) {
            if ((this.GetNoteIDsWithValuateRulesEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNoteIDsWithValuateRulesEndCompleted(this, new GetNoteIDsWithValuateRulesEndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetValuateDetailEndExEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetValuateDetailEndExEx(string noteID, string RegistryID, string series, ref System.Xml.XmlNode Flaws) {
            object[] results = this.Invoke("GetValuateDetailEndExEx", new object[] {
                        noteID,
                        RegistryID,
                        series,
                        Flaws});
            Flaws = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetValuateDetailEndExExAsync(string noteID, string RegistryID, string series, System.Xml.XmlNode Flaws) {
            this.GetValuateDetailEndExExAsync(noteID, RegistryID, series, Flaws, null);
        }
        
        /// <remarks/>
        public void GetValuateDetailEndExExAsync(string noteID, string RegistryID, string series, System.Xml.XmlNode Flaws, object userState) {
            if ((this.GetValuateDetailEndExExOperationCompleted == null)) {
                this.GetValuateDetailEndExExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValuateDetailEndExExOperationCompleted);
            }
            this.InvokeAsync("GetValuateDetailEndExEx", new object[] {
                        noteID,
                        RegistryID,
                        series,
                        Flaws}, this.GetValuateDetailEndExExOperationCompleted, userState);
        }
        
        private void OnGetValuateDetailEndExExOperationCompleted(object arg) {
            if ((this.GetValuateDetailEndExExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValuateDetailEndExExCompleted(this, new GetValuateDetailEndExExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/ValuateOpcodeEnd", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ValuateOpcodeEnd(string noteID, string RegistryID) {
            object[] results = this.Invoke("ValuateOpcodeEnd", new object[] {
                        noteID,
                        RegistryID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ValuateOpcodeEndAsync(string noteID, string RegistryID) {
            this.ValuateOpcodeEndAsync(noteID, RegistryID, null);
        }
        
        /// <remarks/>
        public void ValuateOpcodeEndAsync(string noteID, string RegistryID, object userState) {
            if ((this.ValuateOpcodeEndOperationCompleted == null)) {
                this.ValuateOpcodeEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValuateOpcodeEndOperationCompleted);
            }
            this.InvokeAsync("ValuateOpcodeEnd", new object[] {
                        noteID,
                        RegistryID}, this.ValuateOpcodeEndOperationCompleted, userState);
        }
        
        private void OnValuateOpcodeEndOperationCompleted(object arg) {
            if ((this.ValuateOpcodeEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValuateOpcodeEndCompleted(this, new ValuateOpcodeEndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/NewValuateDetailEndEX", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewValuateDetailEndEX(bool self, string registryID, string noteID, string series, decimal score, string opcode, System.Xml.XmlNode flaws) {
            object[] results = this.Invoke("NewValuateDetailEndEX", new object[] {
                        self,
                        registryID,
                        noteID,
                        series,
                        score,
                        opcode,
                        flaws});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewValuateDetailEndEXAsync(bool self, string registryID, string noteID, string series, decimal score, string opcode, System.Xml.XmlNode flaws) {
            this.NewValuateDetailEndEXAsync(self, registryID, noteID, series, score, opcode, flaws, null);
        }
        
        /// <remarks/>
        public void NewValuateDetailEndEXAsync(bool self, string registryID, string noteID, string series, decimal score, string opcode, System.Xml.XmlNode flaws, object userState) {
            if ((this.NewValuateDetailEndEXOperationCompleted == null)) {
                this.NewValuateDetailEndEXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewValuateDetailEndEXOperationCompleted);
            }
            this.InvokeAsync("NewValuateDetailEndEX", new object[] {
                        self,
                        registryID,
                        noteID,
                        series,
                        score,
                        opcode,
                        flaws}, this.NewValuateDetailEndEXOperationCompleted, userState);
        }
        
        private void OnNewValuateDetailEndEXOperationCompleted(object arg) {
            if ((this.NewValuateDetailEndEXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewValuateDetailEndEXCompleted(this, new NewValuateDetailEndEXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetSettlementdate", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSettlementdate(string registryID) {
            object[] results = this.Invoke("GetSettlementdate", new object[] {
                        registryID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSettlementdateAsync(string registryID) {
            this.GetSettlementdateAsync(registryID, null);
        }
        
        /// <remarks/>
        public void GetSettlementdateAsync(string registryID, object userState) {
            if ((this.GetSettlementdateOperationCompleted == null)) {
                this.GetSettlementdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSettlementdateOperationCompleted);
            }
            this.InvokeAsync("GetSettlementdate", new object[] {
                        registryID}, this.GetSettlementdateOperationCompleted, userState);
        }
        
        private void OnGetSettlementdateOperationCompleted(object arg) {
            if ((this.GetSettlementdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSettlementdateCompleted(this, new GetSettlementdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/PutRangex", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutRangex(string RegistryID, string DocRange) {
            this.Invoke("PutRangex", new object[] {
                        RegistryID,
                        DocRange});
        }
        
        /// <remarks/>
        public void PutRangexAsync(string RegistryID, string DocRange) {
            this.PutRangexAsync(RegistryID, DocRange, null);
        }
        
        /// <remarks/>
        public void PutRangexAsync(string RegistryID, string DocRange, object userState) {
            if ((this.PutRangexOperationCompleted == null)) {
                this.PutRangexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutRangexOperationCompleted);
            }
            this.InvokeAsync("PutRangex", new object[] {
                        RegistryID,
                        DocRange}, this.PutRangexOperationCompleted, userState);
        }
        
        private void OnPutRangexOperationCompleted(object arg) {
            if ((this.PutRangexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutRangexCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/DeletRangex", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletRangex(string RegistryID) {
            this.Invoke("DeletRangex", new object[] {
                        RegistryID});
        }
        
        /// <remarks/>
        public void DeletRangexAsync(string RegistryID) {
            this.DeletRangexAsync(RegistryID, null);
        }
        
        /// <remarks/>
        public void DeletRangexAsync(string RegistryID, object userState) {
            if ((this.DeletRangexOperationCompleted == null)) {
                this.DeletRangexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletRangexOperationCompleted);
            }
            this.InvokeAsync("DeletRangex", new object[] {
                        RegistryID}, this.DeletRangexOperationCompleted, userState);
        }
        
        private void OnDeletRangexOperationCompleted(object arg) {
            if ((this.DeletRangexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletRangexCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/ArchiveBatchEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ArchiveBatchEx(System.Xml.XmlNode registryIDs) {
            object[] results = this.Invoke("ArchiveBatchEx", new object[] {
                        registryIDs});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ArchiveBatchExAsync(System.Xml.XmlNode registryIDs) {
            this.ArchiveBatchExAsync(registryIDs, null);
        }
        
        /// <remarks/>
        public void ArchiveBatchExAsync(System.Xml.XmlNode registryIDs, object userState) {
            if ((this.ArchiveBatchExOperationCompleted == null)) {
                this.ArchiveBatchExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnArchiveBatchExOperationCompleted);
            }
            this.InvokeAsync("ArchiveBatchEx", new object[] {
                        registryIDs}, this.ArchiveBatchExOperationCompleted, userState);
        }
        
        private void OnArchiveBatchExOperationCompleted(object arg) {
            if ((this.ArchiveBatchExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ArchiveBatchExCompleted(this, new ArchiveBatchExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetBorrowInfoBackEmr", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBorrowInfoBackEmr(string code) {
            object[] results = this.Invoke("GetBorrowInfoBackEmr", new object[] {
                        code});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBorrowInfoBackEmrAsync(string code) {
            this.GetBorrowInfoBackEmrAsync(code, null);
        }
        
        /// <remarks/>
        public void GetBorrowInfoBackEmrAsync(string code, object userState) {
            if ((this.GetBorrowInfoBackEmrOperationCompleted == null)) {
                this.GetBorrowInfoBackEmrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBorrowInfoBackEmrOperationCompleted);
            }
            this.InvokeAsync("GetBorrowInfoBackEmr", new object[] {
                        code}, this.GetBorrowInfoBackEmrOperationCompleted, userState);
        }
        
        private void OnGetBorrowInfoBackEmrOperationCompleted(object arg) {
            if ((this.GetBorrowInfoBackEmrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBorrowInfoBackEmrCompleted(this, new GetBorrowInfoBackEmrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/InsertBorrowInfo", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertBorrowInfo(string Category, string departCode, string departName, string docotorName, string docotorCode, string Checker, string Purpose, string shouldReturnTime) {
            object[] results = this.Invoke("InsertBorrowInfo", new object[] {
                        Category,
                        departCode,
                        departName,
                        docotorName,
                        docotorCode,
                        Checker,
                        Purpose,
                        shouldReturnTime});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBorrowInfoAsync(string Category, string departCode, string departName, string docotorName, string docotorCode, string Checker, string Purpose, string shouldReturnTime) {
            this.InsertBorrowInfoAsync(Category, departCode, departName, docotorName, docotorCode, Checker, Purpose, shouldReturnTime, null);
        }
        
        /// <remarks/>
        public void InsertBorrowInfoAsync(string Category, string departCode, string departName, string docotorName, string docotorCode, string Checker, string Purpose, string shouldReturnTime, object userState) {
            if ((this.InsertBorrowInfoOperationCompleted == null)) {
                this.InsertBorrowInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBorrowInfoOperationCompleted);
            }
            this.InvokeAsync("InsertBorrowInfo", new object[] {
                        Category,
                        departCode,
                        departName,
                        docotorName,
                        docotorCode,
                        Checker,
                        Purpose,
                        shouldReturnTime}, this.InsertBorrowInfoOperationCompleted, userState);
        }
        
        private void OnInsertBorrowInfoOperationCompleted(object arg) {
            if ((this.InsertBorrowInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBorrowInfoCompleted(this, new InsertBorrowInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/BackEmr", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int BackEmr(System.DateTime start, string code) {
            object[] results = this.Invoke("BackEmr", new object[] {
                        start,
                        code});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void BackEmrAsync(System.DateTime start, string code) {
            this.BackEmrAsync(start, code, null);
        }
        
        /// <remarks/>
        public void BackEmrAsync(System.DateTime start, string code, object userState) {
            if ((this.BackEmrOperationCompleted == null)) {
                this.BackEmrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBackEmrOperationCompleted);
            }
            this.InvokeAsync("BackEmr", new object[] {
                        start,
                        code}, this.BackEmrOperationCompleted, userState);
        }
        
        private void OnBackEmrOperationCompleted(object arg) {
            if ((this.BackEmrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BackEmrCompleted(this, new BackEmrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetAllBasic", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllBasic(string strRegistryID) {
            object[] results = this.Invoke("GetAllBasic", new object[] {
                        strRegistryID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllBasicAsync(string strRegistryID) {
            this.GetAllBasicAsync(strRegistryID, null);
        }
        
        /// <remarks/>
        public void GetAllBasicAsync(string strRegistryID, object userState) {
            if ((this.GetAllBasicOperationCompleted == null)) {
                this.GetAllBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllBasicOperationCompleted);
            }
            this.InvokeAsync("GetAllBasic", new object[] {
                        strRegistryID}, this.GetAllBasicOperationCompleted, userState);
        }
        
        private void OnGetAllBasicOperationCompleted(object arg) {
            if ((this.GetAllBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllBasicCompleted(this, new GetAllBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetIllName", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetIllName(string strDepartmentCode, int IsHospital) {
            object[] results = this.Invoke("GetIllName", new object[] {
                        strDepartmentCode,
                        IsHospital});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetIllNameAsync(string strDepartmentCode, int IsHospital) {
            this.GetIllNameAsync(strDepartmentCode, IsHospital, null);
        }
        
        /// <remarks/>
        public void GetIllNameAsync(string strDepartmentCode, int IsHospital, object userState) {
            if ((this.GetIllNameOperationCompleted == null)) {
                this.GetIllNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIllNameOperationCompleted);
            }
            this.InvokeAsync("GetIllName", new object[] {
                        strDepartmentCode,
                        IsHospital}, this.GetIllNameOperationCompleted, userState);
        }
        
        private void OnGetIllNameOperationCompleted(object arg) {
            if ((this.GetIllNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIllNameCompleted(this, new GetIllNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetTemplateIllName", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTemplateIllName(string pk) {
            object[] results = this.Invoke("GetTemplateIllName", new object[] {
                        pk});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateIllNameAsync(string pk) {
            this.GetTemplateIllNameAsync(pk, null);
        }
        
        /// <remarks/>
        public void GetTemplateIllNameAsync(string pk, object userState) {
            if ((this.GetTemplateIllNameOperationCompleted == null)) {
                this.GetTemplateIllNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateIllNameOperationCompleted);
            }
            this.InvokeAsync("GetTemplateIllName", new object[] {
                        pk}, this.GetTemplateIllNameOperationCompleted, userState);
        }
        
        private void OnGetTemplateIllNameOperationCompleted(object arg) {
            if ((this.GetTemplateIllNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateIllNameCompleted(this, new GetTemplateIllNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetTemplateIllNameZlg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTemplateIllNameZlg(string pk) {
            object[] results = this.Invoke("GetTemplateIllNameZlg", new object[] {
                        pk});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateIllNameZlgAsync(string pk) {
            this.GetTemplateIllNameZlgAsync(pk, null);
        }
        
        /// <remarks/>
        public void GetTemplateIllNameZlgAsync(string pk, object userState) {
            if ((this.GetTemplateIllNameZlgOperationCompleted == null)) {
                this.GetTemplateIllNameZlgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateIllNameZlgOperationCompleted);
            }
            this.InvokeAsync("GetTemplateIllNameZlg", new object[] {
                        pk}, this.GetTemplateIllNameZlgOperationCompleted, userState);
        }
        
        private void OnGetTemplateIllNameZlgOperationCompleted(object arg) {
            if ((this.GetTemplateIllNameZlgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateIllNameZlgCompleted(this, new GetTemplateIllNameZlgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetTemplateType", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTemplateType() {
            object[] results = this.Invoke("GetTemplateType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateTypeAsync() {
            this.GetTemplateTypeAsync(null);
        }
        
        /// <remarks/>
        public void GetTemplateTypeAsync(object userState) {
            if ((this.GetTemplateTypeOperationCompleted == null)) {
                this.GetTemplateTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateTypeOperationCompleted);
            }
            this.InvokeAsync("GetTemplateType", new object[0], this.GetTemplateTypeOperationCompleted, userState);
        }
        
        private void OnGetTemplateTypeOperationCompleted(object arg) {
            if ((this.GetTemplateTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateTypeCompleted(this, new GetTemplateTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateNoteTemplateEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateNoteTemplateEx(long pk, System.Xml.XmlNode note, string IllType, string IllName, string Creator, string CreateDate, string Sex, string Type, string TypeName, string NoteID, string NoteName, string TemplateName) {
            object[] results = this.Invoke("UpdateNoteTemplateEx", new object[] {
                        pk,
                        note,
                        IllType,
                        IllName,
                        Creator,
                        CreateDate,
                        Sex,
                        Type,
                        TypeName,
                        NoteID,
                        NoteName,
                        TemplateName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateNoteTemplateExAsync(long pk, System.Xml.XmlNode note, string IllType, string IllName, string Creator, string CreateDate, string Sex, string Type, string TypeName, string NoteID, string NoteName, string TemplateName) {
            this.UpdateNoteTemplateExAsync(pk, note, IllType, IllName, Creator, CreateDate, Sex, Type, TypeName, NoteID, NoteName, TemplateName, null);
        }
        
        /// <remarks/>
        public void UpdateNoteTemplateExAsync(long pk, System.Xml.XmlNode note, string IllType, string IllName, string Creator, string CreateDate, string Sex, string Type, string TypeName, string NoteID, string NoteName, string TemplateName, object userState) {
            if ((this.UpdateNoteTemplateExOperationCompleted == null)) {
                this.UpdateNoteTemplateExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNoteTemplateExOperationCompleted);
            }
            this.InvokeAsync("UpdateNoteTemplateEx", new object[] {
                        pk,
                        note,
                        IllType,
                        IllName,
                        Creator,
                        CreateDate,
                        Sex,
                        Type,
                        TypeName,
                        NoteID,
                        NoteName,
                        TemplateName}, this.UpdateNoteTemplateExOperationCompleted, userState);
        }
        
        private void OnUpdateNoteTemplateExOperationCompleted(object arg) {
            if ((this.UpdateNoteTemplateExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNoteTemplateExCompleted(this, new UpdateNoteTemplateExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateNoteTemplateExZlg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateNoteTemplateExZlg(long pk, System.Xml.XmlNode note, string IllType, string IllName, string Creator, string CreateDate, string Sex, string Type, string TypeName, string NoteID, string NoteName, string TemplateName) {
            object[] results = this.Invoke("UpdateNoteTemplateExZlg", new object[] {
                        pk,
                        note,
                        IllType,
                        IllName,
                        Creator,
                        CreateDate,
                        Sex,
                        Type,
                        TypeName,
                        NoteID,
                        NoteName,
                        TemplateName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateNoteTemplateExZlgAsync(long pk, System.Xml.XmlNode note, string IllType, string IllName, string Creator, string CreateDate, string Sex, string Type, string TypeName, string NoteID, string NoteName, string TemplateName) {
            this.UpdateNoteTemplateExZlgAsync(pk, note, IllType, IllName, Creator, CreateDate, Sex, Type, TypeName, NoteID, NoteName, TemplateName, null);
        }
        
        /// <remarks/>
        public void UpdateNoteTemplateExZlgAsync(long pk, System.Xml.XmlNode note, string IllType, string IllName, string Creator, string CreateDate, string Sex, string Type, string TypeName, string NoteID, string NoteName, string TemplateName, object userState) {
            if ((this.UpdateNoteTemplateExZlgOperationCompleted == null)) {
                this.UpdateNoteTemplateExZlgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNoteTemplateExZlgOperationCompleted);
            }
            this.InvokeAsync("UpdateNoteTemplateExZlg", new object[] {
                        pk,
                        note,
                        IllType,
                        IllName,
                        Creator,
                        CreateDate,
                        Sex,
                        Type,
                        TypeName,
                        NoteID,
                        NoteName,
                        TemplateName}, this.UpdateNoteTemplateExZlgOperationCompleted, userState);
        }
        
        private void OnUpdateNoteTemplateExZlgOperationCompleted(object arg) {
            if ((this.UpdateNoteTemplateExZlgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNoteTemplateExZlgCompleted(this, new UpdateNoteTemplateExZlgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/InSertNoteTemplateEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long InSertNoteTemplateEx(System.Xml.XmlNode note, string DoctorID, string DepartmentCode, string IllType, string IllName, string Creator, string CreateDate, string Sex, string Type, string TypeName, string NoteID, string NoteName, string TemplateName) {
            object[] results = this.Invoke("InSertNoteTemplateEx", new object[] {
                        note,
                        DoctorID,
                        DepartmentCode,
                        IllType,
                        IllName,
                        Creator,
                        CreateDate,
                        Sex,
                        Type,
                        TypeName,
                        NoteID,
                        NoteName,
                        TemplateName});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void InSertNoteTemplateExAsync(System.Xml.XmlNode note, string DoctorID, string DepartmentCode, string IllType, string IllName, string Creator, string CreateDate, string Sex, string Type, string TypeName, string NoteID, string NoteName, string TemplateName) {
            this.InSertNoteTemplateExAsync(note, DoctorID, DepartmentCode, IllType, IllName, Creator, CreateDate, Sex, Type, TypeName, NoteID, NoteName, TemplateName, null);
        }
        
        /// <remarks/>
        public void InSertNoteTemplateExAsync(System.Xml.XmlNode note, string DoctorID, string DepartmentCode, string IllType, string IllName, string Creator, string CreateDate, string Sex, string Type, string TypeName, string NoteID, string NoteName, string TemplateName, object userState) {
            if ((this.InSertNoteTemplateExOperationCompleted == null)) {
                this.InSertNoteTemplateExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInSertNoteTemplateExOperationCompleted);
            }
            this.InvokeAsync("InSertNoteTemplateEx", new object[] {
                        note,
                        DoctorID,
                        DepartmentCode,
                        IllType,
                        IllName,
                        Creator,
                        CreateDate,
                        Sex,
                        Type,
                        TypeName,
                        NoteID,
                        NoteName,
                        TemplateName}, this.InSertNoteTemplateExOperationCompleted, userState);
        }
        
        private void OnInSertNoteTemplateExOperationCompleted(object arg) {
            if ((this.InSertNoteTemplateExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InSertNoteTemplateExCompleted(this, new InSertNoteTemplateExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/InSertNoteTemplateExZlg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long InSertNoteTemplateExZlg(System.Xml.XmlNode note, string DoctorID, string DepartmentCode, string IllType, string IllName, string Creator, string CreateDate, string Sex, string Type, string TypeName, string NoteID, string NoteName, string TemplateName) {
            object[] results = this.Invoke("InSertNoteTemplateExZlg", new object[] {
                        note,
                        DoctorID,
                        DepartmentCode,
                        IllType,
                        IllName,
                        Creator,
                        CreateDate,
                        Sex,
                        Type,
                        TypeName,
                        NoteID,
                        NoteName,
                        TemplateName});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void InSertNoteTemplateExZlgAsync(System.Xml.XmlNode note, string DoctorID, string DepartmentCode, string IllType, string IllName, string Creator, string CreateDate, string Sex, string Type, string TypeName, string NoteID, string NoteName, string TemplateName) {
            this.InSertNoteTemplateExZlgAsync(note, DoctorID, DepartmentCode, IllType, IllName, Creator, CreateDate, Sex, Type, TypeName, NoteID, NoteName, TemplateName, null);
        }
        
        /// <remarks/>
        public void InSertNoteTemplateExZlgAsync(System.Xml.XmlNode note, string DoctorID, string DepartmentCode, string IllType, string IllName, string Creator, string CreateDate, string Sex, string Type, string TypeName, string NoteID, string NoteName, string TemplateName, object userState) {
            if ((this.InSertNoteTemplateExZlgOperationCompleted == null)) {
                this.InSertNoteTemplateExZlgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInSertNoteTemplateExZlgOperationCompleted);
            }
            this.InvokeAsync("InSertNoteTemplateExZlg", new object[] {
                        note,
                        DoctorID,
                        DepartmentCode,
                        IllType,
                        IllName,
                        Creator,
                        CreateDate,
                        Sex,
                        Type,
                        TypeName,
                        NoteID,
                        NoteName,
                        TemplateName}, this.InSertNoteTemplateExZlgOperationCompleted, userState);
        }
        
        private void OnInSertNoteTemplateExZlgOperationCompleted(object arg) {
            if ((this.InSertNoteTemplateExZlgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InSertNoteTemplateExZlgCompleted(this, new InSertNoteTemplateExZlgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/InsertIll", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertIll(string IllID, string IllName, string DepartmentCode, int Flag) {
            object[] results = this.Invoke("InsertIll", new object[] {
                        IllID,
                        IllName,
                        DepartmentCode,
                        Flag});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertIllAsync(string IllID, string IllName, string DepartmentCode, int Flag) {
            this.InsertIllAsync(IllID, IllName, DepartmentCode, Flag, null);
        }
        
        /// <remarks/>
        public void InsertIllAsync(string IllID, string IllName, string DepartmentCode, int Flag, object userState) {
            if ((this.InsertIllOperationCompleted == null)) {
                this.InsertIllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertIllOperationCompleted);
            }
            this.InvokeAsync("InsertIll", new object[] {
                        IllID,
                        IllName,
                        DepartmentCode,
                        Flag}, this.InsertIllOperationCompleted, userState);
        }
        
        private void OnInsertIllOperationCompleted(object arg) {
            if ((this.InsertIllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertIllCompleted(this, new InsertIllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetHospitalTemplatePkz", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetHospitalTemplatePkz(int i, string illname, string notename) {
            object[] results = this.Invoke("GetHospitalTemplatePkz", new object[] {
                        i,
                        illname,
                        notename});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetHospitalTemplatePkzAsync(int i, string illname, string notename) {
            this.GetHospitalTemplatePkzAsync(i, illname, notename, null);
        }
        
        /// <remarks/>
        public void GetHospitalTemplatePkzAsync(int i, string illname, string notename, object userState) {
            if ((this.GetHospitalTemplatePkzOperationCompleted == null)) {
                this.GetHospitalTemplatePkzOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHospitalTemplatePkzOperationCompleted);
            }
            this.InvokeAsync("GetHospitalTemplatePkz", new object[] {
                        i,
                        illname,
                        notename}, this.GetHospitalTemplatePkzOperationCompleted, userState);
        }
        
        private void OnGetHospitalTemplatePkzOperationCompleted(object arg) {
            if ((this.GetHospitalTemplatePkzCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHospitalTemplatePkzCompleted(this, new GetHospitalTemplatePkzCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetHospitalTemplatePkzZlg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetHospitalTemplatePkzZlg(int i, string illname, string notename) {
            object[] results = this.Invoke("GetHospitalTemplatePkzZlg", new object[] {
                        i,
                        illname,
                        notename});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetHospitalTemplatePkzZlgAsync(int i, string illname, string notename) {
            this.GetHospitalTemplatePkzZlgAsync(i, illname, notename, null);
        }
        
        /// <remarks/>
        public void GetHospitalTemplatePkzZlgAsync(int i, string illname, string notename, object userState) {
            if ((this.GetHospitalTemplatePkzZlgOperationCompleted == null)) {
                this.GetHospitalTemplatePkzZlgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHospitalTemplatePkzZlgOperationCompleted);
            }
            this.InvokeAsync("GetHospitalTemplatePkzZlg", new object[] {
                        i,
                        illname,
                        notename}, this.GetHospitalTemplatePkzZlgOperationCompleted, userState);
        }
        
        private void OnGetHospitalTemplatePkzZlgOperationCompleted(object arg) {
            if ((this.GetHospitalTemplatePkzZlgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHospitalTemplatePkzZlgCompleted(this, new GetHospitalTemplatePkzZlgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetDepartTemplatePkz", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDepartTemplatePkz(int i, string departCode, string illname, string notename) {
            object[] results = this.Invoke("GetDepartTemplatePkz", new object[] {
                        i,
                        departCode,
                        illname,
                        notename});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartTemplatePkzAsync(int i, string departCode, string illname, string notename) {
            this.GetDepartTemplatePkzAsync(i, departCode, illname, notename, null);
        }
        
        /// <remarks/>
        public void GetDepartTemplatePkzAsync(int i, string departCode, string illname, string notename, object userState) {
            if ((this.GetDepartTemplatePkzOperationCompleted == null)) {
                this.GetDepartTemplatePkzOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartTemplatePkzOperationCompleted);
            }
            this.InvokeAsync("GetDepartTemplatePkz", new object[] {
                        i,
                        departCode,
                        illname,
                        notename}, this.GetDepartTemplatePkzOperationCompleted, userState);
        }
        
        private void OnGetDepartTemplatePkzOperationCompleted(object arg) {
            if ((this.GetDepartTemplatePkzCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartTemplatePkzCompleted(this, new GetDepartTemplatePkzCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetDepartTemplatePkzZlg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDepartTemplatePkzZlg(int i, string departCode, string illname, string notename) {
            object[] results = this.Invoke("GetDepartTemplatePkzZlg", new object[] {
                        i,
                        departCode,
                        illname,
                        notename});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartTemplatePkzZlgAsync(int i, string departCode, string illname, string notename) {
            this.GetDepartTemplatePkzZlgAsync(i, departCode, illname, notename, null);
        }
        
        /// <remarks/>
        public void GetDepartTemplatePkzZlgAsync(int i, string departCode, string illname, string notename, object userState) {
            if ((this.GetDepartTemplatePkzZlgOperationCompleted == null)) {
                this.GetDepartTemplatePkzZlgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartTemplatePkzZlgOperationCompleted);
            }
            this.InvokeAsync("GetDepartTemplatePkzZlg", new object[] {
                        i,
                        departCode,
                        illname,
                        notename}, this.GetDepartTemplatePkzZlgOperationCompleted, userState);
        }
        
        private void OnGetDepartTemplatePkzZlgOperationCompleted(object arg) {
            if ((this.GetDepartTemplatePkzZlgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartTemplatePkzZlgCompleted(this, new GetDepartTemplatePkzZlgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetPersonTemplatePkz", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPersonTemplatePkz(int i, string doctorID, string illname, string notename) {
            object[] results = this.Invoke("GetPersonTemplatePkz", new object[] {
                        i,
                        doctorID,
                        illname,
                        notename});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonTemplatePkzAsync(int i, string doctorID, string illname, string notename) {
            this.GetPersonTemplatePkzAsync(i, doctorID, illname, notename, null);
        }
        
        /// <remarks/>
        public void GetPersonTemplatePkzAsync(int i, string doctorID, string illname, string notename, object userState) {
            if ((this.GetPersonTemplatePkzOperationCompleted == null)) {
                this.GetPersonTemplatePkzOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonTemplatePkzOperationCompleted);
            }
            this.InvokeAsync("GetPersonTemplatePkz", new object[] {
                        i,
                        doctorID,
                        illname,
                        notename}, this.GetPersonTemplatePkzOperationCompleted, userState);
        }
        
        private void OnGetPersonTemplatePkzOperationCompleted(object arg) {
            if ((this.GetPersonTemplatePkzCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonTemplatePkzCompleted(this, new GetPersonTemplatePkzCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetPersonTemplatePkzZlg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPersonTemplatePkzZlg(int i, string doctorID, string illname, string notename) {
            object[] results = this.Invoke("GetPersonTemplatePkzZlg", new object[] {
                        i,
                        doctorID,
                        illname,
                        notename});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonTemplatePkzZlgAsync(int i, string doctorID, string illname, string notename) {
            this.GetPersonTemplatePkzZlgAsync(i, doctorID, illname, notename, null);
        }
        
        /// <remarks/>
        public void GetPersonTemplatePkzZlgAsync(int i, string doctorID, string illname, string notename, object userState) {
            if ((this.GetPersonTemplatePkzZlgOperationCompleted == null)) {
                this.GetPersonTemplatePkzZlgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonTemplatePkzZlgOperationCompleted);
            }
            this.InvokeAsync("GetPersonTemplatePkzZlg", new object[] {
                        i,
                        doctorID,
                        illname,
                        notename}, this.GetPersonTemplatePkzZlgOperationCompleted, userState);
        }
        
        private void OnGetPersonTemplatePkzZlgOperationCompleted(object arg) {
            if ((this.GetPersonTemplatePkzZlgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonTemplatePkzZlgCompleted(this, new GetPersonTemplatePkzZlgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetPicturesNew", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetPicturesNew() {
            object[] results = this.Invoke("GetPicturesNew", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetPicturesNewAsync() {
            this.GetPicturesNewAsync(null);
        }
        
        /// <remarks/>
        public void GetPicturesNewAsync(object userState) {
            if ((this.GetPicturesNewOperationCompleted == null)) {
                this.GetPicturesNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPicturesNewOperationCompleted);
            }
            this.InvokeAsync("GetPicturesNew", new object[0], this.GetPicturesNewOperationCompleted, userState);
        }
        
        private void OnGetPicturesNewOperationCompleted(object arg) {
            if ((this.GetPicturesNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPicturesNewCompleted(this, new GetPicturesNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/DeletePictureNew", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePictureNew(string picName) {
            this.Invoke("DeletePictureNew", new object[] {
                        picName});
        }
        
        /// <remarks/>
        public void DeletePictureNewAsync(string picName) {
            this.DeletePictureNewAsync(picName, null);
        }
        
        /// <remarks/>
        public void DeletePictureNewAsync(string picName, object userState) {
            if ((this.DeletePictureNewOperationCompleted == null)) {
                this.DeletePictureNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePictureNewOperationCompleted);
            }
            this.InvokeAsync("DeletePictureNew", new object[] {
                        picName}, this.DeletePictureNewOperationCompleted, userState);
        }
        
        private void OnDeletePictureNewOperationCompleted(object arg) {
            if ((this.DeletePictureNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePictureNewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetEmrBlockKeysNew", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetEmrBlockKeysNew(ref System.Xml.XmlNode blockKeys) {
            object[] results = this.Invoke("GetEmrBlockKeysNew", new object[] {
                        blockKeys});
            blockKeys = ((System.Xml.XmlNode)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrBlockKeysNewAsync(System.Xml.XmlNode blockKeys) {
            this.GetEmrBlockKeysNewAsync(blockKeys, null);
        }
        
        /// <remarks/>
        public void GetEmrBlockKeysNewAsync(System.Xml.XmlNode blockKeys, object userState) {
            if ((this.GetEmrBlockKeysNewOperationCompleted == null)) {
                this.GetEmrBlockKeysNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrBlockKeysNewOperationCompleted);
            }
            this.InvokeAsync("GetEmrBlockKeysNew", new object[] {
                        blockKeys}, this.GetEmrBlockKeysNewOperationCompleted, userState);
        }
        
        private void OnGetEmrBlockKeysNewOperationCompleted(object arg) {
            if ((this.GetEmrBlockKeysNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrBlockKeysNewCompleted(this, new GetEmrBlockKeysNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/InsertLink", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertLink(string registryID, System.Xml.XmlNode xmlNode, string Lable) {
            this.Invoke("InsertLink", new object[] {
                        registryID,
                        xmlNode,
                        Lable});
        }
        
        /// <remarks/>
        public void InsertLinkAsync(string registryID, System.Xml.XmlNode xmlNode, string Lable) {
            this.InsertLinkAsync(registryID, xmlNode, Lable, null);
        }
        
        /// <remarks/>
        public void InsertLinkAsync(string registryID, System.Xml.XmlNode xmlNode, string Lable, object userState) {
            if ((this.InsertLinkOperationCompleted == null)) {
                this.InsertLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLinkOperationCompleted);
            }
            this.InvokeAsync("InsertLink", new object[] {
                        registryID,
                        xmlNode,
                        Lable}, this.InsertLinkOperationCompleted, userState);
        }
        
        private void OnInsertLinkOperationCompleted(object arg) {
            if ((this.InsertLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLinkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetLink", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLink(string registryID) {
            object[] results = this.Invoke("GetLink", new object[] {
                        registryID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkAsync(string registryID) {
            this.GetLinkAsync(registryID, null);
        }
        
        /// <remarks/>
        public void GetLinkAsync(string registryID, object userState) {
            if ((this.GetLinkOperationCompleted == null)) {
                this.GetLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkOperationCompleted);
            }
            this.InvokeAsync("GetLink", new object[] {
                        registryID}, this.GetLinkOperationCompleted, userState);
        }
        
        private void OnGetLinkOperationCompleted(object arg) {
            if ((this.GetLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkCompleted(this, new GetLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetPageInf", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPageInf(string pagename) {
            object[] results = this.Invoke("GetPageInf", new object[] {
                        pagename});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPageInfAsync(string pagename) {
            this.GetPageInfAsync(pagename, null);
        }
        
        /// <remarks/>
        public void GetPageInfAsync(string pagename, object userState) {
            if ((this.GetPageInfOperationCompleted == null)) {
                this.GetPageInfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPageInfOperationCompleted);
            }
            this.InvokeAsync("GetPageInf", new object[] {
                        pagename}, this.GetPageInfOperationCompleted, userState);
        }
        
        private void OnGetPageInfOperationCompleted(object arg) {
            if ((this.GetPageInfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPageInfCompleted(this, new GetPageInfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdatePageInf", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePageInf(string pagename, float right, float left) {
            this.Invoke("UpdatePageInf", new object[] {
                        pagename,
                        right,
                        left});
        }
        
        /// <remarks/>
        public void UpdatePageInfAsync(string pagename, float right, float left) {
            this.UpdatePageInfAsync(pagename, right, left, null);
        }
        
        /// <remarks/>
        public void UpdatePageInfAsync(string pagename, float right, float left, object userState) {
            if ((this.UpdatePageInfOperationCompleted == null)) {
                this.UpdatePageInfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePageInfOperationCompleted);
            }
            this.InvokeAsync("UpdatePageInf", new object[] {
                        pagename,
                        right,
                        left}, this.UpdatePageInfOperationCompleted, userState);
        }
        
        private void OnUpdatePageInfOperationCompleted(object arg) {
            if ((this.UpdatePageInfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePageInfCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetDoctorListWithPTemplate", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDoctorListWithPTemplate() {
            object[] results = this.Invoke("GetDoctorListWithPTemplate", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDoctorListWithPTemplateAsync() {
            this.GetDoctorListWithPTemplateAsync(null);
        }
        
        /// <remarks/>
        public void GetDoctorListWithPTemplateAsync(object userState) {
            if ((this.GetDoctorListWithPTemplateOperationCompleted == null)) {
                this.GetDoctorListWithPTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoctorListWithPTemplateOperationCompleted);
            }
            this.InvokeAsync("GetDoctorListWithPTemplate", new object[0], this.GetDoctorListWithPTemplateOperationCompleted, userState);
        }
        
        private void OnGetDoctorListWithPTemplateOperationCompleted(object arg) {
            if ((this.GetDoctorListWithPTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoctorListWithPTemplateCompleted(this, new GetDoctorListWithPTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetDoctorListWithPTemplateZlg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDoctorListWithPTemplateZlg() {
            object[] results = this.Invoke("GetDoctorListWithPTemplateZlg", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDoctorListWithPTemplateZlgAsync() {
            this.GetDoctorListWithPTemplateZlgAsync(null);
        }
        
        /// <remarks/>
        public void GetDoctorListWithPTemplateZlgAsync(object userState) {
            if ((this.GetDoctorListWithPTemplateZlgOperationCompleted == null)) {
                this.GetDoctorListWithPTemplateZlgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoctorListWithPTemplateZlgOperationCompleted);
            }
            this.InvokeAsync("GetDoctorListWithPTemplateZlg", new object[0], this.GetDoctorListWithPTemplateZlgOperationCompleted, userState);
        }
        
        private void OnGetDoctorListWithPTemplateZlgOperationCompleted(object arg) {
            if ((this.GetDoctorListWithPTemplateZlgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoctorListWithPTemplateZlgCompleted(this, new GetDoctorListWithPTemplateZlgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetTemplateDetail", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTemplateDetail(string DoctorID) {
            object[] results = this.Invoke("GetTemplateDetail", new object[] {
                        DoctorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateDetailAsync(string DoctorID) {
            this.GetTemplateDetailAsync(DoctorID, null);
        }
        
        /// <remarks/>
        public void GetTemplateDetailAsync(string DoctorID, object userState) {
            if ((this.GetTemplateDetailOperationCompleted == null)) {
                this.GetTemplateDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateDetailOperationCompleted);
            }
            this.InvokeAsync("GetTemplateDetail", new object[] {
                        DoctorID}, this.GetTemplateDetailOperationCompleted, userState);
        }
        
        private void OnGetTemplateDetailOperationCompleted(object arg) {
            if ((this.GetTemplateDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateDetailCompleted(this, new GetTemplateDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetTemplateDetailZlg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTemplateDetailZlg(string DoctorID) {
            object[] results = this.Invoke("GetTemplateDetailZlg", new object[] {
                        DoctorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateDetailZlgAsync(string DoctorID) {
            this.GetTemplateDetailZlgAsync(DoctorID, null);
        }
        
        /// <remarks/>
        public void GetTemplateDetailZlgAsync(string DoctorID, object userState) {
            if ((this.GetTemplateDetailZlgOperationCompleted == null)) {
                this.GetTemplateDetailZlgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateDetailZlgOperationCompleted);
            }
            this.InvokeAsync("GetTemplateDetailZlg", new object[] {
                        DoctorID}, this.GetTemplateDetailZlgOperationCompleted, userState);
        }
        
        private void OnGetTemplateDetailZlgOperationCompleted(object arg) {
            if ((this.GetTemplateDetailZlgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateDetailZlgCompleted(this, new GetTemplateDetailZlgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateTemplatePTag", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateTemplatePTag(string pk, string strDoctor, string strDoctorID) {
            object[] results = this.Invoke("UpdateTemplatePTag", new object[] {
                        pk,
                        strDoctor,
                        strDoctorID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTemplatePTagAsync(string pk, string strDoctor, string strDoctorID) {
            this.UpdateTemplatePTagAsync(pk, strDoctor, strDoctorID, null);
        }
        
        /// <remarks/>
        public void UpdateTemplatePTagAsync(string pk, string strDoctor, string strDoctorID, object userState) {
            if ((this.UpdateTemplatePTagOperationCompleted == null)) {
                this.UpdateTemplatePTagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTemplatePTagOperationCompleted);
            }
            this.InvokeAsync("UpdateTemplatePTag", new object[] {
                        pk,
                        strDoctor,
                        strDoctorID}, this.UpdateTemplatePTagOperationCompleted, userState);
        }
        
        private void OnUpdateTemplatePTagOperationCompleted(object arg) {
            if ((this.UpdateTemplatePTagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTemplatePTagCompleted(this, new UpdateTemplatePTagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateTemplatePTagZlg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateTemplatePTagZlg(string pk, string strDoctor, string strDoctorID) {
            object[] results = this.Invoke("UpdateTemplatePTagZlg", new object[] {
                        pk,
                        strDoctor,
                        strDoctorID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTemplatePTagZlgAsync(string pk, string strDoctor, string strDoctorID) {
            this.UpdateTemplatePTagZlgAsync(pk, strDoctor, strDoctorID, null);
        }
        
        /// <remarks/>
        public void UpdateTemplatePTagZlgAsync(string pk, string strDoctor, string strDoctorID, object userState) {
            if ((this.UpdateTemplatePTagZlgOperationCompleted == null)) {
                this.UpdateTemplatePTagZlgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTemplatePTagZlgOperationCompleted);
            }
            this.InvokeAsync("UpdateTemplatePTagZlg", new object[] {
                        pk,
                        strDoctor,
                        strDoctorID}, this.UpdateTemplatePTagZlgOperationCompleted, userState);
        }
        
        private void OnUpdateTemplatePTagZlgOperationCompleted(object arg) {
            if ((this.UpdateTemplatePTagZlgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTemplatePTagZlgCompleted(this, new UpdateTemplatePTagZlgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/Setfanxiu", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Setfanxiu(string registryID, int series) {
            this.Invoke("Setfanxiu", new object[] {
                        registryID,
                        series});
        }
        
        /// <remarks/>
        public void SetfanxiuAsync(string registryID, int series) {
            this.SetfanxiuAsync(registryID, series, null);
        }
        
        /// <remarks/>
        public void SetfanxiuAsync(string registryID, int series, object userState) {
            if ((this.SetfanxiuOperationCompleted == null)) {
                this.SetfanxiuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetfanxiuOperationCompleted);
            }
            this.InvokeAsync("Setfanxiu", new object[] {
                        registryID,
                        series}, this.SetfanxiuOperationCompleted, userState);
        }
        
        private void OnSetfanxiuOperationCompleted(object arg) {
            if ((this.SetfanxiuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetfanxiuCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/ImpPatternDoc", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ImpPatternDoc(string noteID, System.Xml.XmlNode note) {
            this.Invoke("ImpPatternDoc", new object[] {
                        noteID,
                        note});
        }
        
        /// <remarks/>
        public void ImpPatternDocAsync(string noteID, System.Xml.XmlNode note) {
            this.ImpPatternDocAsync(noteID, note, null);
        }
        
        /// <remarks/>
        public void ImpPatternDocAsync(string noteID, System.Xml.XmlNode note, object userState) {
            if ((this.ImpPatternDocOperationCompleted == null)) {
                this.ImpPatternDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImpPatternDocOperationCompleted);
            }
            this.InvokeAsync("ImpPatternDoc", new object[] {
                        noteID,
                        note}, this.ImpPatternDocOperationCompleted, userState);
        }
        
        private void OnImpPatternDocOperationCompleted(object arg) {
            if ((this.ImpPatternDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImpPatternDocCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/ImpPatternDocZlg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ImpPatternDocZlg(string noteID, System.Xml.XmlNode note) {
            this.Invoke("ImpPatternDocZlg", new object[] {
                        noteID,
                        note});
        }
        
        /// <remarks/>
        public void ImpPatternDocZlgAsync(string noteID, System.Xml.XmlNode note) {
            this.ImpPatternDocZlgAsync(noteID, note, null);
        }
        
        /// <remarks/>
        public void ImpPatternDocZlgAsync(string noteID, System.Xml.XmlNode note, object userState) {
            if ((this.ImpPatternDocZlgOperationCompleted == null)) {
                this.ImpPatternDocZlgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImpPatternDocZlgOperationCompleted);
            }
            this.InvokeAsync("ImpPatternDocZlg", new object[] {
                        noteID,
                        note}, this.ImpPatternDocZlgOperationCompleted, userState);
        }
        
        private void OnImpPatternDocZlgOperationCompleted(object arg) {
            if ((this.ImpPatternDocZlgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImpPatternDocZlgCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/SehPatternDoc", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SehPatternDoc(string noteID) {
            object[] results = this.Invoke("SehPatternDoc", new object[] {
                        noteID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SehPatternDocAsync(string noteID) {
            this.SehPatternDocAsync(noteID, null);
        }
        
        /// <remarks/>
        public void SehPatternDocAsync(string noteID, object userState) {
            if ((this.SehPatternDocOperationCompleted == null)) {
                this.SehPatternDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSehPatternDocOperationCompleted);
            }
            this.InvokeAsync("SehPatternDoc", new object[] {
                        noteID}, this.SehPatternDocOperationCompleted, userState);
        }
        
        private void OnSehPatternDocOperationCompleted(object arg) {
            if ((this.SehPatternDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SehPatternDocCompleted(this, new SehPatternDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/ExpPatternDoc", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ExpPatternDoc() {
            object[] results = this.Invoke("ExpPatternDoc", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExpPatternDocAsync() {
            this.ExpPatternDocAsync(null);
        }
        
        /// <remarks/>
        public void ExpPatternDocAsync(object userState) {
            if ((this.ExpPatternDocOperationCompleted == null)) {
                this.ExpPatternDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExpPatternDocOperationCompleted);
            }
            this.InvokeAsync("ExpPatternDoc", new object[0], this.ExpPatternDocOperationCompleted, userState);
        }
        
        private void OnExpPatternDocOperationCompleted(object arg) {
            if ((this.ExpPatternDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExpPatternDocCompleted(this, new ExpPatternDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/DelPatternDoc", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelPatternDoc(string noteID) {
            this.Invoke("DelPatternDoc", new object[] {
                        noteID});
        }
        
        /// <remarks/>
        public void DelPatternDocAsync(string noteID) {
            this.DelPatternDocAsync(noteID, null);
        }
        
        /// <remarks/>
        public void DelPatternDocAsync(string noteID, object userState) {
            if ((this.DelPatternDocOperationCompleted == null)) {
                this.DelPatternDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelPatternDocOperationCompleted);
            }
            this.InvokeAsync("DelPatternDoc", new object[] {
                        noteID}, this.DelPatternDocOperationCompleted, userState);
        }
        
        private void OnDelPatternDocOperationCompleted(object arg) {
            if ((this.DelPatternDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelPatternDocCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetPatternDoc", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetPatternDoc(string noteID, ref System.Xml.XmlNode note) {
            object[] results = this.Invoke("GetPatternDoc", new object[] {
                        noteID,
                        note});
            note = ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatternDocAsync(string noteID, System.Xml.XmlNode note) {
            this.GetPatternDocAsync(noteID, note, null);
        }
        
        /// <remarks/>
        public void GetPatternDocAsync(string noteID, System.Xml.XmlNode note, object userState) {
            if ((this.GetPatternDocOperationCompleted == null)) {
                this.GetPatternDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatternDocOperationCompleted);
            }
            this.InvokeAsync("GetPatternDoc", new object[] {
                        noteID,
                        note}, this.GetPatternDocOperationCompleted, userState);
        }
        
        private void OnGetPatternDocOperationCompleted(object arg) {
            if ((this.GetPatternDocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatternDocCompleted(this, new GetPatternDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetImageSign", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetImageSign(string opCode) {
            object[] results = this.Invoke("GetImageSign", new object[] {
                        opCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageSignAsync(string opCode) {
            this.GetImageSignAsync(opCode, null);
        }
        
        /// <remarks/>
        public void GetImageSignAsync(string opCode, object userState) {
            if ((this.GetImageSignOperationCompleted == null)) {
                this.GetImageSignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageSignOperationCompleted);
            }
            this.InvokeAsync("GetImageSign", new object[] {
                        opCode}, this.GetImageSignOperationCompleted, userState);
        }
        
        private void OnGetImageSignOperationCompleted(object arg) {
            if ((this.GetImageSignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageSignCompleted(this, new GetImageSignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetIsKeyUser", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetIsKeyUser(string opCode) {
            object[] results = this.Invoke("GetIsKeyUser", new object[] {
                        opCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetIsKeyUserAsync(string opCode) {
            this.GetIsKeyUserAsync(opCode, null);
        }
        
        /// <remarks/>
        public void GetIsKeyUserAsync(string opCode, object userState) {
            if ((this.GetIsKeyUserOperationCompleted == null)) {
                this.GetIsKeyUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIsKeyUserOperationCompleted);
            }
            this.InvokeAsync("GetIsKeyUser", new object[] {
                        opCode}, this.GetIsKeyUserOperationCompleted, userState);
        }
        
        private void OnGetIsKeyUserOperationCompleted(object arg) {
            if ((this.GetIsKeyUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIsKeyUserCompleted(this, new GetIsKeyUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateUpload_Time", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateUpload_Time(string Server_Time, string RegistryID, string NoteIDSeries) {
            object[] results = this.Invoke("UpdateUpload_Time", new object[] {
                        Server_Time,
                        RegistryID,
                        NoteIDSeries});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUpload_TimeAsync(string Server_Time, string RegistryID, string NoteIDSeries) {
            this.UpdateUpload_TimeAsync(Server_Time, RegistryID, NoteIDSeries, null);
        }
        
        /// <remarks/>
        public void UpdateUpload_TimeAsync(string Server_Time, string RegistryID, string NoteIDSeries, object userState) {
            if ((this.UpdateUpload_TimeOperationCompleted == null)) {
                this.UpdateUpload_TimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUpload_TimeOperationCompleted);
            }
            this.InvokeAsync("UpdateUpload_Time", new object[] {
                        Server_Time,
                        RegistryID,
                        NoteIDSeries}, this.UpdateUpload_TimeOperationCompleted, userState);
        }
        
        private void OnUpdateUpload_TimeOperationCompleted(object arg) {
            if ((this.UpdateUpload_TimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUpload_TimeCompleted(this, new UpdateUpload_TimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/test", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string test() {
            object[] results = this.Invoke("test", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void testAsync() {
            this.testAsync(null);
        }
        
        /// <remarks/>
        public void testAsync(object userState) {
            if ((this.testOperationCompleted == null)) {
                this.testOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestOperationCompleted);
            }
            this.InvokeAsync("test", new object[0], this.testOperationCompleted, userState);
        }
        
        private void OntestOperationCompleted(object arg) {
            if ((this.testCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testCompleted(this, new testCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/IsRemberPoint1", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsRemberPoint1(string RegistryID, ref string DocRange) {
            object[] results = this.Invoke("IsRemberPoint1", new object[] {
                        RegistryID,
                        DocRange});
            DocRange = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsRemberPoint1Async(string RegistryID, string DocRange) {
            this.IsRemberPoint1Async(RegistryID, DocRange, null);
        }
        
        /// <remarks/>
        public void IsRemberPoint1Async(string RegistryID, string DocRange, object userState) {
            if ((this.IsRemberPoint1OperationCompleted == null)) {
                this.IsRemberPoint1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsRemberPoint1OperationCompleted);
            }
            this.InvokeAsync("IsRemberPoint1", new object[] {
                        RegistryID,
                        DocRange}, this.IsRemberPoint1OperationCompleted, userState);
        }
        
        private void OnIsRemberPoint1OperationCompleted(object arg) {
            if ((this.IsRemberPoint1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsRemberPoint1Completed(this, new IsRemberPoint1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/IsRemberPoint2", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsRemberPoint2(string RegistryID, ref string DocRange) {
            object[] results = this.Invoke("IsRemberPoint2", new object[] {
                        RegistryID,
                        DocRange});
            DocRange = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsRemberPoint2Async(string RegistryID, string DocRange) {
            this.IsRemberPoint2Async(RegistryID, DocRange, null);
        }
        
        /// <remarks/>
        public void IsRemberPoint2Async(string RegistryID, string DocRange, object userState) {
            if ((this.IsRemberPoint2OperationCompleted == null)) {
                this.IsRemberPoint2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsRemberPoint2OperationCompleted);
            }
            this.InvokeAsync("IsRemberPoint2", new object[] {
                        RegistryID,
                        DocRange}, this.IsRemberPoint2OperationCompleted, userState);
        }
        
        private void OnIsRemberPoint2OperationCompleted(object arg) {
            if ((this.IsRemberPoint2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsRemberPoint2Completed(this, new IsRemberPoint2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/IsRemberPoint", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsRemberPoint(string RegistryID, ref string DocRange) {
            object[] results = this.Invoke("IsRemberPoint", new object[] {
                        RegistryID,
                        DocRange});
            DocRange = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsRemberPointAsync(string RegistryID, string DocRange) {
            this.IsRemberPointAsync(RegistryID, DocRange, null);
        }
        
        /// <remarks/>
        public void IsRemberPointAsync(string RegistryID, string DocRange, object userState) {
            if ((this.IsRemberPointOperationCompleted == null)) {
                this.IsRemberPointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsRemberPointOperationCompleted);
            }
            this.InvokeAsync("IsRemberPoint", new object[] {
                        RegistryID,
                        DocRange}, this.IsRemberPointOperationCompleted, userState);
        }
        
        private void OnIsRemberPointOperationCompleted(object arg) {
            if ((this.IsRemberPointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsRemberPointCompleted(this, new IsRemberPointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/PutRange", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutRange(string RegistryID, string DocRange) {
            this.Invoke("PutRange", new object[] {
                        RegistryID,
                        DocRange});
        }
        
        /// <remarks/>
        public void PutRangeAsync(string RegistryID, string DocRange) {
            this.PutRangeAsync(RegistryID, DocRange, null);
        }
        
        /// <remarks/>
        public void PutRangeAsync(string RegistryID, string DocRange, object userState) {
            if ((this.PutRangeOperationCompleted == null)) {
                this.PutRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutRangeOperationCompleted);
            }
            this.InvokeAsync("PutRange", new object[] {
                        RegistryID,
                        DocRange}, this.PutRangeOperationCompleted, userState);
        }
        
        private void OnPutRangeOperationCompleted(object arg) {
            if ((this.PutRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutRangeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/PutRangex1", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutRangex1(string RegistryID, string DocRange) {
            this.Invoke("PutRangex1", new object[] {
                        RegistryID,
                        DocRange});
        }
        
        /// <remarks/>
        public void PutRangex1Async(string RegistryID, string DocRange) {
            this.PutRangex1Async(RegistryID, DocRange, null);
        }
        
        /// <remarks/>
        public void PutRangex1Async(string RegistryID, string DocRange, object userState) {
            if ((this.PutRangex1OperationCompleted == null)) {
                this.PutRangex1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutRangex1OperationCompleted);
            }
            this.InvokeAsync("PutRangex1", new object[] {
                        RegistryID,
                        DocRange}, this.PutRangex1OperationCompleted, userState);
        }
        
        private void OnPutRangex1OperationCompleted(object arg) {
            if ((this.PutRangex1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutRangex1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/PutRangex2", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutRangex2(string RegistryID, string DocRange) {
            this.Invoke("PutRangex2", new object[] {
                        RegistryID,
                        DocRange});
        }
        
        /// <remarks/>
        public void PutRangex2Async(string RegistryID, string DocRange) {
            this.PutRangex2Async(RegistryID, DocRange, null);
        }
        
        /// <remarks/>
        public void PutRangex2Async(string RegistryID, string DocRange, object userState) {
            if ((this.PutRangex2OperationCompleted == null)) {
                this.PutRangex2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutRangex2OperationCompleted);
            }
            this.InvokeAsync("PutRangex2", new object[] {
                        RegistryID,
                        DocRange}, this.PutRangex2OperationCompleted, userState);
        }
        
        private void OnPutRangex2OperationCompleted(object arg) {
            if ((this.PutRangex2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutRangex2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/PutRangeEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutRangeEx(string RegistryID, System.Xml.XmlNode rule) {
            this.Invoke("PutRangeEx", new object[] {
                        RegistryID,
                        rule});
        }
        
        /// <remarks/>
        public void PutRangeExAsync(string RegistryID, System.Xml.XmlNode rule) {
            this.PutRangeExAsync(RegistryID, rule, null);
        }
        
        /// <remarks/>
        public void PutRangeExAsync(string RegistryID, System.Xml.XmlNode rule, object userState) {
            if ((this.PutRangeExOperationCompleted == null)) {
                this.PutRangeExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutRangeExOperationCompleted);
            }
            this.InvokeAsync("PutRangeEx", new object[] {
                        RegistryID,
                        rule}, this.PutRangeExOperationCompleted, userState);
        }
        
        private void OnPutRangeExOperationCompleted(object arg) {
            if ((this.PutRangeExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutRangeExCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/DeletRange", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletRange(string RegistryID) {
            this.Invoke("DeletRange", new object[] {
                        RegistryID});
        }
        
        /// <remarks/>
        public void DeletRangeAsync(string RegistryID) {
            this.DeletRangeAsync(RegistryID, null);
        }
        
        /// <remarks/>
        public void DeletRangeAsync(string RegistryID, object userState) {
            if ((this.DeletRangeOperationCompleted == null)) {
                this.DeletRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletRangeOperationCompleted);
            }
            this.InvokeAsync("DeletRange", new object[] {
                        RegistryID}, this.DeletRangeOperationCompleted, userState);
        }
        
        private void OnDeletRangeOperationCompleted(object arg) {
            if ((this.DeletRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletRangeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/DeletRangex1", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletRangex1(string RegistryID) {
            this.Invoke("DeletRangex1", new object[] {
                        RegistryID});
        }
        
        /// <remarks/>
        public void DeletRangex1Async(string RegistryID) {
            this.DeletRangex1Async(RegistryID, null);
        }
        
        /// <remarks/>
        public void DeletRangex1Async(string RegistryID, object userState) {
            if ((this.DeletRangex1OperationCompleted == null)) {
                this.DeletRangex1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletRangex1OperationCompleted);
            }
            this.InvokeAsync("DeletRangex1", new object[] {
                        RegistryID}, this.DeletRangex1OperationCompleted, userState);
        }
        
        private void OnDeletRangex1OperationCompleted(object arg) {
            if ((this.DeletRangex1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletRangex1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/DeletRangex2", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletRangex2(string RegistryID) {
            this.Invoke("DeletRangex2", new object[] {
                        RegistryID});
        }
        
        /// <remarks/>
        public void DeletRangex2Async(string RegistryID) {
            this.DeletRangex2Async(RegistryID, null);
        }
        
        /// <remarks/>
        public void DeletRangex2Async(string RegistryID, object userState) {
            if ((this.DeletRangex2OperationCompleted == null)) {
                this.DeletRangex2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletRangex2OperationCompleted);
            }
            this.InvokeAsync("DeletRangex2", new object[] {
                        RegistryID}, this.DeletRangex2OperationCompleted, userState);
        }
        
        private void OnDeletRangex2OperationCompleted(object arg) {
            if ((this.DeletRangex2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletRangex2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetNotetemp", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNotetemp() {
            object[] results = this.Invoke("GetNotetemp", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNotetempAsync() {
            this.GetNotetempAsync(null);
        }
        
        /// <remarks/>
        public void GetNotetempAsync(object userState) {
            if ((this.GetNotetempOperationCompleted == null)) {
                this.GetNotetempOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNotetempOperationCompleted);
            }
            this.InvokeAsync("GetNotetemp", new object[0], this.GetNotetempOperationCompleted, userState);
        }
        
        private void OnGetNotetempOperationCompleted(object arg) {
            if ((this.GetNotetempCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNotetempCompleted(this, new GetNotetempCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetPatternType", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPatternType() {
            object[] results = this.Invoke("GetPatternType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatternTypeAsync() {
            this.GetPatternTypeAsync(null);
        }
        
        /// <remarks/>
        public void GetPatternTypeAsync(object userState) {
            if ((this.GetPatternTypeOperationCompleted == null)) {
                this.GetPatternTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatternTypeOperationCompleted);
            }
            this.InvokeAsync("GetPatternType", new object[0], this.GetPatternTypeOperationCompleted, userState);
        }
        
        private void OnGetPatternTypeOperationCompleted(object arg) {
            if ((this.GetPatternTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatternTypeCompleted(this, new GetPatternTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetPatternItemsByType", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPatternItemsByType(string TypeID) {
            object[] results = this.Invoke("GetPatternItemsByType", new object[] {
                        TypeID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatternItemsByTypeAsync(string TypeID) {
            this.GetPatternItemsByTypeAsync(TypeID, null);
        }
        
        /// <remarks/>
        public void GetPatternItemsByTypeAsync(string TypeID, object userState) {
            if ((this.GetPatternItemsByTypeOperationCompleted == null)) {
                this.GetPatternItemsByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatternItemsByTypeOperationCompleted);
            }
            this.InvokeAsync("GetPatternItemsByType", new object[] {
                        TypeID}, this.GetPatternItemsByTypeOperationCompleted, userState);
        }
        
        private void OnGetPatternItemsByTypeOperationCompleted(object arg) {
            if ((this.GetPatternItemsByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatternItemsByTypeCompleted(this, new GetPatternItemsByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetPatternTypes", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPatternTypes() {
            object[] results = this.Invoke("GetPatternTypes", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatternTypesAsync() {
            this.GetPatternTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetPatternTypesAsync(object userState) {
            if ((this.GetPatternTypesOperationCompleted == null)) {
                this.GetPatternTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatternTypesOperationCompleted);
            }
            this.InvokeAsync("GetPatternTypes", new object[0], this.GetPatternTypesOperationCompleted, userState);
        }
        
        private void OnGetPatternTypesOperationCompleted(object arg) {
            if ((this.GetPatternTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatternTypesCompleted(this, new GetPatternTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdatePatternType", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePatternType(string ItemID, string ItemName, string TypeID, string TypeName, string DepartmentID, string DepartmentName) {
            object[] results = this.Invoke("UpdatePatternType", new object[] {
                        ItemID,
                        ItemName,
                        TypeID,
                        TypeName,
                        DepartmentID,
                        DepartmentName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePatternTypeAsync(string ItemID, string ItemName, string TypeID, string TypeName, string DepartmentID, string DepartmentName) {
            this.UpdatePatternTypeAsync(ItemID, ItemName, TypeID, TypeName, DepartmentID, DepartmentName, null);
        }
        
        /// <remarks/>
        public void UpdatePatternTypeAsync(string ItemID, string ItemName, string TypeID, string TypeName, string DepartmentID, string DepartmentName, object userState) {
            if ((this.UpdatePatternTypeOperationCompleted == null)) {
                this.UpdatePatternTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePatternTypeOperationCompleted);
            }
            this.InvokeAsync("UpdatePatternType", new object[] {
                        ItemID,
                        ItemName,
                        TypeID,
                        TypeName,
                        DepartmentID,
                        DepartmentName}, this.UpdatePatternTypeOperationCompleted, userState);
        }
        
        private void OnUpdatePatternTypeOperationCompleted(object arg) {
            if ((this.UpdatePatternTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePatternTypeCompleted(this, new UpdatePatternTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetAllNoteNames", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllNoteNames() {
            object[] results = this.Invoke("GetAllNoteNames", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllNoteNamesAsync() {
            this.GetAllNoteNamesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllNoteNamesAsync(object userState) {
            if ((this.GetAllNoteNamesOperationCompleted == null)) {
                this.GetAllNoteNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllNoteNamesOperationCompleted);
            }
            this.InvokeAsync("GetAllNoteNames", new object[0], this.GetAllNoteNamesOperationCompleted, userState);
        }
        
        private void OnGetAllNoteNamesOperationCompleted(object arg) {
            if ((this.GetAllNoteNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllNoteNamesCompleted(this, new GetAllNoteNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/SetGrade", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetGrade(string registryID) {
            this.Invoke("SetGrade", new object[] {
                        registryID});
        }
        
        /// <remarks/>
        public void SetGradeAsync(string registryID) {
            this.SetGradeAsync(registryID, null);
        }
        
        /// <remarks/>
        public void SetGradeAsync(string registryID, object userState) {
            if ((this.SetGradeOperationCompleted == null)) {
                this.SetGradeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGradeOperationCompleted);
            }
            this.InvokeAsync("SetGrade", new object[] {
                        registryID}, this.SetGradeOperationCompleted, userState);
        }
        
        private void OnSetGradeOperationCompleted(object arg) {
            if ((this.SetGradeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetGradeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/IsValuate", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int IsValuate(string registryID) {
            object[] results = this.Invoke("IsValuate", new object[] {
                        registryID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void IsValuateAsync(string registryID) {
            this.IsValuateAsync(registryID, null);
        }
        
        /// <remarks/>
        public void IsValuateAsync(string registryID, object userState) {
            if ((this.IsValuateOperationCompleted == null)) {
                this.IsValuateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValuateOperationCompleted);
            }
            this.InvokeAsync("IsValuate", new object[] {
                        registryID}, this.IsValuateOperationCompleted, userState);
        }
        
        private void OnIsValuateOperationCompleted(object arg) {
            if ((this.IsValuateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValuateCompleted(this, new IsValuateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetNotesWithFilingSetup", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNotesWithFilingSetup(string RegistryID, ref System.Data.DataSet rules) {
            object[] results = this.Invoke("GetNotesWithFilingSetup", new object[] {
                        RegistryID,
                        rules});
            rules = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNotesWithFilingSetupAsync(string RegistryID, System.Data.DataSet rules) {
            this.GetNotesWithFilingSetupAsync(RegistryID, rules, null);
        }
        
        /// <remarks/>
        public void GetNotesWithFilingSetupAsync(string RegistryID, System.Data.DataSet rules, object userState) {
            if ((this.GetNotesWithFilingSetupOperationCompleted == null)) {
                this.GetNotesWithFilingSetupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNotesWithFilingSetupOperationCompleted);
            }
            this.InvokeAsync("GetNotesWithFilingSetup", new object[] {
                        RegistryID,
                        rules}, this.GetNotesWithFilingSetupOperationCompleted, userState);
        }
        
        private void OnGetNotesWithFilingSetupOperationCompleted(object arg) {
            if ((this.GetNotesWithFilingSetupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNotesWithFilingSetupCompleted(this, new GetNotesWithFilingSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/RemoveNoteWithFilingSetup", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RemoveNoteWithFilingSetup(string RegistryID, string NoteID) {
            object[] results = this.Invoke("RemoveNoteWithFilingSetup", new object[] {
                        RegistryID,
                        NoteID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveNoteWithFilingSetupAsync(string RegistryID, string NoteID) {
            this.RemoveNoteWithFilingSetupAsync(RegistryID, NoteID, null);
        }
        
        /// <remarks/>
        public void RemoveNoteWithFilingSetupAsync(string RegistryID, string NoteID, object userState) {
            if ((this.RemoveNoteWithFilingSetupOperationCompleted == null)) {
                this.RemoveNoteWithFilingSetupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveNoteWithFilingSetupOperationCompleted);
            }
            this.InvokeAsync("RemoveNoteWithFilingSetup", new object[] {
                        RegistryID,
                        NoteID}, this.RemoveNoteWithFilingSetupOperationCompleted, userState);
        }
        
        private void OnRemoveNoteWithFilingSetupOperationCompleted(object arg) {
            if ((this.RemoveNoteWithFilingSetupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveNoteWithFilingSetupCompleted(this, new RemoveNoteWithFilingSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetFilingSetupfromDepartment", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFilingSetupfromDepartment(string RegistryID, string DepartmentID) {
            object[] results = this.Invoke("GetFilingSetupfromDepartment", new object[] {
                        RegistryID,
                        DepartmentID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFilingSetupfromDepartmentAsync(string RegistryID, string DepartmentID) {
            this.GetFilingSetupfromDepartmentAsync(RegistryID, DepartmentID, null);
        }
        
        /// <remarks/>
        public void GetFilingSetupfromDepartmentAsync(string RegistryID, string DepartmentID, object userState) {
            if ((this.GetFilingSetupfromDepartmentOperationCompleted == null)) {
                this.GetFilingSetupfromDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilingSetupfromDepartmentOperationCompleted);
            }
            this.InvokeAsync("GetFilingSetupfromDepartment", new object[] {
                        RegistryID,
                        DepartmentID}, this.GetFilingSetupfromDepartmentOperationCompleted, userState);
        }
        
        private void OnGetFilingSetupfromDepartmentOperationCompleted(object arg) {
            if ((this.GetFilingSetupfromDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilingSetupfromDepartmentCompleted(this, new GetFilingSetupfromDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/NewFilingSetup", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewFilingSetup(string RegistryID, string noteID, System.Xml.XmlNode rules, string operatorID) {
            object[] results = this.Invoke("NewFilingSetup", new object[] {
                        RegistryID,
                        noteID,
                        rules,
                        operatorID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewFilingSetupAsync(string RegistryID, string noteID, System.Xml.XmlNode rules, string operatorID) {
            this.NewFilingSetupAsync(RegistryID, noteID, rules, operatorID, null);
        }
        
        /// <remarks/>
        public void NewFilingSetupAsync(string RegistryID, string noteID, System.Xml.XmlNode rules, string operatorID, object userState) {
            if ((this.NewFilingSetupOperationCompleted == null)) {
                this.NewFilingSetupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewFilingSetupOperationCompleted);
            }
            this.InvokeAsync("NewFilingSetup", new object[] {
                        RegistryID,
                        noteID,
                        rules,
                        operatorID}, this.NewFilingSetupOperationCompleted, userState);
        }
        
        private void OnNewFilingSetupOperationCompleted(object arg) {
            if ((this.NewFilingSetupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewFilingSetupCompleted(this, new NewFilingSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetNoteStatusWithArchive", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNoteStatusWithArchive(string RegistryID) {
            object[] results = this.Invoke("GetNoteStatusWithArchive", new object[] {
                        RegistryID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNoteStatusWithArchiveAsync(string RegistryID) {
            this.GetNoteStatusWithArchiveAsync(RegistryID, null);
        }
        
        /// <remarks/>
        public void GetNoteStatusWithArchiveAsync(string RegistryID, object userState) {
            if ((this.GetNoteStatusWithArchiveOperationCompleted == null)) {
                this.GetNoteStatusWithArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNoteStatusWithArchiveOperationCompleted);
            }
            this.InvokeAsync("GetNoteStatusWithArchive", new object[] {
                        RegistryID}, this.GetNoteStatusWithArchiveOperationCompleted, userState);
        }
        
        private void OnGetNoteStatusWithArchiveOperationCompleted(object arg) {
            if ((this.GetNoteStatusWithArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNoteStatusWithArchiveCompleted(this, new GetNoteStatusWithArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetNoteIDWithArchive", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNoteIDWithArchive(string RegistryID, string NoteID, ref System.Data.DataSet rules) {
            object[] results = this.Invoke("GetNoteIDWithArchive", new object[] {
                        RegistryID,
                        NoteID,
                        rules});
            rules = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNoteIDWithArchiveAsync(string RegistryID, string NoteID, System.Data.DataSet rules) {
            this.GetNoteIDWithArchiveAsync(RegistryID, NoteID, rules, null);
        }
        
        /// <remarks/>
        public void GetNoteIDWithArchiveAsync(string RegistryID, string NoteID, System.Data.DataSet rules, object userState) {
            if ((this.GetNoteIDWithArchiveOperationCompleted == null)) {
                this.GetNoteIDWithArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNoteIDWithArchiveOperationCompleted);
            }
            this.InvokeAsync("GetNoteIDWithArchive", new object[] {
                        RegistryID,
                        NoteID,
                        rules}, this.GetNoteIDWithArchiveOperationCompleted, userState);
        }
        
        private void OnGetNoteIDWithArchiveOperationCompleted(object arg) {
            if ((this.GetNoteIDWithArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNoteIDWithArchiveCompleted(this, new GetNoteIDWithArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetRegistryIDsWithRedLight", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetRegistryIDsWithRedLight() {
            object[] results = this.Invoke("GetRegistryIDsWithRedLight", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegistryIDsWithRedLightAsync() {
            this.GetRegistryIDsWithRedLightAsync(null);
        }
        
        /// <remarks/>
        public void GetRegistryIDsWithRedLightAsync(object userState) {
            if ((this.GetRegistryIDsWithRedLightOperationCompleted == null)) {
                this.GetRegistryIDsWithRedLightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegistryIDsWithRedLightOperationCompleted);
            }
            this.InvokeAsync("GetRegistryIDsWithRedLight", new object[0], this.GetRegistryIDsWithRedLightOperationCompleted, userState);
        }
        
        private void OnGetRegistryIDsWithRedLightOperationCompleted(object arg) {
            if ((this.GetRegistryIDsWithRedLightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegistryIDsWithRedLightCompleted(this, new GetRegistryIDsWithRedLightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/NewPrintRequisition", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewPrintRequisition(string registryID, string noteIDSeries, string department, string opcode, string noteName, string patientName, string archiveNum) {
            object[] results = this.Invoke("NewPrintRequisition", new object[] {
                        registryID,
                        noteIDSeries,
                        department,
                        opcode,
                        noteName,
                        patientName,
                        archiveNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewPrintRequisitionAsync(string registryID, string noteIDSeries, string department, string opcode, string noteName, string patientName, string archiveNum) {
            this.NewPrintRequisitionAsync(registryID, noteIDSeries, department, opcode, noteName, patientName, archiveNum, null);
        }
        
        /// <remarks/>
        public void NewPrintRequisitionAsync(string registryID, string noteIDSeries, string department, string opcode, string noteName, string patientName, string archiveNum, object userState) {
            if ((this.NewPrintRequisitionOperationCompleted == null)) {
                this.NewPrintRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewPrintRequisitionOperationCompleted);
            }
            this.InvokeAsync("NewPrintRequisition", new object[] {
                        registryID,
                        noteIDSeries,
                        department,
                        opcode,
                        noteName,
                        patientName,
                        archiveNum}, this.NewPrintRequisitionOperationCompleted, userState);
        }
        
        private void OnNewPrintRequisitionOperationCompleted(object arg) {
            if ((this.NewPrintRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewPrintRequisitionCompleted(this, new NewPrintRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetPrintRequisitions", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPrintRequisitions(System.DateTime from, System.DateTime to, bool hasPrinted, ref System.Xml.XmlNode requisitios) {
            object[] results = this.Invoke("GetPrintRequisitions", new object[] {
                        from,
                        to,
                        hasPrinted,
                        requisitios});
            requisitios = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrintRequisitionsAsync(System.DateTime from, System.DateTime to, bool hasPrinted, System.Xml.XmlNode requisitios) {
            this.GetPrintRequisitionsAsync(from, to, hasPrinted, requisitios, null);
        }
        
        /// <remarks/>
        public void GetPrintRequisitionsAsync(System.DateTime from, System.DateTime to, bool hasPrinted, System.Xml.XmlNode requisitios, object userState) {
            if ((this.GetPrintRequisitionsOperationCompleted == null)) {
                this.GetPrintRequisitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrintRequisitionsOperationCompleted);
            }
            this.InvokeAsync("GetPrintRequisitions", new object[] {
                        from,
                        to,
                        hasPrinted,
                        requisitios}, this.GetPrintRequisitionsOperationCompleted, userState);
        }
        
        private void OnGetPrintRequisitionsOperationCompleted(object arg) {
            if ((this.GetPrintRequisitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrintRequisitionsCompleted(this, new GetPrintRequisitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/SetPrinted", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetPrinted(string registryID, string noteIDSeries) {
            object[] results = this.Invoke("SetPrinted", new object[] {
                        registryID,
                        noteIDSeries});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetPrintedAsync(string registryID, string noteIDSeries) {
            this.SetPrintedAsync(registryID, noteIDSeries, null);
        }
        
        /// <remarks/>
        public void SetPrintedAsync(string registryID, string noteIDSeries, object userState) {
            if ((this.SetPrintedOperationCompleted == null)) {
                this.SetPrintedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPrintedOperationCompleted);
            }
            this.InvokeAsync("SetPrinted", new object[] {
                        registryID,
                        noteIDSeries}, this.SetPrintedOperationCompleted, userState);
        }
        
        private void OnSetPrintedOperationCompleted(object arg) {
            if ((this.SetPrintedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPrintedCompleted(this, new SetPrintedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetPrintedState", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPrintedState(string registryID, string noteIDSeries, ref string printed) {
            object[] results = this.Invoke("GetPrintedState", new object[] {
                        registryID,
                        noteIDSeries,
                        printed});
            printed = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrintedStateAsync(string registryID, string noteIDSeries, string printed) {
            this.GetPrintedStateAsync(registryID, noteIDSeries, printed, null);
        }
        
        /// <remarks/>
        public void GetPrintedStateAsync(string registryID, string noteIDSeries, string printed, object userState) {
            if ((this.GetPrintedStateOperationCompleted == null)) {
                this.GetPrintedStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrintedStateOperationCompleted);
            }
            this.InvokeAsync("GetPrintedState", new object[] {
                        registryID,
                        noteIDSeries,
                        printed}, this.GetPrintedStateOperationCompleted, userState);
        }
        
        private void OnGetPrintedStateOperationCompleted(object arg) {
            if ((this.GetPrintedStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrintedStateCompleted(this, new GetPrintedStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/CountNotePrinting", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CountNotePrinting(System.Xml.XmlNode printInfo) {
            object[] results = this.Invoke("CountNotePrinting", new object[] {
                        printInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CountNotePrintingAsync(System.Xml.XmlNode printInfo) {
            this.CountNotePrintingAsync(printInfo, null);
        }
        
        /// <remarks/>
        public void CountNotePrintingAsync(System.Xml.XmlNode printInfo, object userState) {
            if ((this.CountNotePrintingOperationCompleted == null)) {
                this.CountNotePrintingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountNotePrintingOperationCompleted);
            }
            this.InvokeAsync("CountNotePrinting", new object[] {
                        printInfo}, this.CountNotePrintingOperationCompleted, userState);
        }
        
        private void OnCountNotePrintingOperationCompleted(object arg) {
            if ((this.CountNotePrintingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountNotePrintingCompleted(this, new CountNotePrintingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetNotePrinting", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNotePrinting(int printCount, ref System.Xml.XmlNode printInfo) {
            object[] results = this.Invoke("GetNotePrinting", new object[] {
                        printCount,
                        printInfo});
            printInfo = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNotePrintingAsync(int printCount, System.Xml.XmlNode printInfo) {
            this.GetNotePrintingAsync(printCount, printInfo, null);
        }
        
        /// <remarks/>
        public void GetNotePrintingAsync(int printCount, System.Xml.XmlNode printInfo, object userState) {
            if ((this.GetNotePrintingOperationCompleted == null)) {
                this.GetNotePrintingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNotePrintingOperationCompleted);
            }
            this.InvokeAsync("GetNotePrinting", new object[] {
                        printCount,
                        printInfo}, this.GetNotePrintingOperationCompleted, userState);
        }
        
        private void OnGetNotePrintingOperationCompleted(object arg) {
            if ((this.GetNotePrintingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNotePrintingCompleted(this, new GetNotePrintingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UnlockEmrdocument", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UnlockEmrdocument(string registryID, string pname, string opcode, string opname, int expire, bool forPublic, System.Xml.XmlNode reasion) {
            object[] results = this.Invoke("UnlockEmrdocument", new object[] {
                        registryID,
                        pname,
                        opcode,
                        opname,
                        expire,
                        forPublic,
                        reasion});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnlockEmrdocumentAsync(string registryID, string pname, string opcode, string opname, int expire, bool forPublic, System.Xml.XmlNode reasion) {
            this.UnlockEmrdocumentAsync(registryID, pname, opcode, opname, expire, forPublic, reasion, null);
        }
        
        /// <remarks/>
        public void UnlockEmrdocumentAsync(string registryID, string pname, string opcode, string opname, int expire, bool forPublic, System.Xml.XmlNode reasion, object userState) {
            if ((this.UnlockEmrdocumentOperationCompleted == null)) {
                this.UnlockEmrdocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlockEmrdocumentOperationCompleted);
            }
            this.InvokeAsync("UnlockEmrdocument", new object[] {
                        registryID,
                        pname,
                        opcode,
                        opname,
                        expire,
                        forPublic,
                        reasion}, this.UnlockEmrdocumentOperationCompleted, userState);
        }
        
        private void OnUnlockEmrdocumentOperationCompleted(object arg) {
            if ((this.UnlockEmrdocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlockEmrdocumentCompleted(this, new UnlockEmrdocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/CanEditLockedEmrdocument", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CanEditLockedEmrdocument(string registryID, string opcode, ref string yesno) {
            object[] results = this.Invoke("CanEditLockedEmrdocument", new object[] {
                        registryID,
                        opcode,
                        yesno});
            yesno = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CanEditLockedEmrdocumentAsync(string registryID, string opcode, string yesno) {
            this.CanEditLockedEmrdocumentAsync(registryID, opcode, yesno, null);
        }
        
        /// <remarks/>
        public void CanEditLockedEmrdocumentAsync(string registryID, string opcode, string yesno, object userState) {
            if ((this.CanEditLockedEmrdocumentOperationCompleted == null)) {
                this.CanEditLockedEmrdocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanEditLockedEmrdocumentOperationCompleted);
            }
            this.InvokeAsync("CanEditLockedEmrdocument", new object[] {
                        registryID,
                        opcode,
                        yesno}, this.CanEditLockedEmrdocumentOperationCompleted, userState);
        }
        
        private void OnCanEditLockedEmrdocumentOperationCompleted(object arg) {
            if ((this.CanEditLockedEmrdocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanEditLockedEmrdocumentCompleted(this, new CanEditLockedEmrdocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/LockedEmrdocument", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LockedEmrdocument(string registryID) {
            object[] results = this.Invoke("LockedEmrdocument", new object[] {
                        registryID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LockedEmrdocumentAsync(string registryID) {
            this.LockedEmrdocumentAsync(registryID, null);
        }
        
        /// <remarks/>
        public void LockedEmrdocumentAsync(string registryID, object userState) {
            if ((this.LockedEmrdocumentOperationCompleted == null)) {
                this.LockedEmrdocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockedEmrdocumentOperationCompleted);
            }
            this.InvokeAsync("LockedEmrdocument", new object[] {
                        registryID}, this.LockedEmrdocumentOperationCompleted, userState);
        }
        
        private void OnLockedEmrdocumentOperationCompleted(object arg) {
            if ((this.LockedEmrdocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockedEmrdocumentCompleted(this, new LockedEmrdocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetEmrLockInfo", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmrLockInfo(string registryID, ref System.Data.DataSet result) {
            object[] results = this.Invoke("GetEmrLockInfo", new object[] {
                        registryID,
                        result});
            result = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrLockInfoAsync(string registryID, System.Data.DataSet result) {
            this.GetEmrLockInfoAsync(registryID, result, null);
        }
        
        /// <remarks/>
        public void GetEmrLockInfoAsync(string registryID, System.Data.DataSet result, object userState) {
            if ((this.GetEmrLockInfoOperationCompleted == null)) {
                this.GetEmrLockInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrLockInfoOperationCompleted);
            }
            this.InvokeAsync("GetEmrLockInfo", new object[] {
                        registryID,
                        result}, this.GetEmrLockInfoOperationCompleted, userState);
        }
        
        private void OnGetEmrLockInfoOperationCompleted(object arg) {
            if ((this.GetEmrLockInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrLockInfoCompleted(this, new GetEmrLockInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UncommitEmrNote", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UncommitEmrNote(string registryID, string opcode, string departmentCode, string noteID, int series, System.Xml.XmlNode reasion, System.Xml.XmlNode emrDoc) {
            object[] results = this.Invoke("UncommitEmrNote", new object[] {
                        registryID,
                        opcode,
                        departmentCode,
                        noteID,
                        series,
                        reasion,
                        emrDoc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UncommitEmrNoteAsync(string registryID, string opcode, string departmentCode, string noteID, int series, System.Xml.XmlNode reasion, System.Xml.XmlNode emrDoc) {
            this.UncommitEmrNoteAsync(registryID, opcode, departmentCode, noteID, series, reasion, emrDoc, null);
        }
        
        /// <remarks/>
        public void UncommitEmrNoteAsync(string registryID, string opcode, string departmentCode, string noteID, int series, System.Xml.XmlNode reasion, System.Xml.XmlNode emrDoc, object userState) {
            if ((this.UncommitEmrNoteOperationCompleted == null)) {
                this.UncommitEmrNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUncommitEmrNoteOperationCompleted);
            }
            this.InvokeAsync("UncommitEmrNote", new object[] {
                        registryID,
                        opcode,
                        departmentCode,
                        noteID,
                        series,
                        reasion,
                        emrDoc}, this.UncommitEmrNoteOperationCompleted, userState);
        }
        
        private void OnUncommitEmrNoteOperationCompleted(object arg) {
            if ((this.UncommitEmrNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UncommitEmrNoteCompleted(this, new UncommitEmrNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetUncommitInfo", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUncommitInfo(System.DateTime from, System.DateTime to, ref System.Xml.XmlNode info) {
            object[] results = this.Invoke("GetUncommitInfo", new object[] {
                        from,
                        to,
                        info});
            info = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUncommitInfoAsync(System.DateTime from, System.DateTime to, System.Xml.XmlNode info) {
            this.GetUncommitInfoAsync(from, to, info, null);
        }
        
        /// <remarks/>
        public void GetUncommitInfoAsync(System.DateTime from, System.DateTime to, System.Xml.XmlNode info, object userState) {
            if ((this.GetUncommitInfoOperationCompleted == null)) {
                this.GetUncommitInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUncommitInfoOperationCompleted);
            }
            this.InvokeAsync("GetUncommitInfo", new object[] {
                        from,
                        to,
                        info}, this.GetUncommitInfoOperationCompleted, userState);
        }
        
        private void OnGetUncommitInfoOperationCompleted(object arg) {
            if ((this.GetUncommitInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUncommitInfoCompleted(this, new GetUncommitInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/NewValuateRules", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewValuateRules(string noteID, System.Xml.XmlNode rules) {
            object[] results = this.Invoke("NewValuateRules", new object[] {
                        noteID,
                        rules});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewValuateRulesAsync(string noteID, System.Xml.XmlNode rules) {
            this.NewValuateRulesAsync(noteID, rules, null);
        }
        
        /// <remarks/>
        public void NewValuateRulesAsync(string noteID, System.Xml.XmlNode rules, object userState) {
            if ((this.NewValuateRulesOperationCompleted == null)) {
                this.NewValuateRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewValuateRulesOperationCompleted);
            }
            this.InvokeAsync("NewValuateRules", new object[] {
                        noteID,
                        rules}, this.NewValuateRulesOperationCompleted, userState);
        }
        
        private void OnNewValuateRulesOperationCompleted(object arg) {
            if ((this.NewValuateRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewValuateRulesCompleted(this, new NewValuateRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/NewValuateRulesEnd", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewValuateRulesEnd(string noteID, System.Xml.XmlNode rules) {
            object[] results = this.Invoke("NewValuateRulesEnd", new object[] {
                        noteID,
                        rules});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewValuateRulesEndAsync(string noteID, System.Xml.XmlNode rules) {
            this.NewValuateRulesEndAsync(noteID, rules, null);
        }
        
        /// <remarks/>
        public void NewValuateRulesEndAsync(string noteID, System.Xml.XmlNode rules, object userState) {
            if ((this.NewValuateRulesEndOperationCompleted == null)) {
                this.NewValuateRulesEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewValuateRulesEndOperationCompleted);
            }
            this.InvokeAsync("NewValuateRulesEnd", new object[] {
                        noteID,
                        rules}, this.NewValuateRulesEndOperationCompleted, userState);
        }
        
        private void OnNewValuateRulesEndOperationCompleted(object arg) {
            if ((this.NewValuateRulesEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewValuateRulesEndCompleted(this, new NewValuateRulesEndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/RemoveNoteWithValuateRules", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RemoveNoteWithValuateRules(string noteID) {
            object[] results = this.Invoke("RemoveNoteWithValuateRules", new object[] {
                        noteID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveNoteWithValuateRulesAsync(string noteID) {
            this.RemoveNoteWithValuateRulesAsync(noteID, null);
        }
        
        /// <remarks/>
        public void RemoveNoteWithValuateRulesAsync(string noteID, object userState) {
            if ((this.RemoveNoteWithValuateRulesOperationCompleted == null)) {
                this.RemoveNoteWithValuateRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveNoteWithValuateRulesOperationCompleted);
            }
            this.InvokeAsync("RemoveNoteWithValuateRules", new object[] {
                        noteID}, this.RemoveNoteWithValuateRulesOperationCompleted, userState);
        }
        
        private void OnRemoveNoteWithValuateRulesOperationCompleted(object arg) {
            if ((this.RemoveNoteWithValuateRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveNoteWithValuateRulesCompleted(this, new RemoveNoteWithValuateRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/RemoveNoteWithValuateRulesEnd", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RemoveNoteWithValuateRulesEnd(string noteID) {
            object[] results = this.Invoke("RemoveNoteWithValuateRulesEnd", new object[] {
                        noteID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveNoteWithValuateRulesEndAsync(string noteID) {
            this.RemoveNoteWithValuateRulesEndAsync(noteID, null);
        }
        
        /// <remarks/>
        public void RemoveNoteWithValuateRulesEndAsync(string noteID, object userState) {
            if ((this.RemoveNoteWithValuateRulesEndOperationCompleted == null)) {
                this.RemoveNoteWithValuateRulesEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveNoteWithValuateRulesEndOperationCompleted);
            }
            this.InvokeAsync("RemoveNoteWithValuateRulesEnd", new object[] {
                        noteID}, this.RemoveNoteWithValuateRulesEndOperationCompleted, userState);
        }
        
        private void OnRemoveNoteWithValuateRulesEndOperationCompleted(object arg) {
            if ((this.RemoveNoteWithValuateRulesEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveNoteWithValuateRulesEndCompleted(this, new RemoveNoteWithValuateRulesEndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetValuateRules", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetValuateRules(string noteID, ref System.Xml.XmlNode rules) {
            object[] results = this.Invoke("GetValuateRules", new object[] {
                        noteID,
                        rules});
            rules = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetValuateRulesAsync(string noteID, System.Xml.XmlNode rules) {
            this.GetValuateRulesAsync(noteID, rules, null);
        }
        
        /// <remarks/>
        public void GetValuateRulesAsync(string noteID, System.Xml.XmlNode rules, object userState) {
            if ((this.GetValuateRulesOperationCompleted == null)) {
                this.GetValuateRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValuateRulesOperationCompleted);
            }
            this.InvokeAsync("GetValuateRules", new object[] {
                        noteID,
                        rules}, this.GetValuateRulesOperationCompleted, userState);
        }
        
        private void OnGetValuateRulesOperationCompleted(object arg) {
            if ((this.GetValuateRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValuateRulesCompleted(this, new GetValuateRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetValuateRulesEnd", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetValuateRulesEnd(string noteID, ref System.Xml.XmlNode rules) {
            object[] results = this.Invoke("GetValuateRulesEnd", new object[] {
                        noteID,
                        rules});
            rules = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetValuateRulesEndAsync(string noteID, System.Xml.XmlNode rules) {
            this.GetValuateRulesEndAsync(noteID, rules, null);
        }
        
        /// <remarks/>
        public void GetValuateRulesEndAsync(string noteID, System.Xml.XmlNode rules, object userState) {
            if ((this.GetValuateRulesEndOperationCompleted == null)) {
                this.GetValuateRulesEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValuateRulesEndOperationCompleted);
            }
            this.InvokeAsync("GetValuateRulesEnd", new object[] {
                        noteID,
                        rules}, this.GetValuateRulesEndOperationCompleted, userState);
        }
        
        private void OnGetValuateRulesEndOperationCompleted(object arg) {
            if ((this.GetValuateRulesEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValuateRulesEndCompleted(this, new GetValuateRulesEndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetNotesWithValuateRules", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNotesWithValuateRules(ref System.Data.DataSet rules) {
            object[] results = this.Invoke("GetNotesWithValuateRules", new object[] {
                        rules});
            rules = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNotesWithValuateRulesAsync(System.Data.DataSet rules) {
            this.GetNotesWithValuateRulesAsync(rules, null);
        }
        
        /// <remarks/>
        public void GetNotesWithValuateRulesAsync(System.Data.DataSet rules, object userState) {
            if ((this.GetNotesWithValuateRulesOperationCompleted == null)) {
                this.GetNotesWithValuateRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNotesWithValuateRulesOperationCompleted);
            }
            this.InvokeAsync("GetNotesWithValuateRules", new object[] {
                        rules}, this.GetNotesWithValuateRulesOperationCompleted, userState);
        }
        
        private void OnGetNotesWithValuateRulesOperationCompleted(object arg) {
            if ((this.GetNotesWithValuateRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNotesWithValuateRulesCompleted(this, new GetNotesWithValuateRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetNotesWithValuateRulesEnd", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNotesWithValuateRulesEnd(ref System.Data.DataSet rules) {
            object[] results = this.Invoke("GetNotesWithValuateRulesEnd", new object[] {
                        rules});
            rules = ((System.Data.DataSet)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNotesWithValuateRulesEndAsync(System.Data.DataSet rules) {
            this.GetNotesWithValuateRulesEndAsync(rules, null);
        }
        
        /// <remarks/>
        public void GetNotesWithValuateRulesEndAsync(System.Data.DataSet rules, object userState) {
            if ((this.GetNotesWithValuateRulesEndOperationCompleted == null)) {
                this.GetNotesWithValuateRulesEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNotesWithValuateRulesEndOperationCompleted);
            }
            this.InvokeAsync("GetNotesWithValuateRulesEnd", new object[] {
                        rules}, this.GetNotesWithValuateRulesEndOperationCompleted, userState);
        }
        
        private void OnGetNotesWithValuateRulesEndOperationCompleted(object arg) {
            if ((this.GetNotesWithValuateRulesEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNotesWithValuateRulesEndCompleted(this, new GetNotesWithValuateRulesEndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetNoteIDsWithValuateRules", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNoteIDsWithValuateRules(ref System.Xml.XmlNode rules) {
            object[] results = this.Invoke("GetNoteIDsWithValuateRules", new object[] {
                        rules});
            rules = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNoteIDsWithValuateRulesAsync(System.Xml.XmlNode rules) {
            this.GetNoteIDsWithValuateRulesAsync(rules, null);
        }
        
        /// <remarks/>
        public void GetNoteIDsWithValuateRulesAsync(System.Xml.XmlNode rules, object userState) {
            if ((this.GetNoteIDsWithValuateRulesOperationCompleted == null)) {
                this.GetNoteIDsWithValuateRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNoteIDsWithValuateRulesOperationCompleted);
            }
            this.InvokeAsync("GetNoteIDsWithValuateRules", new object[] {
                        rules}, this.GetNoteIDsWithValuateRulesOperationCompleted, userState);
        }
        
        private void OnGetNoteIDsWithValuateRulesOperationCompleted(object arg) {
            if ((this.GetNoteIDsWithValuateRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNoteIDsWithValuateRulesCompleted(this, new GetNoteIDsWithValuateRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/NewValuateDetail", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewValuateDetail(bool self, string registryID, string noteID, decimal score, string opcode, System.Xml.XmlNode flaws) {
            object[] results = this.Invoke("NewValuateDetail", new object[] {
                        self,
                        registryID,
                        noteID,
                        score,
                        opcode,
                        flaws});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewValuateDetailAsync(bool self, string registryID, string noteID, decimal score, string opcode, System.Xml.XmlNode flaws) {
            this.NewValuateDetailAsync(self, registryID, noteID, score, opcode, flaws, null);
        }
        
        /// <remarks/>
        public void NewValuateDetailAsync(bool self, string registryID, string noteID, decimal score, string opcode, System.Xml.XmlNode flaws, object userState) {
            if ((this.NewValuateDetailOperationCompleted == null)) {
                this.NewValuateDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewValuateDetailOperationCompleted);
            }
            this.InvokeAsync("NewValuateDetail", new object[] {
                        self,
                        registryID,
                        noteID,
                        score,
                        opcode,
                        flaws}, this.NewValuateDetailOperationCompleted, userState);
        }
        
        private void OnNewValuateDetailOperationCompleted(object arg) {
            if ((this.NewValuateDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewValuateDetailCompleted(this, new NewValuateDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/NewValuateDetailEnd", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewValuateDetailEnd(bool self, string registryID, string noteID, decimal score, string opcode, System.Xml.XmlNode flaws) {
            object[] results = this.Invoke("NewValuateDetailEnd", new object[] {
                        self,
                        registryID,
                        noteID,
                        score,
                        opcode,
                        flaws});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewValuateDetailEndAsync(bool self, string registryID, string noteID, decimal score, string opcode, System.Xml.XmlNode flaws) {
            this.NewValuateDetailEndAsync(self, registryID, noteID, score, opcode, flaws, null);
        }
        
        /// <remarks/>
        public void NewValuateDetailEndAsync(bool self, string registryID, string noteID, decimal score, string opcode, System.Xml.XmlNode flaws, object userState) {
            if ((this.NewValuateDetailEndOperationCompleted == null)) {
                this.NewValuateDetailEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewValuateDetailEndOperationCompleted);
            }
            this.InvokeAsync("NewValuateDetailEnd", new object[] {
                        self,
                        registryID,
                        noteID,
                        score,
                        opcode,
                        flaws}, this.NewValuateDetailEndOperationCompleted, userState);
        }
        
        private void OnNewValuateDetailEndOperationCompleted(object arg) {
            if ((this.NewValuateDetailEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewValuateDetailEndCompleted(this, new NewValuateDetailEndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetValuateDetailDT", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetValuateDetailDT() {
            object[] results = this.Invoke("GetValuateDetailDT", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetValuateDetailDTAsync() {
            this.GetValuateDetailDTAsync(null);
        }
        
        /// <remarks/>
        public void GetValuateDetailDTAsync(object userState) {
            if ((this.GetValuateDetailDTOperationCompleted == null)) {
                this.GetValuateDetailDTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValuateDetailDTOperationCompleted);
            }
            this.InvokeAsync("GetValuateDetailDT", new object[0], this.GetValuateDetailDTOperationCompleted, userState);
        }
        
        private void OnGetValuateDetailDTOperationCompleted(object arg) {
            if ((this.GetValuateDetailDTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValuateDetailDTCompleted(this, new GetValuateDetailDTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetValuateDetailDTEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetValuateDetailDTEx(bool self, string registryID) {
            object[] results = this.Invoke("GetValuateDetailDTEx", new object[] {
                        self,
                        registryID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetValuateDetailDTExAsync(bool self, string registryID) {
            this.GetValuateDetailDTExAsync(self, registryID, null);
        }
        
        /// <remarks/>
        public void GetValuateDetailDTExAsync(bool self, string registryID, object userState) {
            if ((this.GetValuateDetailDTExOperationCompleted == null)) {
                this.GetValuateDetailDTExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValuateDetailDTExOperationCompleted);
            }
            this.InvokeAsync("GetValuateDetailDTEx", new object[] {
                        self,
                        registryID}, this.GetValuateDetailDTExOperationCompleted, userState);
        }
        
        private void OnGetValuateDetailDTExOperationCompleted(object arg) {
            if ((this.GetValuateDetailDTExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValuateDetailDTExCompleted(this, new GetValuateDetailDTExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetValuateDetail", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetValuateDetail(bool self, string registryID, ref System.Xml.XmlNode flaws) {
            object[] results = this.Invoke("GetValuateDetail", new object[] {
                        self,
                        registryID,
                        flaws});
            flaws = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetValuateDetailAsync(bool self, string registryID, System.Xml.XmlNode flaws) {
            this.GetValuateDetailAsync(self, registryID, flaws, null);
        }
        
        /// <remarks/>
        public void GetValuateDetailAsync(bool self, string registryID, System.Xml.XmlNode flaws, object userState) {
            if ((this.GetValuateDetailOperationCompleted == null)) {
                this.GetValuateDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValuateDetailOperationCompleted);
            }
            this.InvokeAsync("GetValuateDetail", new object[] {
                        self,
                        registryID,
                        flaws}, this.GetValuateDetailOperationCompleted, userState);
        }
        
        private void OnGetValuateDetailOperationCompleted(object arg) {
            if ((this.GetValuateDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValuateDetailCompleted(this, new GetValuateDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetValuateDetailEnd", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetValuateDetailEnd(bool self, string registryID, ref System.Xml.XmlNode flaws) {
            object[] results = this.Invoke("GetValuateDetailEnd", new object[] {
                        self,
                        registryID,
                        flaws});
            flaws = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetValuateDetailEndAsync(bool self, string registryID, System.Xml.XmlNode flaws) {
            this.GetValuateDetailEndAsync(self, registryID, flaws, null);
        }
        
        /// <remarks/>
        public void GetValuateDetailEndAsync(bool self, string registryID, System.Xml.XmlNode flaws, object userState) {
            if ((this.GetValuateDetailEndOperationCompleted == null)) {
                this.GetValuateDetailEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValuateDetailEndOperationCompleted);
            }
            this.InvokeAsync("GetValuateDetailEnd", new object[] {
                        self,
                        registryID,
                        flaws}, this.GetValuateDetailEndOperationCompleted, userState);
        }
        
        private void OnGetValuateDetailEndOperationCompleted(object arg) {
            if ((this.GetValuateDetailEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValuateDetailEndCompleted(this, new GetValuateDetailEndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/NewValuateScore", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewValuateScore(bool self, string registryID, string doctorID, string departmentCode, string opcode, decimal score, int level) {
            object[] results = this.Invoke("NewValuateScore", new object[] {
                        self,
                        registryID,
                        doctorID,
                        departmentCode,
                        opcode,
                        score,
                        level});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewValuateScoreAsync(bool self, string registryID, string doctorID, string departmentCode, string opcode, decimal score, int level) {
            this.NewValuateScoreAsync(self, registryID, doctorID, departmentCode, opcode, score, level, null);
        }
        
        /// <remarks/>
        public void NewValuateScoreAsync(bool self, string registryID, string doctorID, string departmentCode, string opcode, decimal score, int level, object userState) {
            if ((this.NewValuateScoreOperationCompleted == null)) {
                this.NewValuateScoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewValuateScoreOperationCompleted);
            }
            this.InvokeAsync("NewValuateScore", new object[] {
                        self,
                        registryID,
                        doctorID,
                        departmentCode,
                        opcode,
                        score,
                        level}, this.NewValuateScoreOperationCompleted, userState);
        }
        
        private void OnNewValuateScoreOperationCompleted(object arg) {
            if ((this.NewValuateScoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewValuateScoreCompleted(this, new NewValuateScoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/NewValuateScoreEnd", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewValuateScoreEnd(bool self, string registryID, string doctorID, string departmentCode, string opcode, decimal score, int level) {
            object[] results = this.Invoke("NewValuateScoreEnd", new object[] {
                        self,
                        registryID,
                        doctorID,
                        departmentCode,
                        opcode,
                        score,
                        level});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewValuateScoreEndAsync(bool self, string registryID, string doctorID, string departmentCode, string opcode, decimal score, int level) {
            this.NewValuateScoreEndAsync(self, registryID, doctorID, departmentCode, opcode, score, level, null);
        }
        
        /// <remarks/>
        public void NewValuateScoreEndAsync(bool self, string registryID, string doctorID, string departmentCode, string opcode, decimal score, int level, object userState) {
            if ((this.NewValuateScoreEndOperationCompleted == null)) {
                this.NewValuateScoreEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewValuateScoreEndOperationCompleted);
            }
            this.InvokeAsync("NewValuateScoreEnd", new object[] {
                        self,
                        registryID,
                        doctorID,
                        departmentCode,
                        opcode,
                        score,
                        level}, this.NewValuateScoreEndOperationCompleted, userState);
        }
        
        private void OnNewValuateScoreEndOperationCompleted(object arg) {
            if ((this.NewValuateScoreEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewValuateScoreEndCompleted(this, new NewValuateScoreEndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetDoctorScoreForDepartment", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDoctorScoreForDepartment(bool self, string department, System.DateTime dtfrom, System.DateTime dtto, ref System.Xml.XmlNode result) {
            object[] results = this.Invoke("GetDoctorScoreForDepartment", new object[] {
                        self,
                        department,
                        dtfrom,
                        dtto,
                        result});
            result = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDoctorScoreForDepartmentAsync(bool self, string department, System.DateTime dtfrom, System.DateTime dtto, System.Xml.XmlNode result) {
            this.GetDoctorScoreForDepartmentAsync(self, department, dtfrom, dtto, result, null);
        }
        
        /// <remarks/>
        public void GetDoctorScoreForDepartmentAsync(bool self, string department, System.DateTime dtfrom, System.DateTime dtto, System.Xml.XmlNode result, object userState) {
            if ((this.GetDoctorScoreForDepartmentOperationCompleted == null)) {
                this.GetDoctorScoreForDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDoctorScoreForDepartmentOperationCompleted);
            }
            this.InvokeAsync("GetDoctorScoreForDepartment", new object[] {
                        self,
                        department,
                        dtfrom,
                        dtto,
                        result}, this.GetDoctorScoreForDepartmentOperationCompleted, userState);
        }
        
        private void OnGetDoctorScoreForDepartmentOperationCompleted(object arg) {
            if ((this.GetDoctorScoreForDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDoctorScoreForDepartmentCompleted(this, new GetDoctorScoreForDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetDepartmentScore", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDepartmentScore(bool self, System.DateTime dtfrom, System.DateTime dtto, ref System.Xml.XmlNode result) {
            object[] results = this.Invoke("GetDepartmentScore", new object[] {
                        self,
                        dtfrom,
                        dtto,
                        result});
            result = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentScoreAsync(bool self, System.DateTime dtfrom, System.DateTime dtto, System.Xml.XmlNode result) {
            this.GetDepartmentScoreAsync(self, dtfrom, dtto, result, null);
        }
        
        /// <remarks/>
        public void GetDepartmentScoreAsync(bool self, System.DateTime dtfrom, System.DateTime dtto, System.Xml.XmlNode result, object userState) {
            if ((this.GetDepartmentScoreOperationCompleted == null)) {
                this.GetDepartmentScoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentScoreOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentScore", new object[] {
                        self,
                        dtfrom,
                        dtto,
                        result}, this.GetDepartmentScoreOperationCompleted, userState);
        }
        
        private void OnGetDepartmentScoreOperationCompleted(object arg) {
            if ((this.GetDepartmentScoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentScoreCompleted(this, new GetDepartmentScoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetPatientScoreForDoctor", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPatientScoreForDoctor(bool self, string doctorID, string department, System.DateTime dtfrom, System.DateTime dtto, ref System.Xml.XmlNode result) {
            object[] results = this.Invoke("GetPatientScoreForDoctor", new object[] {
                        self,
                        doctorID,
                        department,
                        dtfrom,
                        dtto,
                        result});
            result = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientScoreForDoctorAsync(bool self, string doctorID, string department, System.DateTime dtfrom, System.DateTime dtto, System.Xml.XmlNode result) {
            this.GetPatientScoreForDoctorAsync(self, doctorID, department, dtfrom, dtto, result, null);
        }
        
        /// <remarks/>
        public void GetPatientScoreForDoctorAsync(bool self, string doctorID, string department, System.DateTime dtfrom, System.DateTime dtto, System.Xml.XmlNode result, object userState) {
            if ((this.GetPatientScoreForDoctorOperationCompleted == null)) {
                this.GetPatientScoreForDoctorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientScoreForDoctorOperationCompleted);
            }
            this.InvokeAsync("GetPatientScoreForDoctor", new object[] {
                        self,
                        doctorID,
                        department,
                        dtfrom,
                        dtto,
                        result}, this.GetPatientScoreForDoctorOperationCompleted, userState);
        }
        
        private void OnGetPatientScoreForDoctorOperationCompleted(object arg) {
            if ((this.GetPatientScoreForDoctorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientScoreForDoctorCompleted(this, new GetPatientScoreForDoctorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetOperatorsRoles", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOperatorsRoles(ref System.Xml.XmlNode operators) {
            object[] results = this.Invoke("GetOperatorsRoles", new object[] {
                        operators});
            operators = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOperatorsRolesAsync(System.Xml.XmlNode operators) {
            this.GetOperatorsRolesAsync(operators, null);
        }
        
        /// <remarks/>
        public void GetOperatorsRolesAsync(System.Xml.XmlNode operators, object userState) {
            if ((this.GetOperatorsRolesOperationCompleted == null)) {
                this.GetOperatorsRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperatorsRolesOperationCompleted);
            }
            this.InvokeAsync("GetOperatorsRoles", new object[] {
                        operators}, this.GetOperatorsRolesOperationCompleted, userState);
        }
        
        private void OnGetOperatorsRolesOperationCompleted(object arg) {
            if ((this.GetOperatorsRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperatorsRolesCompleted(this, new GetOperatorsRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/SetOperatorRoles", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetOperatorRoles(System.Xml.XmlNode op) {
            object[] results = this.Invoke("SetOperatorRoles", new object[] {
                        op});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetOperatorRolesAsync(System.Xml.XmlNode op) {
            this.SetOperatorRolesAsync(op, null);
        }
        
        /// <remarks/>
        public void SetOperatorRolesAsync(System.Xml.XmlNode op, object userState) {
            if ((this.SetOperatorRolesOperationCompleted == null)) {
                this.SetOperatorRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOperatorRolesOperationCompleted);
            }
            this.InvokeAsync("SetOperatorRoles", new object[] {
                        op}, this.SetOperatorRolesOperationCompleted, userState);
        }
        
        private void OnSetOperatorRolesOperationCompleted(object arg) {
            if ((this.SetOperatorRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOperatorRolesCompleted(this, new SetOperatorRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetRolesForOneOperator", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRolesForOneOperator(string opcode, ref System.Xml.XmlNode roles) {
            object[] results = this.Invoke("GetRolesForOneOperator", new object[] {
                        opcode,
                        roles});
            roles = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRolesForOneOperatorAsync(string opcode, System.Xml.XmlNode roles) {
            this.GetRolesForOneOperatorAsync(opcode, roles, null);
        }
        
        /// <remarks/>
        public void GetRolesForOneOperatorAsync(string opcode, System.Xml.XmlNode roles, object userState) {
            if ((this.GetRolesForOneOperatorOperationCompleted == null)) {
                this.GetRolesForOneOperatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRolesForOneOperatorOperationCompleted);
            }
            this.InvokeAsync("GetRolesForOneOperator", new object[] {
                        opcode,
                        roles}, this.GetRolesForOneOperatorOperationCompleted, userState);
        }
        
        private void OnGetRolesForOneOperatorOperationCompleted(object arg) {
            if ((this.GetRolesForOneOperatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRolesForOneOperatorCompleted(this, new GetRolesForOneOperatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetRolesForOneOperatorHIS", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRolesForOneOperatorHIS(string opcode, string zxtdm, ref System.Xml.XmlNode roles) {
            object[] results = this.Invoke("GetRolesForOneOperatorHIS", new object[] {
                        opcode,
                        zxtdm,
                        roles});
            roles = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRolesForOneOperatorHISAsync(string opcode, string zxtdm, System.Xml.XmlNode roles) {
            this.GetRolesForOneOperatorHISAsync(opcode, zxtdm, roles, null);
        }
        
        /// <remarks/>
        public void GetRolesForOneOperatorHISAsync(string opcode, string zxtdm, System.Xml.XmlNode roles, object userState) {
            if ((this.GetRolesForOneOperatorHISOperationCompleted == null)) {
                this.GetRolesForOneOperatorHISOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRolesForOneOperatorHISOperationCompleted);
            }
            this.InvokeAsync("GetRolesForOneOperatorHIS", new object[] {
                        opcode,
                        zxtdm,
                        roles}, this.GetRolesForOneOperatorHISOperationCompleted, userState);
        }
        
        private void OnGetRolesForOneOperatorHISOperationCompleted(object arg) {
            if ((this.GetRolesForOneOperatorHISCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRolesForOneOperatorHISCompleted(this, new GetRolesForOneOperatorHISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/CheckSysClient", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckSysClient() {
            object[] results = this.Invoke("CheckSysClient", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckSysClientAsync() {
            this.CheckSysClientAsync(null);
        }
        
        /// <remarks/>
        public void CheckSysClientAsync(object userState) {
            if ((this.CheckSysClientOperationCompleted == null)) {
                this.CheckSysClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckSysClientOperationCompleted);
            }
            this.InvokeAsync("CheckSysClient", new object[0], this.CheckSysClientOperationCompleted, userState);
        }
        
        private void OnCheckSysClientOperationCompleted(object arg) {
            if ((this.CheckSysClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckSysClientCompleted(this, new CheckSysClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/ResetDatabase", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ResetDatabase() {
            object[] results = this.Invoke("ResetDatabase", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResetDatabaseAsync() {
            this.ResetDatabaseAsync(null);
        }
        
        /// <remarks/>
        public void ResetDatabaseAsync(object userState) {
            if ((this.ResetDatabaseOperationCompleted == null)) {
                this.ResetDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetDatabaseOperationCompleted);
            }
            this.InvokeAsync("ResetDatabase", new object[0], this.ResetDatabaseOperationCompleted, userState);
        }
        
        private void OnResetDatabaseOperationCompleted(object arg) {
            if ((this.ResetDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetDatabaseCompleted(this, new ResetDatabaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetRegistryIDsWithKeyword", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetRegistryIDsWithKeyword(string keyword) {
            object[] results = this.Invoke("GetRegistryIDsWithKeyword", new object[] {
                        keyword});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegistryIDsWithKeywordAsync(string keyword) {
            this.GetRegistryIDsWithKeywordAsync(keyword, null);
        }
        
        /// <remarks/>
        public void GetRegistryIDsWithKeywordAsync(string keyword, object userState) {
            if ((this.GetRegistryIDsWithKeywordOperationCompleted == null)) {
                this.GetRegistryIDsWithKeywordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegistryIDsWithKeywordOperationCompleted);
            }
            this.InvokeAsync("GetRegistryIDsWithKeyword", new object[] {
                        keyword}, this.GetRegistryIDsWithKeywordOperationCompleted, userState);
        }
        
        private void OnGetRegistryIDsWithKeywordOperationCompleted(object arg) {
            if ((this.GetRegistryIDsWithKeywordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegistryIDsWithKeywordCompleted(this, new GetRegistryIDsWithKeywordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/DoneTimeForConsult", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DoneTimeForConsult(string opcode, string registryID) {
            object[] results = this.Invoke("DoneTimeForConsult", new object[] {
                        opcode,
                        registryID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DoneTimeForConsultAsync(string opcode, string registryID) {
            this.DoneTimeForConsultAsync(opcode, registryID, null);
        }
        
        /// <remarks/>
        public void DoneTimeForConsultAsync(string opcode, string registryID, object userState) {
            if ((this.DoneTimeForConsultOperationCompleted == null)) {
                this.DoneTimeForConsultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoneTimeForConsultOperationCompleted);
            }
            this.InvokeAsync("DoneTimeForConsult", new object[] {
                        opcode,
                        registryID}, this.DoneTimeForConsultOperationCompleted, userState);
        }
        
        private void OnDoneTimeForConsultOperationCompleted(object arg) {
            if ((this.DoneTimeForConsultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoneTimeForConsultCompleted(this, new DoneTimeForConsultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/EnableCommitLog", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EnableCommitLog(string doctorID, string registryID, int series, string noteName, string patientName) {
            object[] results = this.Invoke("EnableCommitLog", new object[] {
                        doctorID,
                        registryID,
                        series,
                        noteName,
                        patientName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EnableCommitLogAsync(string doctorID, string registryID, int series, string noteName, string patientName) {
            this.EnableCommitLogAsync(doctorID, registryID, series, noteName, patientName, null);
        }
        
        /// <remarks/>
        public void EnableCommitLogAsync(string doctorID, string registryID, int series, string noteName, string patientName, object userState) {
            if ((this.EnableCommitLogOperationCompleted == null)) {
                this.EnableCommitLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnableCommitLogOperationCompleted);
            }
            this.InvokeAsync("EnableCommitLog", new object[] {
                        doctorID,
                        registryID,
                        series,
                        noteName,
                        patientName}, this.EnableCommitLogOperationCompleted, userState);
        }
        
        private void OnEnableCommitLogOperationCompleted(object arg) {
            if ((this.EnableCommitLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnableCommitLogCompleted(this, new EnableCommitLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/SetEnabledStatusToOne", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetEnabledStatusToOne(string registryID, int series) {
            object[] results = this.Invoke("SetEnabledStatusToOne", new object[] {
                        registryID,
                        series});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetEnabledStatusToOneAsync(string registryID, int series) {
            this.SetEnabledStatusToOneAsync(registryID, series, null);
        }
        
        /// <remarks/>
        public void SetEnabledStatusToOneAsync(string registryID, int series, object userState) {
            if ((this.SetEnabledStatusToOneOperationCompleted == null)) {
                this.SetEnabledStatusToOneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEnabledStatusToOneOperationCompleted);
            }
            this.InvokeAsync("SetEnabledStatusToOne", new object[] {
                        registryID,
                        series}, this.SetEnabledStatusToOneOperationCompleted, userState);
        }
        
        private void OnSetEnabledStatusToOneOperationCompleted(object arg) {
            if ((this.SetEnabledStatusToOneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEnabledStatusToOneCompleted(this, new SetEnabledStatusToOneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/IsEnabledCommit", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsEnabledCommit(string registryID, int series) {
            object[] results = this.Invoke("IsEnabledCommit", new object[] {
                        registryID,
                        series});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsEnabledCommitAsync(string registryID, int series) {
            this.IsEnabledCommitAsync(registryID, series, null);
        }
        
        /// <remarks/>
        public void IsEnabledCommitAsync(string registryID, int series, object userState) {
            if ((this.IsEnabledCommitOperationCompleted == null)) {
                this.IsEnabledCommitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsEnabledCommitOperationCompleted);
            }
            this.InvokeAsync("IsEnabledCommit", new object[] {
                        registryID,
                        series}, this.IsEnabledCommitOperationCompleted, userState);
        }
        
        private void OnIsEnabledCommitOperationCompleted(object arg) {
            if ((this.IsEnabledCommitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsEnabledCommitCompleted(this, new IsEnabledCommitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetEnabledStatusForOneDoctor", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEnabledStatusForOneDoctor(string doctorID, ref System.Xml.XmlNode result) {
            object[] results = this.Invoke("GetEnabledStatusForOneDoctor", new object[] {
                        doctorID,
                        result});
            result = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEnabledStatusForOneDoctorAsync(string doctorID, System.Xml.XmlNode result) {
            this.GetEnabledStatusForOneDoctorAsync(doctorID, result, null);
        }
        
        /// <remarks/>
        public void GetEnabledStatusForOneDoctorAsync(string doctorID, System.Xml.XmlNode result, object userState) {
            if ((this.GetEnabledStatusForOneDoctorOperationCompleted == null)) {
                this.GetEnabledStatusForOneDoctorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEnabledStatusForOneDoctorOperationCompleted);
            }
            this.InvokeAsync("GetEnabledStatusForOneDoctor", new object[] {
                        doctorID,
                        result}, this.GetEnabledStatusForOneDoctorOperationCompleted, userState);
        }
        
        private void OnGetEnabledStatusForOneDoctorOperationCompleted(object arg) {
            if ((this.GetEnabledStatusForOneDoctorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEnabledStatusForOneDoctorCompleted(this, new GetEnabledStatusForOneDoctorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetEnabledStatusForOneDoctorDT", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEnabledStatusForOneDoctorDT(string doctorID) {
            object[] results = this.Invoke("GetEnabledStatusForOneDoctorDT", new object[] {
                        doctorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEnabledStatusForOneDoctorDTAsync(string doctorID) {
            this.GetEnabledStatusForOneDoctorDTAsync(doctorID, null);
        }
        
        /// <remarks/>
        public void GetEnabledStatusForOneDoctorDTAsync(string doctorID, object userState) {
            if ((this.GetEnabledStatusForOneDoctorDTOperationCompleted == null)) {
                this.GetEnabledStatusForOneDoctorDTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEnabledStatusForOneDoctorDTOperationCompleted);
            }
            this.InvokeAsync("GetEnabledStatusForOneDoctorDT", new object[] {
                        doctorID}, this.GetEnabledStatusForOneDoctorDTOperationCompleted, userState);
        }
        
        private void OnGetEnabledStatusForOneDoctorDTOperationCompleted(object arg) {
            if ((this.GetEnabledStatusForOneDoctorDTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEnabledStatusForOneDoctorDTCompleted(this, new GetEnabledStatusForOneDoctorDTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetSignMessage", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetSignMessage(string registryID, string strNoteID, int Series, ref string SrcMessage, ref string SignMessage, ref string strDateTime) {
            object[] results = this.Invoke("GetSignMessage", new object[] {
                        registryID,
                        strNoteID,
                        Series,
                        SrcMessage,
                        SignMessage,
                        strDateTime});
            SrcMessage = ((string)(results[1]));
            SignMessage = ((string)(results[2]));
            strDateTime = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetSignMessageAsync(string registryID, string strNoteID, int Series, string SrcMessage, string SignMessage, string strDateTime) {
            this.GetSignMessageAsync(registryID, strNoteID, Series, SrcMessage, SignMessage, strDateTime, null);
        }
        
        /// <remarks/>
        public void GetSignMessageAsync(string registryID, string strNoteID, int Series, string SrcMessage, string SignMessage, string strDateTime, object userState) {
            if ((this.GetSignMessageOperationCompleted == null)) {
                this.GetSignMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSignMessageOperationCompleted);
            }
            this.InvokeAsync("GetSignMessage", new object[] {
                        registryID,
                        strNoteID,
                        Series,
                        SrcMessage,
                        SignMessage,
                        strDateTime}, this.GetSignMessageOperationCompleted, userState);
        }
        
        private void OnGetSignMessageOperationCompleted(object arg) {
            if ((this.GetSignMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSignMessageCompleted(this, new GetSignMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateOperator", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateOperator(string Code, string TecqTitle, string TitleLevel, string LevelCode) {
            object[] results = this.Invoke("UpdateOperator", new object[] {
                        Code,
                        TecqTitle,
                        TitleLevel,
                        LevelCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOperatorAsync(string Code, string TecqTitle, string TitleLevel, string LevelCode) {
            this.UpdateOperatorAsync(Code, TecqTitle, TitleLevel, LevelCode, null);
        }
        
        /// <remarks/>
        public void UpdateOperatorAsync(string Code, string TecqTitle, string TitleLevel, string LevelCode, object userState) {
            if ((this.UpdateOperatorOperationCompleted == null)) {
                this.UpdateOperatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperatorOperationCompleted);
            }
            this.InvokeAsync("UpdateOperator", new object[] {
                        Code,
                        TecqTitle,
                        TitleLevel,
                        LevelCode}, this.UpdateOperatorOperationCompleted, userState);
        }
        
        private void OnUpdateOperatorOperationCompleted(object arg) {
            if ((this.UpdateOperatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOperatorCompleted(this, new UpdateOperatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/SelectOperator", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectOperator(string Code) {
            object[] results = this.Invoke("SelectOperator", new object[] {
                        Code});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectOperatorAsync(string Code) {
            this.SelectOperatorAsync(Code, null);
        }
        
        /// <remarks/>
        public void SelectOperatorAsync(string Code, object userState) {
            if ((this.SelectOperatorOperationCompleted == null)) {
                this.SelectOperatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectOperatorOperationCompleted);
            }
            this.InvokeAsync("SelectOperator", new object[] {
                        Code}, this.SelectOperatorOperationCompleted, userState);
        }
        
        private void OnSelectOperatorOperationCompleted(object arg) {
            if ((this.SelectOperatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectOperatorCompleted(this, new SelectOperatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetImageUrl", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetImageUrl(string RegistryID) {
            object[] results = this.Invoke("GetImageUrl", new object[] {
                        RegistryID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageUrlAsync(string RegistryID) {
            this.GetImageUrlAsync(RegistryID, null);
        }
        
        /// <remarks/>
        public void GetImageUrlAsync(string RegistryID, object userState) {
            if ((this.GetImageUrlOperationCompleted == null)) {
                this.GetImageUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageUrlOperationCompleted);
            }
            this.InvokeAsync("GetImageUrl", new object[] {
                        RegistryID}, this.GetImageUrlOperationCompleted, userState);
        }
        
        private void OnGetImageUrlOperationCompleted(object arg) {
            if ((this.GetImageUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageUrlCompleted(this, new GetImageUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetImage", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetImage(string RegistryID) {
            object[] results = this.Invoke("GetImage", new object[] {
                        RegistryID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageAsync(string RegistryID) {
            this.GetImageAsync(RegistryID, null);
        }
        
        /// <remarks/>
        public void GetImageAsync(string RegistryID, object userState) {
            if ((this.GetImageOperationCompleted == null)) {
                this.GetImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageOperationCompleted);
            }
            this.InvokeAsync("GetImage", new object[] {
                        RegistryID}, this.GetImageOperationCompleted, userState);
        }
        
        private void OnGetImageOperationCompleted(object arg) {
            if ((this.GetImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageCompleted(this, new GetImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetXmlDocument", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetXmlDocument(string RegistryID) {
            object[] results = this.Invoke("GetXmlDocument", new object[] {
                        RegistryID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetXmlDocumentAsync(string RegistryID) {
            this.GetXmlDocumentAsync(RegistryID, null);
        }
        
        /// <remarks/>
        public void GetXmlDocumentAsync(string RegistryID, object userState) {
            if ((this.GetXmlDocumentOperationCompleted == null)) {
                this.GetXmlDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetXmlDocumentOperationCompleted);
            }
            this.InvokeAsync("GetXmlDocument", new object[] {
                        RegistryID}, this.GetXmlDocumentOperationCompleted, userState);
        }
        
        private void OnGetXmlDocumentOperationCompleted(object arg) {
            if ((this.GetXmlDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetXmlDocumentCompleted(this, new GetXmlDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/EnableChangeStatus", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EnableChangeStatus(string RegistryID, string Series) {
            object[] results = this.Invoke("EnableChangeStatus", new object[] {
                        RegistryID,
                        Series});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EnableChangeStatusAsync(string RegistryID, string Series) {
            this.EnableChangeStatusAsync(RegistryID, Series, null);
        }
        
        /// <remarks/>
        public void EnableChangeStatusAsync(string RegistryID, string Series, object userState) {
            if ((this.EnableChangeStatusOperationCompleted == null)) {
                this.EnableChangeStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnableChangeStatusOperationCompleted);
            }
            this.InvokeAsync("EnableChangeStatus", new object[] {
                        RegistryID,
                        Series}, this.EnableChangeStatusOperationCompleted, userState);
        }
        
        private void OnEnableChangeStatusOperationCompleted(object arg) {
            if ((this.EnableChangeStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnableChangeStatusCompleted(this, new EnableChangeStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetChanges", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetChanges(string opCode, string strDept, System.DateTime Start, System.DateTime End) {
            object[] results = this.Invoke("GetChanges", new object[] {
                        opCode,
                        strDept,
                        Start,
                        End});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetChangesAsync(string opCode, string strDept, System.DateTime Start, System.DateTime End) {
            this.GetChangesAsync(opCode, strDept, Start, End, null);
        }
        
        /// <remarks/>
        public void GetChangesAsync(string opCode, string strDept, System.DateTime Start, System.DateTime End, object userState) {
            if ((this.GetChangesOperationCompleted == null)) {
                this.GetChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChangesOperationCompleted);
            }
            this.InvokeAsync("GetChanges", new object[] {
                        opCode,
                        strDept,
                        Start,
                        End}, this.GetChangesOperationCompleted, userState);
        }
        
        private void OnGetChangesOperationCompleted(object arg) {
            if ((this.GetChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChangesCompleted(this, new GetChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/Save", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Save(string strRegistryID, string strInSituation, string strSubjective, string strExam, string strDiagnose) {
            object[] results = this.Invoke("Save", new object[] {
                        strRegistryID,
                        strInSituation,
                        strSubjective,
                        strExam,
                        strDiagnose});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAsync(string strRegistryID, string strInSituation, string strSubjective, string strExam, string strDiagnose) {
            this.SaveAsync(strRegistryID, strInSituation, strSubjective, strExam, strDiagnose, null);
        }
        
        /// <remarks/>
        public void SaveAsync(string strRegistryID, string strInSituation, string strSubjective, string strExam, string strDiagnose, object userState) {
            if ((this.SaveOperationCompleted == null)) {
                this.SaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveOperationCompleted);
            }
            this.InvokeAsync("Save", new object[] {
                        strRegistryID,
                        strInSituation,
                        strSubjective,
                        strExam,
                        strDiagnose}, this.SaveOperationCompleted, userState);
        }
        
        private void OnSaveOperationCompleted(object arg) {
            if ((this.SaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCompleted(this, new SaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetHospitalTemplatePks", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHospitalTemplatePks(ref System.Xml.XmlNode pks) {
            object[] results = this.Invoke("GetHospitalTemplatePks", new object[] {
                        pks});
            pks = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHospitalTemplatePksAsync(System.Xml.XmlNode pks) {
            this.GetHospitalTemplatePksAsync(pks, null);
        }
        
        /// <remarks/>
        public void GetHospitalTemplatePksAsync(System.Xml.XmlNode pks, object userState) {
            if ((this.GetHospitalTemplatePksOperationCompleted == null)) {
                this.GetHospitalTemplatePksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHospitalTemplatePksOperationCompleted);
            }
            this.InvokeAsync("GetHospitalTemplatePks", new object[] {
                        pks}, this.GetHospitalTemplatePksOperationCompleted, userState);
        }
        
        private void OnGetHospitalTemplatePksOperationCompleted(object arg) {
            if ((this.GetHospitalTemplatePksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHospitalTemplatePksCompleted(this, new GetHospitalTemplatePksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetHospitalTemplatePksZlg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHospitalTemplatePksZlg(ref System.Xml.XmlNode pks) {
            object[] results = this.Invoke("GetHospitalTemplatePksZlg", new object[] {
                        pks});
            pks = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHospitalTemplatePksZlgAsync(System.Xml.XmlNode pks) {
            this.GetHospitalTemplatePksZlgAsync(pks, null);
        }
        
        /// <remarks/>
        public void GetHospitalTemplatePksZlgAsync(System.Xml.XmlNode pks, object userState) {
            if ((this.GetHospitalTemplatePksZlgOperationCompleted == null)) {
                this.GetHospitalTemplatePksZlgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHospitalTemplatePksZlgOperationCompleted);
            }
            this.InvokeAsync("GetHospitalTemplatePksZlg", new object[] {
                        pks}, this.GetHospitalTemplatePksZlgOperationCompleted, userState);
        }
        
        private void OnGetHospitalTemplatePksZlgOperationCompleted(object arg) {
            if ((this.GetHospitalTemplatePksZlgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHospitalTemplatePksZlgCompleted(this, new GetHospitalTemplatePksZlgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetPersonTemplatePks", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPersonTemplatePks(ref System.Xml.XmlNode pks, string doctorID) {
            object[] results = this.Invoke("GetPersonTemplatePks", new object[] {
                        pks,
                        doctorID});
            pks = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonTemplatePksAsync(System.Xml.XmlNode pks, string doctorID) {
            this.GetPersonTemplatePksAsync(pks, doctorID, null);
        }
        
        /// <remarks/>
        public void GetPersonTemplatePksAsync(System.Xml.XmlNode pks, string doctorID, object userState) {
            if ((this.GetPersonTemplatePksOperationCompleted == null)) {
                this.GetPersonTemplatePksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonTemplatePksOperationCompleted);
            }
            this.InvokeAsync("GetPersonTemplatePks", new object[] {
                        pks,
                        doctorID}, this.GetPersonTemplatePksOperationCompleted, userState);
        }
        
        private void OnGetPersonTemplatePksOperationCompleted(object arg) {
            if ((this.GetPersonTemplatePksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonTemplatePksCompleted(this, new GetPersonTemplatePksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetPersonTemplatePksZlg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPersonTemplatePksZlg(ref System.Xml.XmlNode pks, string doctorID) {
            object[] results = this.Invoke("GetPersonTemplatePksZlg", new object[] {
                        pks,
                        doctorID});
            pks = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonTemplatePksZlgAsync(System.Xml.XmlNode pks, string doctorID) {
            this.GetPersonTemplatePksZlgAsync(pks, doctorID, null);
        }
        
        /// <remarks/>
        public void GetPersonTemplatePksZlgAsync(System.Xml.XmlNode pks, string doctorID, object userState) {
            if ((this.GetPersonTemplatePksZlgOperationCompleted == null)) {
                this.GetPersonTemplatePksZlgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonTemplatePksZlgOperationCompleted);
            }
            this.InvokeAsync("GetPersonTemplatePksZlg", new object[] {
                        pks,
                        doctorID}, this.GetPersonTemplatePksZlgOperationCompleted, userState);
        }
        
        private void OnGetPersonTemplatePksZlgOperationCompleted(object arg) {
            if ((this.GetPersonTemplatePksZlgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonTemplatePksZlgCompleted(this, new GetPersonTemplatePksZlgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetPersonTemplatePksEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPersonTemplatePksEx(ref System.Xml.XmlNode pks, string doctorID) {
            object[] results = this.Invoke("GetPersonTemplatePksEx", new object[] {
                        pks,
                        doctorID});
            pks = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonTemplatePksExAsync(System.Xml.XmlNode pks, string doctorID) {
            this.GetPersonTemplatePksExAsync(pks, doctorID, null);
        }
        
        /// <remarks/>
        public void GetPersonTemplatePksExAsync(System.Xml.XmlNode pks, string doctorID, object userState) {
            if ((this.GetPersonTemplatePksExOperationCompleted == null)) {
                this.GetPersonTemplatePksExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonTemplatePksExOperationCompleted);
            }
            this.InvokeAsync("GetPersonTemplatePksEx", new object[] {
                        pks,
                        doctorID}, this.GetPersonTemplatePksExOperationCompleted, userState);
        }
        
        private void OnGetPersonTemplatePksExOperationCompleted(object arg) {
            if ((this.GetPersonTemplatePksExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonTemplatePksExCompleted(this, new GetPersonTemplatePksExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetPersonTemplatePksExZlg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPersonTemplatePksExZlg(ref System.Xml.XmlNode pks, string doctorID) {
            object[] results = this.Invoke("GetPersonTemplatePksExZlg", new object[] {
                        pks,
                        doctorID});
            pks = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonTemplatePksExZlgAsync(System.Xml.XmlNode pks, string doctorID) {
            this.GetPersonTemplatePksExZlgAsync(pks, doctorID, null);
        }
        
        /// <remarks/>
        public void GetPersonTemplatePksExZlgAsync(System.Xml.XmlNode pks, string doctorID, object userState) {
            if ((this.GetPersonTemplatePksExZlgOperationCompleted == null)) {
                this.GetPersonTemplatePksExZlgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonTemplatePksExZlgOperationCompleted);
            }
            this.InvokeAsync("GetPersonTemplatePksExZlg", new object[] {
                        pks,
                        doctorID}, this.GetPersonTemplatePksExZlgOperationCompleted, userState);
        }
        
        private void OnGetPersonTemplatePksExZlgOperationCompleted(object arg) {
            if ((this.GetPersonTemplatePksExZlgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonTemplatePksExZlgCompleted(this, new GetPersonTemplatePksExZlgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/DepartTemplate", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DepartTemplate(ref System.Xml.XmlNode noteTemplate, string departCode) {
            object[] results = this.Invoke("DepartTemplate", new object[] {
                        noteTemplate,
                        departCode});
            noteTemplate = ((System.Xml.XmlNode)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DepartTemplateAsync(System.Xml.XmlNode noteTemplate, string departCode) {
            this.DepartTemplateAsync(noteTemplate, departCode, null);
        }
        
        /// <remarks/>
        public void DepartTemplateAsync(System.Xml.XmlNode noteTemplate, string departCode, object userState) {
            if ((this.DepartTemplateOperationCompleted == null)) {
                this.DepartTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDepartTemplateOperationCompleted);
            }
            this.InvokeAsync("DepartTemplate", new object[] {
                        noteTemplate,
                        departCode}, this.DepartTemplateOperationCompleted, userState);
        }
        
        private void OnDepartTemplateOperationCompleted(object arg) {
            if ((this.DepartTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DepartTemplateCompleted(this, new DepartTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/DepartTemplateZlg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DepartTemplateZlg(ref System.Xml.XmlNode noteTemplate, string departCode) {
            object[] results = this.Invoke("DepartTemplateZlg", new object[] {
                        noteTemplate,
                        departCode});
            noteTemplate = ((System.Xml.XmlNode)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DepartTemplateZlgAsync(System.Xml.XmlNode noteTemplate, string departCode) {
            this.DepartTemplateZlgAsync(noteTemplate, departCode, null);
        }
        
        /// <remarks/>
        public void DepartTemplateZlgAsync(System.Xml.XmlNode noteTemplate, string departCode, object userState) {
            if ((this.DepartTemplateZlgOperationCompleted == null)) {
                this.DepartTemplateZlgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDepartTemplateZlgOperationCompleted);
            }
            this.InvokeAsync("DepartTemplateZlg", new object[] {
                        noteTemplate,
                        departCode}, this.DepartTemplateZlgOperationCompleted, userState);
        }
        
        private void OnDepartTemplateZlgOperationCompleted(object arg) {
            if ((this.DepartTemplateZlgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DepartTemplateZlgCompleted(this, new DepartTemplateZlgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/PersonNoteTemplate", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PersonNoteTemplate(ref System.Xml.XmlNode noteTemplate, string doctorID) {
            object[] results = this.Invoke("PersonNoteTemplate", new object[] {
                        noteTemplate,
                        doctorID});
            noteTemplate = ((System.Xml.XmlNode)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PersonNoteTemplateAsync(System.Xml.XmlNode noteTemplate, string doctorID) {
            this.PersonNoteTemplateAsync(noteTemplate, doctorID, null);
        }
        
        /// <remarks/>
        public void PersonNoteTemplateAsync(System.Xml.XmlNode noteTemplate, string doctorID, object userState) {
            if ((this.PersonNoteTemplateOperationCompleted == null)) {
                this.PersonNoteTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPersonNoteTemplateOperationCompleted);
            }
            this.InvokeAsync("PersonNoteTemplate", new object[] {
                        noteTemplate,
                        doctorID}, this.PersonNoteTemplateOperationCompleted, userState);
        }
        
        private void OnPersonNoteTemplateOperationCompleted(object arg) {
            if ((this.PersonNoteTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PersonNoteTemplateCompleted(this, new PersonNoteTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/PersonNoteTemplateZlg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PersonNoteTemplateZlg(ref System.Xml.XmlNode noteTemplate, string doctorID) {
            object[] results = this.Invoke("PersonNoteTemplateZlg", new object[] {
                        noteTemplate,
                        doctorID});
            noteTemplate = ((System.Xml.XmlNode)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PersonNoteTemplateZlgAsync(System.Xml.XmlNode noteTemplate, string doctorID) {
            this.PersonNoteTemplateZlgAsync(noteTemplate, doctorID, null);
        }
        
        /// <remarks/>
        public void PersonNoteTemplateZlgAsync(System.Xml.XmlNode noteTemplate, string doctorID, object userState) {
            if ((this.PersonNoteTemplateZlgOperationCompleted == null)) {
                this.PersonNoteTemplateZlgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPersonNoteTemplateZlgOperationCompleted);
            }
            this.InvokeAsync("PersonNoteTemplateZlg", new object[] {
                        noteTemplate,
                        doctorID}, this.PersonNoteTemplateZlgOperationCompleted, userState);
        }
        
        private void OnPersonNoteTemplateZlgOperationCompleted(object arg) {
            if ((this.PersonNoteTemplateZlgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PersonNoteTemplateZlgCompleted(this, new PersonNoteTemplateZlgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/TemplateExist", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TemplateExist(string templateName, string departmentCode) {
            object[] results = this.Invoke("TemplateExist", new object[] {
                        templateName,
                        departmentCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TemplateExistAsync(string templateName, string departmentCode) {
            this.TemplateExistAsync(templateName, departmentCode, null);
        }
        
        /// <remarks/>
        public void TemplateExistAsync(string templateName, string departmentCode, object userState) {
            if ((this.TemplateExistOperationCompleted == null)) {
                this.TemplateExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTemplateExistOperationCompleted);
            }
            this.InvokeAsync("TemplateExist", new object[] {
                        templateName,
                        departmentCode}, this.TemplateExistOperationCompleted, userState);
        }
        
        private void OnTemplateExistOperationCompleted(object arg) {
            if ((this.TemplateExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TemplateExistCompleted(this, new TemplateExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/TemplateExistZlg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TemplateExistZlg(string templateName, string departmentCode) {
            object[] results = this.Invoke("TemplateExistZlg", new object[] {
                        templateName,
                        departmentCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TemplateExistZlgAsync(string templateName, string departmentCode) {
            this.TemplateExistZlgAsync(templateName, departmentCode, null);
        }
        
        /// <remarks/>
        public void TemplateExistZlgAsync(string templateName, string departmentCode, object userState) {
            if ((this.TemplateExistZlgOperationCompleted == null)) {
                this.TemplateExistZlgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTemplateExistZlgOperationCompleted);
            }
            this.InvokeAsync("TemplateExistZlg", new object[] {
                        templateName,
                        departmentCode}, this.TemplateExistZlgOperationCompleted, userState);
        }
        
        private void OnTemplateExistZlgOperationCompleted(object arg) {
            if ((this.TemplateExistZlgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TemplateExistZlgCompleted(this, new TemplateExistZlgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetEmrPattern", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmrPattern(string departmentCode, ref System.Xml.XmlNode emrPattern) {
            object[] results = this.Invoke("GetEmrPattern", new object[] {
                        departmentCode,
                        emrPattern});
            emrPattern = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrPatternAsync(string departmentCode, System.Xml.XmlNode emrPattern) {
            this.GetEmrPatternAsync(departmentCode, emrPattern, null);
        }
        
        /// <remarks/>
        public void GetEmrPatternAsync(string departmentCode, System.Xml.XmlNode emrPattern, object userState) {
            if ((this.GetEmrPatternOperationCompleted == null)) {
                this.GetEmrPatternOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrPatternOperationCompleted);
            }
            this.InvokeAsync("GetEmrPattern", new object[] {
                        departmentCode,
                        emrPattern}, this.GetEmrPatternOperationCompleted, userState);
        }
        
        private void OnGetEmrPatternOperationCompleted(object arg) {
            if ((this.GetEmrPatternCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrPatternCompleted(this, new GetEmrPatternCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/AddEmrPattern", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddEmrPattern(string opcode, string departmentCode, System.Xml.XmlNode emrPattern) {
            object[] results = this.Invoke("AddEmrPattern", new object[] {
                        opcode,
                        departmentCode,
                        emrPattern});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddEmrPatternAsync(string opcode, string departmentCode, System.Xml.XmlNode emrPattern) {
            this.AddEmrPatternAsync(opcode, departmentCode, emrPattern, null);
        }
        
        /// <remarks/>
        public void AddEmrPatternAsync(string opcode, string departmentCode, System.Xml.XmlNode emrPattern, object userState) {
            if ((this.AddEmrPatternOperationCompleted == null)) {
                this.AddEmrPatternOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEmrPatternOperationCompleted);
            }
            this.InvokeAsync("AddEmrPattern", new object[] {
                        opcode,
                        departmentCode,
                        emrPattern}, this.AddEmrPatternOperationCompleted, userState);
        }
        
        private void OnAddEmrPatternOperationCompleted(object arg) {
            if ((this.AddEmrPatternCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEmrPatternCompleted(this, new AddEmrPatternCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/AddEmrNoteIntoPatterns", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddEmrNoteIntoPatterns(string opcode, System.Xml.XmlNode emrNoteParent) {
            object[] results = this.Invoke("AddEmrNoteIntoPatterns", new object[] {
                        opcode,
                        emrNoteParent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddEmrNoteIntoPatternsAsync(string opcode, System.Xml.XmlNode emrNoteParent) {
            this.AddEmrNoteIntoPatternsAsync(opcode, emrNoteParent, null);
        }
        
        /// <remarks/>
        public void AddEmrNoteIntoPatternsAsync(string opcode, System.Xml.XmlNode emrNoteParent, object userState) {
            if ((this.AddEmrNoteIntoPatternsOperationCompleted == null)) {
                this.AddEmrNoteIntoPatternsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEmrNoteIntoPatternsOperationCompleted);
            }
            this.InvokeAsync("AddEmrNoteIntoPatterns", new object[] {
                        opcode,
                        emrNoteParent}, this.AddEmrNoteIntoPatternsOperationCompleted, userState);
        }
        
        private void OnAddEmrNoteIntoPatternsOperationCompleted(object arg) {
            if ((this.AddEmrNoteIntoPatternsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEmrNoteIntoPatternsCompleted(this, new AddEmrNoteIntoPatternsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/RemoveEmrNoteFromPatterns", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RemoveEmrNoteFromPatterns(string opcode, string noteID) {
            object[] results = this.Invoke("RemoveEmrNoteFromPatterns", new object[] {
                        opcode,
                        noteID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveEmrNoteFromPatternsAsync(string opcode, string noteID) {
            this.RemoveEmrNoteFromPatternsAsync(opcode, noteID, null);
        }
        
        /// <remarks/>
        public void RemoveEmrNoteFromPatternsAsync(string opcode, string noteID, object userState) {
            if ((this.RemoveEmrNoteFromPatternsOperationCompleted == null)) {
                this.RemoveEmrNoteFromPatternsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveEmrNoteFromPatternsOperationCompleted);
            }
            this.InvokeAsync("RemoveEmrNoteFromPatterns", new object[] {
                        opcode,
                        noteID}, this.RemoveEmrNoteFromPatternsOperationCompleted, userState);
        }
        
        private void OnRemoveEmrNoteFromPatternsOperationCompleted(object arg) {
            if ((this.RemoveEmrNoteFromPatternsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveEmrNoteFromPatternsCompleted(this, new RemoveEmrNoteFromPatternsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/ReplaceEmrNoteInPatterns", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReplaceEmrNoteInPatterns(string opcode, System.Xml.XmlNode newEmrNoteParent) {
            object[] results = this.Invoke("ReplaceEmrNoteInPatterns", new object[] {
                        opcode,
                        newEmrNoteParent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReplaceEmrNoteInPatternsAsync(string opcode, System.Xml.XmlNode newEmrNoteParent) {
            this.ReplaceEmrNoteInPatternsAsync(opcode, newEmrNoteParent, null);
        }
        
        /// <remarks/>
        public void ReplaceEmrNoteInPatternsAsync(string opcode, System.Xml.XmlNode newEmrNoteParent, object userState) {
            if ((this.ReplaceEmrNoteInPatternsOperationCompleted == null)) {
                this.ReplaceEmrNoteInPatternsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReplaceEmrNoteInPatternsOperationCompleted);
            }
            this.InvokeAsync("ReplaceEmrNoteInPatterns", new object[] {
                        opcode,
                        newEmrNoteParent}, this.ReplaceEmrNoteInPatternsOperationCompleted, userState);
        }
        
        private void OnReplaceEmrNoteInPatternsOperationCompleted(object arg) {
            if ((this.ReplaceEmrNoteInPatternsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReplaceEmrNoteInPatternsCompleted(this, new ReplaceEmrNoteInPatternsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/ReplaceEmrNoteInPatternForOneDepartment", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReplaceEmrNoteInPatternForOneDepartment(string opcode, string department, System.Xml.XmlNode newEmrNoteParent) {
            object[] results = this.Invoke("ReplaceEmrNoteInPatternForOneDepartment", new object[] {
                        opcode,
                        department,
                        newEmrNoteParent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReplaceEmrNoteInPatternForOneDepartmentAsync(string opcode, string department, System.Xml.XmlNode newEmrNoteParent) {
            this.ReplaceEmrNoteInPatternForOneDepartmentAsync(opcode, department, newEmrNoteParent, null);
        }
        
        /// <remarks/>
        public void ReplaceEmrNoteInPatternForOneDepartmentAsync(string opcode, string department, System.Xml.XmlNode newEmrNoteParent, object userState) {
            if ((this.ReplaceEmrNoteInPatternForOneDepartmentOperationCompleted == null)) {
                this.ReplaceEmrNoteInPatternForOneDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReplaceEmrNoteInPatternForOneDepartmentOperationCompleted);
            }
            this.InvokeAsync("ReplaceEmrNoteInPatternForOneDepartment", new object[] {
                        opcode,
                        department,
                        newEmrNoteParent}, this.ReplaceEmrNoteInPatternForOneDepartmentOperationCompleted, userState);
        }
        
        private void OnReplaceEmrNoteInPatternForOneDepartmentOperationCompleted(object arg) {
            if ((this.ReplaceEmrNoteInPatternForOneDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReplaceEmrNoteInPatternForOneDepartmentCompleted(this, new ReplaceEmrNoteInPatternForOneDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/AddEndPrintGroupInPatterns", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddEndPrintGroupInPatterns(string opcode, System.Xml.XmlNode group) {
            object[] results = this.Invoke("AddEndPrintGroupInPatterns", new object[] {
                        opcode,
                        group});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddEndPrintGroupInPatternsAsync(string opcode, System.Xml.XmlNode group) {
            this.AddEndPrintGroupInPatternsAsync(opcode, group, null);
        }
        
        /// <remarks/>
        public void AddEndPrintGroupInPatternsAsync(string opcode, System.Xml.XmlNode group, object userState) {
            if ((this.AddEndPrintGroupInPatternsOperationCompleted == null)) {
                this.AddEndPrintGroupInPatternsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEndPrintGroupInPatternsOperationCompleted);
            }
            this.InvokeAsync("AddEndPrintGroupInPatterns", new object[] {
                        opcode,
                        group}, this.AddEndPrintGroupInPatternsOperationCompleted, userState);
        }
        
        private void OnAddEndPrintGroupInPatternsOperationCompleted(object arg) {
            if ((this.AddEndPrintGroupInPatternsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEndPrintGroupInPatternsCompleted(this, new AddEndPrintGroupInPatternsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/AddEndPrintGroupInPattern", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddEndPrintGroupInPattern(string opcode, string department, System.Xml.XmlNode group) {
            object[] results = this.Invoke("AddEndPrintGroupInPattern", new object[] {
                        opcode,
                        department,
                        group});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddEndPrintGroupInPatternAsync(string opcode, string department, System.Xml.XmlNode group) {
            this.AddEndPrintGroupInPatternAsync(opcode, department, group, null);
        }
        
        /// <remarks/>
        public void AddEndPrintGroupInPatternAsync(string opcode, string department, System.Xml.XmlNode group, object userState) {
            if ((this.AddEndPrintGroupInPatternOperationCompleted == null)) {
                this.AddEndPrintGroupInPatternOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEndPrintGroupInPatternOperationCompleted);
            }
            this.InvokeAsync("AddEndPrintGroupInPattern", new object[] {
                        opcode,
                        department,
                        group}, this.AddEndPrintGroupInPatternOperationCompleted, userState);
        }
        
        private void OnAddEndPrintGroupInPatternOperationCompleted(object arg) {
            if ((this.AddEndPrintGroupInPatternCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEndPrintGroupInPatternCompleted(this, new AddEndPrintGroupInPatternCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/AddEmrBlocks", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddEmrBlocks(string departmentCode, System.Xml.XmlNode emrBlocks) {
            object[] results = this.Invoke("AddEmrBlocks", new object[] {
                        departmentCode,
                        emrBlocks});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddEmrBlocksAsync(string departmentCode, System.Xml.XmlNode emrBlocks) {
            this.AddEmrBlocksAsync(departmentCode, emrBlocks, null);
        }
        
        /// <remarks/>
        public void AddEmrBlocksAsync(string departmentCode, System.Xml.XmlNode emrBlocks, object userState) {
            if ((this.AddEmrBlocksOperationCompleted == null)) {
                this.AddEmrBlocksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEmrBlocksOperationCompleted);
            }
            this.InvokeAsync("AddEmrBlocks", new object[] {
                        departmentCode,
                        emrBlocks}, this.AddEmrBlocksOperationCompleted, userState);
        }
        
        private void OnAddEmrBlocksOperationCompleted(object arg) {
            if ((this.AddEmrBlocksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEmrBlocksCompleted(this, new AddEmrBlocksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/AddEmrBlock", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddEmrBlock(string departmentCode, System.Xml.XmlNode emrBlock) {
            object[] results = this.Invoke("AddEmrBlock", new object[] {
                        departmentCode,
                        emrBlock});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddEmrBlockAsync(string departmentCode, System.Xml.XmlNode emrBlock) {
            this.AddEmrBlockAsync(departmentCode, emrBlock, null);
        }
        
        /// <remarks/>
        public void AddEmrBlockAsync(string departmentCode, System.Xml.XmlNode emrBlock, object userState) {
            if ((this.AddEmrBlockOperationCompleted == null)) {
                this.AddEmrBlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEmrBlockOperationCompleted);
            }
            this.InvokeAsync("AddEmrBlock", new object[] {
                        departmentCode,
                        emrBlock}, this.AddEmrBlockOperationCompleted, userState);
        }
        
        private void OnAddEmrBlockOperationCompleted(object arg) {
            if ((this.AddEmrBlockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEmrBlockCompleted(this, new AddEmrBlockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateEmrBlock", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateEmrBlock(int pk, System.Xml.XmlNode block) {
            object[] results = this.Invoke("UpdateEmrBlock", new object[] {
                        pk,
                        block});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmrBlockAsync(int pk, System.Xml.XmlNode block) {
            this.UpdateEmrBlockAsync(pk, block, null);
        }
        
        /// <remarks/>
        public void UpdateEmrBlockAsync(int pk, System.Xml.XmlNode block, object userState) {
            if ((this.UpdateEmrBlockOperationCompleted == null)) {
                this.UpdateEmrBlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmrBlockOperationCompleted);
            }
            this.InvokeAsync("UpdateEmrBlock", new object[] {
                        pk,
                        block}, this.UpdateEmrBlockOperationCompleted, userState);
        }
        
        private void OnUpdateEmrBlockOperationCompleted(object arg) {
            if ((this.UpdateEmrBlockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmrBlockCompleted(this, new UpdateEmrBlockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/DeleteEmrBlock", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteEmrBlock(int pk) {
            object[] results = this.Invoke("DeleteEmrBlock", new object[] {
                        pk});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmrBlockAsync(int pk) {
            this.DeleteEmrBlockAsync(pk, null);
        }
        
        /// <remarks/>
        public void DeleteEmrBlockAsync(int pk, object userState) {
            if ((this.DeleteEmrBlockOperationCompleted == null)) {
                this.DeleteEmrBlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmrBlockOperationCompleted);
            }
            this.InvokeAsync("DeleteEmrBlock", new object[] {
                        pk}, this.DeleteEmrBlockOperationCompleted, userState);
        }
        
        private void OnDeleteEmrBlockOperationCompleted(object arg) {
            if ((this.DeleteEmrBlockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmrBlockCompleted(this, new DeleteEmrBlockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetEmrBlocksForOneDepartment", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetEmrBlocksForOneDepartment(string departmentCode, ref System.Xml.XmlNode emrBlocks) {
            object[] results = this.Invoke("GetEmrBlocksForOneDepartment", new object[] {
                        departmentCode,
                        emrBlocks});
            emrBlocks = ((System.Xml.XmlNode)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrBlocksForOneDepartmentAsync(string departmentCode, System.Xml.XmlNode emrBlocks) {
            this.GetEmrBlocksForOneDepartmentAsync(departmentCode, emrBlocks, null);
        }
        
        /// <remarks/>
        public void GetEmrBlocksForOneDepartmentAsync(string departmentCode, System.Xml.XmlNode emrBlocks, object userState) {
            if ((this.GetEmrBlocksForOneDepartmentOperationCompleted == null)) {
                this.GetEmrBlocksForOneDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrBlocksForOneDepartmentOperationCompleted);
            }
            this.InvokeAsync("GetEmrBlocksForOneDepartment", new object[] {
                        departmentCode,
                        emrBlocks}, this.GetEmrBlocksForOneDepartmentOperationCompleted, userState);
        }
        
        private void OnGetEmrBlocksForOneDepartmentOperationCompleted(object arg) {
            if ((this.GetEmrBlocksForOneDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrBlocksForOneDepartmentCompleted(this, new GetEmrBlocksForOneDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetEmrBlockKeys", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetEmrBlockKeys(string departmentCode, ref System.Xml.XmlNode blockKeys) {
            object[] results = this.Invoke("GetEmrBlockKeys", new object[] {
                        departmentCode,
                        blockKeys});
            blockKeys = ((System.Xml.XmlNode)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrBlockKeysAsync(string departmentCode, System.Xml.XmlNode blockKeys) {
            this.GetEmrBlockKeysAsync(departmentCode, blockKeys, null);
        }
        
        /// <remarks/>
        public void GetEmrBlockKeysAsync(string departmentCode, System.Xml.XmlNode blockKeys, object userState) {
            if ((this.GetEmrBlockKeysOperationCompleted == null)) {
                this.GetEmrBlockKeysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrBlockKeysOperationCompleted);
            }
            this.InvokeAsync("GetEmrBlockKeys", new object[] {
                        departmentCode,
                        blockKeys}, this.GetEmrBlockKeysOperationCompleted, userState);
        }
        
        private void OnGetEmrBlockKeysOperationCompleted(object arg) {
            if ((this.GetEmrBlockKeysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrBlockKeysCompleted(this, new GetEmrBlockKeysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetEmrBlock", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetEmrBlock(int pk, ref System.Xml.XmlNode emrBlock) {
            object[] results = this.Invoke("GetEmrBlock", new object[] {
                        pk,
                        emrBlock});
            emrBlock = ((System.Xml.XmlNode)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrBlockAsync(int pk, System.Xml.XmlNode emrBlock) {
            this.GetEmrBlockAsync(pk, emrBlock, null);
        }
        
        /// <remarks/>
        public void GetEmrBlockAsync(int pk, System.Xml.XmlNode emrBlock, object userState) {
            if ((this.GetEmrBlockOperationCompleted == null)) {
                this.GetEmrBlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrBlockOperationCompleted);
            }
            this.InvokeAsync("GetEmrBlock", new object[] {
                        pk,
                        emrBlock}, this.GetEmrBlockOperationCompleted, userState);
        }
        
        private void OnGetEmrBlockOperationCompleted(object arg) {
            if ((this.GetEmrBlockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrBlockCompleted(this, new GetEmrBlockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/ExportEmrBlocks", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportEmrBlocks(ref System.Xml.XmlNode emrBlocks) {
            object[] results = this.Invoke("ExportEmrBlocks", new object[] {
                        emrBlocks});
            emrBlocks = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportEmrBlocksAsync(System.Xml.XmlNode emrBlocks) {
            this.ExportEmrBlocksAsync(emrBlocks, null);
        }
        
        /// <remarks/>
        public void ExportEmrBlocksAsync(System.Xml.XmlNode emrBlocks, object userState) {
            if ((this.ExportEmrBlocksOperationCompleted == null)) {
                this.ExportEmrBlocksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportEmrBlocksOperationCompleted);
            }
            this.InvokeAsync("ExportEmrBlocks", new object[] {
                        emrBlocks}, this.ExportEmrBlocksOperationCompleted, userState);
        }
        
        private void OnExportEmrBlocksOperationCompleted(object arg) {
            if ((this.ExportEmrBlocksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportEmrBlocksCompleted(this, new ExportEmrBlocksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/AddPicture", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddPicture(string picName, string departmentCode, System.Xml.XmlNode picture) {
            object[] results = this.Invoke("AddPicture", new object[] {
                        picName,
                        departmentCode,
                        picture});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddPictureAsync(string picName, string departmentCode, System.Xml.XmlNode picture) {
            this.AddPictureAsync(picName, departmentCode, picture, null);
        }
        
        /// <remarks/>
        public void AddPictureAsync(string picName, string departmentCode, System.Xml.XmlNode picture, object userState) {
            if ((this.AddPictureOperationCompleted == null)) {
                this.AddPictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPictureOperationCompleted);
            }
            this.InvokeAsync("AddPicture", new object[] {
                        picName,
                        departmentCode,
                        picture}, this.AddPictureOperationCompleted, userState);
        }
        
        private void OnAddPictureOperationCompleted(object arg) {
            if ((this.AddPictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPictureCompleted(this, new AddPictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetPictures", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetPictures(string departmentCode) {
            object[] results = this.Invoke("GetPictures", new object[] {
                        departmentCode});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetPicturesAsync(string departmentCode) {
            this.GetPicturesAsync(departmentCode, null);
        }
        
        /// <remarks/>
        public void GetPicturesAsync(string departmentCode, object userState) {
            if ((this.GetPicturesOperationCompleted == null)) {
                this.GetPicturesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPicturesOperationCompleted);
            }
            this.InvokeAsync("GetPictures", new object[] {
                        departmentCode}, this.GetPicturesOperationCompleted, userState);
        }
        
        private void OnGetPicturesOperationCompleted(object arg) {
            if ((this.GetPicturesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPicturesCompleted(this, new GetPicturesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/DeletePicture", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePicture(string picName, string departmentCode) {
            this.Invoke("DeletePicture", new object[] {
                        picName,
                        departmentCode});
        }
        
        /// <remarks/>
        public void DeletePictureAsync(string picName, string departmentCode) {
            this.DeletePictureAsync(picName, departmentCode, null);
        }
        
        /// <remarks/>
        public void DeletePictureAsync(string picName, string departmentCode, object userState) {
            if ((this.DeletePictureOperationCompleted == null)) {
                this.DeletePictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePictureOperationCompleted);
            }
            this.InvokeAsync("DeletePicture", new object[] {
                        picName,
                        departmentCode}, this.DeletePictureOperationCompleted, userState);
        }
        
        private void OnDeletePictureOperationCompleted(object arg) {
            if ((this.DeletePictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePictureCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/ConnectSql", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ConnectSql() {
            object[] results = this.Invoke("ConnectSql", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConnectSqlAsync() {
            this.ConnectSqlAsync(null);
        }
        
        /// <remarks/>
        public void ConnectSqlAsync(object userState) {
            if ((this.ConnectSqlOperationCompleted == null)) {
                this.ConnectSqlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnectSqlOperationCompleted);
            }
            this.InvokeAsync("ConnectSql", new object[0], this.ConnectSqlOperationCompleted, userState);
        }
        
        private void OnConnectSqlOperationCompleted(object arg) {
            if ((this.ConnectSqlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConnectSqlCompleted(this, new ConnectSqlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/AddNotePhrases", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddNotePhrases(string departmentCode, string doctorID, System.Xml.XmlNode emrPhrases) {
            object[] results = this.Invoke("AddNotePhrases", new object[] {
                        departmentCode,
                        doctorID,
                        emrPhrases});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddNotePhrasesAsync(string departmentCode, string doctorID, System.Xml.XmlNode emrPhrases) {
            this.AddNotePhrasesAsync(departmentCode, doctorID, emrPhrases, null);
        }
        
        /// <remarks/>
        public void AddNotePhrasesAsync(string departmentCode, string doctorID, System.Xml.XmlNode emrPhrases, object userState) {
            if ((this.AddNotePhrasesOperationCompleted == null)) {
                this.AddNotePhrasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNotePhrasesOperationCompleted);
            }
            this.InvokeAsync("AddNotePhrases", new object[] {
                        departmentCode,
                        doctorID,
                        emrPhrases}, this.AddNotePhrasesOperationCompleted, userState);
        }
        
        private void OnAddNotePhrasesOperationCompleted(object arg) {
            if ((this.AddNotePhrasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNotePhrasesCompleted(this, new AddNotePhrasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetNotePhrases", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNotePhrases(string departmentCode, string doctorID, ref System.Xml.XmlNode emrPhrases) {
            object[] results = this.Invoke("GetNotePhrases", new object[] {
                        departmentCode,
                        doctorID,
                        emrPhrases});
            emrPhrases = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNotePhrasesAsync(string departmentCode, string doctorID, System.Xml.XmlNode emrPhrases) {
            this.GetNotePhrasesAsync(departmentCode, doctorID, emrPhrases, null);
        }
        
        /// <remarks/>
        public void GetNotePhrasesAsync(string departmentCode, string doctorID, System.Xml.XmlNode emrPhrases, object userState) {
            if ((this.GetNotePhrasesOperationCompleted == null)) {
                this.GetNotePhrasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNotePhrasesOperationCompleted);
            }
            this.InvokeAsync("GetNotePhrases", new object[] {
                        departmentCode,
                        doctorID,
                        emrPhrases}, this.GetNotePhrasesOperationCompleted, userState);
        }
        
        private void OnGetNotePhrasesOperationCompleted(object arg) {
            if ((this.GetNotePhrasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNotePhrasesCompleted(this, new GetNotePhrasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/ExportNotePhrases", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportNotePhrases(ref System.Xml.XmlNode notePhrasesSet) {
            object[] results = this.Invoke("ExportNotePhrases", new object[] {
                        notePhrasesSet});
            notePhrasesSet = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportNotePhrasesAsync(System.Xml.XmlNode notePhrasesSet) {
            this.ExportNotePhrasesAsync(notePhrasesSet, null);
        }
        
        /// <remarks/>
        public void ExportNotePhrasesAsync(System.Xml.XmlNode notePhrasesSet, object userState) {
            if ((this.ExportNotePhrasesOperationCompleted == null)) {
                this.ExportNotePhrasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportNotePhrasesOperationCompleted);
            }
            this.InvokeAsync("ExportNotePhrases", new object[] {
                        notePhrasesSet}, this.ExportNotePhrasesOperationCompleted, userState);
        }
        
        private void OnExportNotePhrasesOperationCompleted(object arg) {
            if ((this.ExportNotePhrasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportNotePhrasesCompleted(this, new ExportNotePhrasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/Archive", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Archive(string registryID) {
            object[] results = this.Invoke("Archive", new object[] {
                        registryID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ArchiveAsync(string registryID) {
            this.ArchiveAsync(registryID, null);
        }
        
        /// <remarks/>
        public void ArchiveAsync(string registryID, object userState) {
            if ((this.ArchiveOperationCompleted == null)) {
                this.ArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnArchiveOperationCompleted);
            }
            this.InvokeAsync("Archive", new object[] {
                        registryID}, this.ArchiveOperationCompleted, userState);
        }
        
        private void OnArchiveOperationCompleted(object arg) {
            if ((this.ArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ArchiveCompleted(this, new ArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/ArchiveByMe", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ArchiveByMe() {
            this.Invoke("ArchiveByMe", new object[0]);
        }
        
        /// <remarks/>
        public void ArchiveByMeAsync() {
            this.ArchiveByMeAsync(null);
        }
        
        /// <remarks/>
        public void ArchiveByMeAsync(object userState) {
            if ((this.ArchiveByMeOperationCompleted == null)) {
                this.ArchiveByMeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnArchiveByMeOperationCompleted);
            }
            this.InvokeAsync("ArchiveByMe", new object[0], this.ArchiveByMeOperationCompleted, userState);
        }
        
        private void OnArchiveByMeOperationCompleted(object arg) {
            if ((this.ArchiveByMeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ArchiveByMeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/ArchiveBatch", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ArchiveBatch(System.Xml.XmlNode registryIDs) {
            object[] results = this.Invoke("ArchiveBatch", new object[] {
                        registryIDs});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ArchiveBatchAsync(System.Xml.XmlNode registryIDs) {
            this.ArchiveBatchAsync(registryIDs, null);
        }
        
        /// <remarks/>
        public void ArchiveBatchAsync(System.Xml.XmlNode registryIDs, object userState) {
            if ((this.ArchiveBatchOperationCompleted == null)) {
                this.ArchiveBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnArchiveBatchOperationCompleted);
            }
            this.InvokeAsync("ArchiveBatch", new object[] {
                        registryIDs}, this.ArchiveBatchOperationCompleted, userState);
        }
        
        private void OnArchiveBatchOperationCompleted(object arg) {
            if ((this.ArchiveBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ArchiveBatchCompleted(this, new ArchiveBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/Archive_ArchiveNum", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Archive_ArchiveNum(string ArchiveNum) {
            object[] results = this.Invoke("Archive_ArchiveNum", new object[] {
                        ArchiveNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Archive_ArchiveNumAsync(string ArchiveNum) {
            this.Archive_ArchiveNumAsync(ArchiveNum, null);
        }
        
        /// <remarks/>
        public void Archive_ArchiveNumAsync(string ArchiveNum, object userState) {
            if ((this.Archive_ArchiveNumOperationCompleted == null)) {
                this.Archive_ArchiveNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnArchive_ArchiveNumOperationCompleted);
            }
            this.InvokeAsync("Archive_ArchiveNum", new object[] {
                        ArchiveNum}, this.Archive_ArchiveNumOperationCompleted, userState);
        }
        
        private void OnArchive_ArchiveNumOperationCompleted(object arg) {
            if ((this.Archive_ArchiveNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Archive_ArchiveNumCompleted(this, new Archive_ArchiveNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetLastWriteTime", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetLastWriteTime(System.Xml.XmlNode inEmrs, ref System.Xml.XmlNode outEmrs) {
            object[] results = this.Invoke("GetLastWriteTime", new object[] {
                        inEmrs,
                        outEmrs});
            outEmrs = ((System.Xml.XmlNode)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastWriteTimeAsync(System.Xml.XmlNode inEmrs, System.Xml.XmlNode outEmrs) {
            this.GetLastWriteTimeAsync(inEmrs, outEmrs, null);
        }
        
        /// <remarks/>
        public void GetLastWriteTimeAsync(System.Xml.XmlNode inEmrs, System.Xml.XmlNode outEmrs, object userState) {
            if ((this.GetLastWriteTimeOperationCompleted == null)) {
                this.GetLastWriteTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastWriteTimeOperationCompleted);
            }
            this.InvokeAsync("GetLastWriteTime", new object[] {
                        inEmrs,
                        outEmrs}, this.GetLastWriteTimeOperationCompleted, userState);
        }
        
        private void OnGetLastWriteTimeOperationCompleted(object arg) {
            if ((this.GetLastWriteTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastWriteTimeCompleted(this, new GetLastWriteTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/Savenew", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Savenew(
                    string strRegistryID, 
                    string strInSituation, 
                    string strSubjective, 
                    string strExam, 
                    string strDiagnose, 
                    string HistoryNow, 
                    string HistoryPast, 
                    string Test, 
                    string Other, 
                    string Other1, 
                    string Other2, 
                    string Other3, 
                    string Other4, 
                    string Other5, 
                    string Other6, 
                    string Other7, 
                    string Other8, 
                    string Other9) {
            object[] results = this.Invoke("Savenew", new object[] {
                        strRegistryID,
                        strInSituation,
                        strSubjective,
                        strExam,
                        strDiagnose,
                        HistoryNow,
                        HistoryPast,
                        Test,
                        Other,
                        Other1,
                        Other2,
                        Other3,
                        Other4,
                        Other5,
                        Other6,
                        Other7,
                        Other8,
                        Other9});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SavenewAsync(
                    string strRegistryID, 
                    string strInSituation, 
                    string strSubjective, 
                    string strExam, 
                    string strDiagnose, 
                    string HistoryNow, 
                    string HistoryPast, 
                    string Test, 
                    string Other, 
                    string Other1, 
                    string Other2, 
                    string Other3, 
                    string Other4, 
                    string Other5, 
                    string Other6, 
                    string Other7, 
                    string Other8, 
                    string Other9) {
            this.SavenewAsync(strRegistryID, strInSituation, strSubjective, strExam, strDiagnose, HistoryNow, HistoryPast, Test, Other, Other1, Other2, Other3, Other4, Other5, Other6, Other7, Other8, Other9, null);
        }
        
        /// <remarks/>
        public void SavenewAsync(
                    string strRegistryID, 
                    string strInSituation, 
                    string strSubjective, 
                    string strExam, 
                    string strDiagnose, 
                    string HistoryNow, 
                    string HistoryPast, 
                    string Test, 
                    string Other, 
                    string Other1, 
                    string Other2, 
                    string Other3, 
                    string Other4, 
                    string Other5, 
                    string Other6, 
                    string Other7, 
                    string Other8, 
                    string Other9, 
                    object userState) {
            if ((this.SavenewOperationCompleted == null)) {
                this.SavenewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavenewOperationCompleted);
            }
            this.InvokeAsync("Savenew", new object[] {
                        strRegistryID,
                        strInSituation,
                        strSubjective,
                        strExam,
                        strDiagnose,
                        HistoryNow,
                        HistoryPast,
                        Test,
                        Other,
                        Other1,
                        Other2,
                        Other3,
                        Other4,
                        Other5,
                        Other6,
                        Other7,
                        Other8,
                        Other9}, this.SavenewOperationCompleted, userState);
        }
        
        private void OnSavenewOperationCompleted(object arg) {
            if ((this.SavenewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavenewCompleted(this, new SavenewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateSecuriy", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateSecuriy(System.Xml.XmlNode root) {
            object[] results = this.Invoke("UpdateSecuriy", new object[] {
                        root});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSecuriyAsync(System.Xml.XmlNode root) {
            this.UpdateSecuriyAsync(root, null);
        }
        
        /// <remarks/>
        public void UpdateSecuriyAsync(System.Xml.XmlNode root, object userState) {
            if ((this.UpdateSecuriyOperationCompleted == null)) {
                this.UpdateSecuriyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSecuriyOperationCompleted);
            }
            this.InvokeAsync("UpdateSecuriy", new object[] {
                        root}, this.UpdateSecuriyOperationCompleted, userState);
        }
        
        private void OnUpdateSecuriyOperationCompleted(object arg) {
            if ((this.UpdateSecuriyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSecuriyCompleted(this, new UpdateSecuriyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetSecurityConfig", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSecurityConfig(ref System.Xml.XmlNode content) {
            object[] results = this.Invoke("GetSecurityConfig", new object[] {
                        content});
            content = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSecurityConfigAsync(System.Xml.XmlNode content) {
            this.GetSecurityConfigAsync(content, null);
        }
        
        /// <remarks/>
        public void GetSecurityConfigAsync(System.Xml.XmlNode content, object userState) {
            if ((this.GetSecurityConfigOperationCompleted == null)) {
                this.GetSecurityConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecurityConfigOperationCompleted);
            }
            this.InvokeAsync("GetSecurityConfig", new object[] {
                        content}, this.GetSecurityConfigOperationCompleted, userState);
        }
        
        private void OnGetSecurityConfigOperationCompleted(object arg) {
            if ((this.GetSecurityConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecurityConfigCompleted(this, new GetSecurityConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetPassword", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetPassword(ref string passwd) {
            object[] results = this.Invoke("GetPassword", new object[] {
                        passwd});
            passwd = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetPasswordAsync(string passwd) {
            this.GetPasswordAsync(passwd, null);
        }
        
        /// <remarks/>
        public void GetPasswordAsync(string passwd, object userState) {
            if ((this.GetPasswordOperationCompleted == null)) {
                this.GetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPasswordOperationCompleted);
            }
            this.InvokeAsync("GetPassword", new object[] {
                        passwd}, this.GetPasswordOperationCompleted, userState);
        }
        
        private void OnGetPasswordOperationCompleted(object arg) {
            if ((this.GetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPasswordCompleted(this, new GetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/ReplacePassword", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ReplacePassword(string passwd) {
            object[] results = this.Invoke("ReplacePassword", new object[] {
                        passwd});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ReplacePasswordAsync(string passwd) {
            this.ReplacePasswordAsync(passwd, null);
        }
        
        /// <remarks/>
        public void ReplacePasswordAsync(string passwd, object userState) {
            if ((this.ReplacePasswordOperationCompleted == null)) {
                this.ReplacePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReplacePasswordOperationCompleted);
            }
            this.InvokeAsync("ReplacePassword", new object[] {
                        passwd}, this.ReplacePasswordOperationCompleted, userState);
        }
        
        private void OnReplacePasswordOperationCompleted(object arg) {
            if ((this.ReplacePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReplacePasswordCompleted(this, new ReplacePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/EmrEncoder", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EmrEncoder([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] indata, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] ref byte[] outdata) {
            object[] results = this.Invoke("EmrEncoder", new object[] {
                        indata,
                        outdata});
            outdata = ((byte[])(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EmrEncoderAsync(byte[] indata, byte[] outdata) {
            this.EmrEncoderAsync(indata, outdata, null);
        }
        
        /// <remarks/>
        public void EmrEncoderAsync(byte[] indata, byte[] outdata, object userState) {
            if ((this.EmrEncoderOperationCompleted == null)) {
                this.EmrEncoderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrEncoderOperationCompleted);
            }
            this.InvokeAsync("EmrEncoder", new object[] {
                        indata,
                        outdata}, this.EmrEncoderOperationCompleted, userState);
        }
        
        private void OnEmrEncoderOperationCompleted(object arg) {
            if ((this.EmrEncoderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrEncoderCompleted(this, new EmrEncoderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/EmrDecoder", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EmrDecoder([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] indata, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] ref byte[] outdata) {
            object[] results = this.Invoke("EmrDecoder", new object[] {
                        indata,
                        outdata});
            outdata = ((byte[])(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EmrDecoderAsync(byte[] indata, byte[] outdata) {
            this.EmrDecoderAsync(indata, outdata, null);
        }
        
        /// <remarks/>
        public void EmrDecoderAsync(byte[] indata, byte[] outdata, object userState) {
            if ((this.EmrDecoderOperationCompleted == null)) {
                this.EmrDecoderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmrDecoderOperationCompleted);
            }
            this.InvokeAsync("EmrDecoder", new object[] {
                        indata,
                        outdata}, this.EmrDecoderOperationCompleted, userState);
        }
        
        private void OnEmrDecoderOperationCompleted(object arg) {
            if ((this.EmrDecoderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmrDecoderCompleted(this, new EmrDecoderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GrantReaderForRegistry", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GrantReaderForRegistry(GrantReader gr) {
            object[] results = this.Invoke("GrantReaderForRegistry", new object[] {
                        gr});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GrantReaderForRegistryAsync(GrantReader gr) {
            this.GrantReaderForRegistryAsync(gr, null);
        }
        
        /// <remarks/>
        public void GrantReaderForRegistryAsync(GrantReader gr, object userState) {
            if ((this.GrantReaderForRegistryOperationCompleted == null)) {
                this.GrantReaderForRegistryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGrantReaderForRegistryOperationCompleted);
            }
            this.InvokeAsync("GrantReaderForRegistry", new object[] {
                        gr}, this.GrantReaderForRegistryOperationCompleted, userState);
        }
        
        private void OnGrantReaderForRegistryOperationCompleted(object arg) {
            if ((this.GrantReaderForRegistryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GrantReaderForRegistryCompleted(this, new GrantReaderForRegistryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/HavePrivilegeForRegistry", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HavePrivilegeForRegistry(string registryID, string doctorID) {
            object[] results = this.Invoke("HavePrivilegeForRegistry", new object[] {
                        registryID,
                        doctorID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HavePrivilegeForRegistryAsync(string registryID, string doctorID) {
            this.HavePrivilegeForRegistryAsync(registryID, doctorID, null);
        }
        
        /// <remarks/>
        public void HavePrivilegeForRegistryAsync(string registryID, string doctorID, object userState) {
            if ((this.HavePrivilegeForRegistryOperationCompleted == null)) {
                this.HavePrivilegeForRegistryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHavePrivilegeForRegistryOperationCompleted);
            }
            this.InvokeAsync("HavePrivilegeForRegistry", new object[] {
                        registryID,
                        doctorID}, this.HavePrivilegeForRegistryOperationCompleted, userState);
        }
        
        private void OnHavePrivilegeForRegistryOperationCompleted(object arg) {
            if ((this.HavePrivilegeForRegistryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HavePrivilegeForRegistryCompleted(this, new HavePrivilegeForRegistryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/AddTrust", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddTrust(string deputed, string deputing, System.DateTime end, string opcode) {
            object[] results = this.Invoke("AddTrust", new object[] {
                        deputed,
                        deputing,
                        end,
                        opcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrustAsync(string deputed, string deputing, System.DateTime end, string opcode) {
            this.AddTrustAsync(deputed, deputing, end, opcode, null);
        }
        
        /// <remarks/>
        public void AddTrustAsync(string deputed, string deputing, System.DateTime end, string opcode, object userState) {
            if ((this.AddTrustOperationCompleted == null)) {
                this.AddTrustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrustOperationCompleted);
            }
            this.InvokeAsync("AddTrust", new object[] {
                        deputed,
                        deputing,
                        end,
                        opcode}, this.AddTrustOperationCompleted, userState);
        }
        
        private void OnAddTrustOperationCompleted(object arg) {
            if ((this.AddTrustCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrustCompleted(this, new AddTrustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/IsTruster", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsTruster(string opcode, string doctor) {
            object[] results = this.Invoke("IsTruster", new object[] {
                        opcode,
                        doctor});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsTrusterAsync(string opcode, string doctor) {
            this.IsTrusterAsync(opcode, doctor, null);
        }
        
        /// <remarks/>
        public void IsTrusterAsync(string opcode, string doctor, object userState) {
            if ((this.IsTrusterOperationCompleted == null)) {
                this.IsTrusterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsTrusterOperationCompleted);
            }
            this.InvokeAsync("IsTruster", new object[] {
                        opcode,
                        doctor}, this.IsTrusterOperationCompleted, userState);
        }
        
        private void OnIsTrusterOperationCompleted(object arg) {
            if ((this.IsTrusterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsTrusterCompleted(this, new IsTrusterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/AddComponet", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddComponet(string name, System.Xml.XmlNode component) {
            object[] results = this.Invoke("AddComponet", new object[] {
                        name,
                        component});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddComponetAsync(string name, System.Xml.XmlNode component) {
            this.AddComponetAsync(name, component, null);
        }
        
        /// <remarks/>
        public void AddComponetAsync(string name, System.Xml.XmlNode component, object userState) {
            if ((this.AddComponetOperationCompleted == null)) {
                this.AddComponetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddComponetOperationCompleted);
            }
            this.InvokeAsync("AddComponet", new object[] {
                        name,
                        component}, this.AddComponetOperationCompleted, userState);
        }
        
        private void OnAddComponetOperationCompleted(object arg) {
            if ((this.AddComponetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddComponetCompleted(this, new AddComponetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetComponet", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetComponet(string name, ref System.Xml.XmlNode component) {
            object[] results = this.Invoke("GetComponet", new object[] {
                        name,
                        component});
            component = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetComponetAsync(string name, System.Xml.XmlNode component) {
            this.GetComponetAsync(name, component, null);
        }
        
        /// <remarks/>
        public void GetComponetAsync(string name, System.Xml.XmlNode component, object userState) {
            if ((this.GetComponetOperationCompleted == null)) {
                this.GetComponetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComponetOperationCompleted);
            }
            this.InvokeAsync("GetComponet", new object[] {
                        name,
                        component}, this.GetComponetOperationCompleted, userState);
        }
        
        private void OnGetComponetOperationCompleted(object arg) {
            if ((this.GetComponetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComponetCompleted(this, new GetComponetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/SetTrafficLightToRed", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetTrafficLightToRed(string registryID, ref string clientIP, ref string clientMachine) {
            object[] results = this.Invoke("SetTrafficLightToRed", new object[] {
                        registryID,
                        clientIP,
                        clientMachine});
            clientIP = ((string)(results[1]));
            clientMachine = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetTrafficLightToRedAsync(string registryID, string clientIP, string clientMachine) {
            this.SetTrafficLightToRedAsync(registryID, clientIP, clientMachine, null);
        }
        
        /// <remarks/>
        public void SetTrafficLightToRedAsync(string registryID, string clientIP, string clientMachine, object userState) {
            if ((this.SetTrafficLightToRedOperationCompleted == null)) {
                this.SetTrafficLightToRedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTrafficLightToRedOperationCompleted);
            }
            this.InvokeAsync("SetTrafficLightToRed", new object[] {
                        registryID,
                        clientIP,
                        clientMachine}, this.SetTrafficLightToRedOperationCompleted, userState);
        }
        
        private void OnSetTrafficLightToRedOperationCompleted(object arg) {
            if ((this.SetTrafficLightToRedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTrafficLightToRedCompleted(this, new SetTrafficLightToRedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/SetTrafficLightToGreen", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetTrafficLightToGreen(string registryID) {
            object[] results = this.Invoke("SetTrafficLightToGreen", new object[] {
                        registryID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetTrafficLightToGreenAsync(string registryID) {
            this.SetTrafficLightToGreenAsync(registryID, null);
        }
        
        /// <remarks/>
        public void SetTrafficLightToGreenAsync(string registryID, object userState) {
            if ((this.SetTrafficLightToGreenOperationCompleted == null)) {
                this.SetTrafficLightToGreenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTrafficLightToGreenOperationCompleted);
            }
            this.InvokeAsync("SetTrafficLightToGreen", new object[] {
                        registryID}, this.SetTrafficLightToGreenOperationCompleted, userState);
        }
        
        private void OnSetTrafficLightToGreenOperationCompleted(object arg) {
            if ((this.SetTrafficLightToGreenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTrafficLightToGreenCompleted(this, new SetTrafficLightToGreenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetAllEmrNotes", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetAllEmrNotes(ref System.Xml.XmlNode emrNotes) {
            object[] results = this.Invoke("GetAllEmrNotes", new object[] {
                        emrNotes});
            emrNotes = ((System.Xml.XmlNode)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllEmrNotesAsync(System.Xml.XmlNode emrNotes) {
            this.GetAllEmrNotesAsync(emrNotes, null);
        }
        
        /// <remarks/>
        public void GetAllEmrNotesAsync(System.Xml.XmlNode emrNotes, object userState) {
            if ((this.GetAllEmrNotesOperationCompleted == null)) {
                this.GetAllEmrNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllEmrNotesOperationCompleted);
            }
            this.InvokeAsync("GetAllEmrNotes", new object[] {
                        emrNotes}, this.GetAllEmrNotesOperationCompleted, userState);
        }
        
        private void OnGetAllEmrNotesOperationCompleted(object arg) {
            if ((this.GetAllEmrNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllEmrNotesCompleted(this, new GetAllEmrNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/SysTime", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime SysTime() {
            object[] results = this.Invoke("SysTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void SysTimeAsync() {
            this.SysTimeAsync(null);
        }
        
        /// <remarks/>
        public void SysTimeAsync(object userState) {
            if ((this.SysTimeOperationCompleted == null)) {
                this.SysTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSysTimeOperationCompleted);
            }
            this.InvokeAsync("SysTime", new object[0], this.SysTimeOperationCompleted, userState);
        }
        
        private void OnSysTimeOperationCompleted(object arg) {
            if ((this.SysTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SysTimeCompleted(this, new SysTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/ErrorLogEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime ErrorLogEx(string method, string dbtable, string op, string comm) {
            object[] results = this.Invoke("ErrorLogEx", new object[] {
                        method,
                        dbtable,
                        op,
                        comm});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void ErrorLogExAsync(string method, string dbtable, string op, string comm) {
            this.ErrorLogExAsync(method, dbtable, op, comm, null);
        }
        
        /// <remarks/>
        public void ErrorLogExAsync(string method, string dbtable, string op, string comm, object userState) {
            if ((this.ErrorLogExOperationCompleted == null)) {
                this.ErrorLogExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnErrorLogExOperationCompleted);
            }
            this.InvokeAsync("ErrorLogEx", new object[] {
                        method,
                        dbtable,
                        op,
                        comm}, this.ErrorLogExOperationCompleted, userState);
        }
        
        private void OnErrorLogExOperationCompleted(object arg) {
            if ((this.ErrorLogExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ErrorLogExCompleted(this, new ErrorLogExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetLastErrorEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLastErrorEx(System.DateTime errorTime) {
            object[] results = this.Invoke("GetLastErrorEx", new object[] {
                        errorTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastErrorExAsync(System.DateTime errorTime) {
            this.GetLastErrorExAsync(errorTime, null);
        }
        
        /// <remarks/>
        public void GetLastErrorExAsync(System.DateTime errorTime, object userState) {
            if ((this.GetLastErrorExOperationCompleted == null)) {
                this.GetLastErrorExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastErrorExOperationCompleted);
            }
            this.InvokeAsync("GetLastErrorEx", new object[] {
                        errorTime}, this.GetLastErrorExOperationCompleted, userState);
        }
        
        private void OnGetLastErrorExOperationCompleted(object arg) {
            if ((this.GetLastErrorExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastErrorExCompleted(this, new GetLastErrorExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/ErrorLog", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ErrorLog(string method, string dbtable, string op, string comm) {
            this.Invoke("ErrorLog", new object[] {
                        method,
                        dbtable,
                        op,
                        comm});
        }
        
        /// <remarks/>
        public void ErrorLogAsync(string method, string dbtable, string op, string comm) {
            this.ErrorLogAsync(method, dbtable, op, comm, null);
        }
        
        /// <remarks/>
        public void ErrorLogAsync(string method, string dbtable, string op, string comm, object userState) {
            if ((this.ErrorLogOperationCompleted == null)) {
                this.ErrorLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnErrorLogOperationCompleted);
            }
            this.InvokeAsync("ErrorLog", new object[] {
                        method,
                        dbtable,
                        op,
                        comm}, this.ErrorLogOperationCompleted, userState);
        }
        
        private void OnErrorLogOperationCompleted(object arg) {
            if ((this.ErrorLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ErrorLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetLastError", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLastError() {
            object[] results = this.Invoke("GetLastError", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastErrorAsync() {
            this.GetLastErrorAsync(null);
        }
        
        /// <remarks/>
        public void GetLastErrorAsync(object userState) {
            if ((this.GetLastErrorOperationCompleted == null)) {
                this.GetLastErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastErrorOperationCompleted);
            }
            this.InvokeAsync("GetLastError", new object[0], this.GetLastErrorOperationCompleted, userState);
        }
        
        private void OnGetLastErrorOperationCompleted(object arg) {
            if ((this.GetLastErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastErrorCompleted(this, new GetLastErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetEmrDocument", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetEmrDocument(string registryID, ref System.Xml.XmlNode root, ref System.Xml.XmlNode emrNotes) {
            object[] results = this.Invoke("GetEmrDocument", new object[] {
                        registryID,
                        root,
                        emrNotes});
            root = ((System.Xml.XmlNode)(results[1]));
            emrNotes = ((System.Xml.XmlNode)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrDocumentAsync(string registryID, System.Xml.XmlNode root, System.Xml.XmlNode emrNotes) {
            this.GetEmrDocumentAsync(registryID, root, emrNotes, null);
        }
        
        /// <remarks/>
        public void GetEmrDocumentAsync(string registryID, System.Xml.XmlNode root, System.Xml.XmlNode emrNotes, object userState) {
            if ((this.GetEmrDocumentOperationCompleted == null)) {
                this.GetEmrDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrDocumentOperationCompleted);
            }
            this.InvokeAsync("GetEmrDocument", new object[] {
                        registryID,
                        root,
                        emrNotes}, this.GetEmrDocumentOperationCompleted, userState);
        }
        
        private void OnGetEmrDocumentOperationCompleted(object arg) {
            if ((this.GetEmrDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrDocumentCompleted(this, new GetEmrDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/InsertEmrDocument", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertEmrDocument(string registryID, string archiveNum, System.Xml.XmlNode root, int status, string noteIDSeries, System.Xml.XmlNode emrNote) {
            object[] results = this.Invoke("InsertEmrDocument", new object[] {
                        registryID,
                        archiveNum,
                        root,
                        status,
                        noteIDSeries,
                        emrNote});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertEmrDocumentAsync(string registryID, string archiveNum, System.Xml.XmlNode root, int status, string noteIDSeries, System.Xml.XmlNode emrNote) {
            this.InsertEmrDocumentAsync(registryID, archiveNum, root, status, noteIDSeries, emrNote, null);
        }
        
        /// <remarks/>
        public void InsertEmrDocumentAsync(string registryID, string archiveNum, System.Xml.XmlNode root, int status, string noteIDSeries, System.Xml.XmlNode emrNote, object userState) {
            if ((this.InsertEmrDocumentOperationCompleted == null)) {
                this.InsertEmrDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEmrDocumentOperationCompleted);
            }
            this.InvokeAsync("InsertEmrDocument", new object[] {
                        registryID,
                        archiveNum,
                        root,
                        status,
                        noteIDSeries,
                        emrNote}, this.InsertEmrDocumentOperationCompleted, userState);
        }
        
        private void OnInsertEmrDocumentOperationCompleted(object arg) {
            if ((this.InsertEmrDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertEmrDocumentCompleted(this, new InsertEmrDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/InsertEmrNote", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertEmrNote(string registryID, string noteIDSeries, System.Xml.XmlNode emrNote) {
            object[] results = this.Invoke("InsertEmrNote", new object[] {
                        registryID,
                        noteIDSeries,
                        emrNote});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertEmrNoteAsync(string registryID, string noteIDSeries, System.Xml.XmlNode emrNote) {
            this.InsertEmrNoteAsync(registryID, noteIDSeries, emrNote, null);
        }
        
        /// <remarks/>
        public void InsertEmrNoteAsync(string registryID, string noteIDSeries, System.Xml.XmlNode emrNote, object userState) {
            if ((this.InsertEmrNoteOperationCompleted == null)) {
                this.InsertEmrNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEmrNoteOperationCompleted);
            }
            this.InvokeAsync("InsertEmrNote", new object[] {
                        registryID,
                        noteIDSeries,
                        emrNote}, this.InsertEmrNoteOperationCompleted, userState);
        }
        
        private void OnInsertEmrNoteOperationCompleted(object arg) {
            if ((this.InsertEmrNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertEmrNoteCompleted(this, new InsertEmrNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/AddNoteDocument", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddNoteDocument(string registryID, System.Xml.XmlNode root, int status, string noteIDSeries, System.Xml.XmlNode emrNote) {
            object[] results = this.Invoke("AddNoteDocument", new object[] {
                        registryID,
                        root,
                        status,
                        noteIDSeries,
                        emrNote});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddNoteDocumentAsync(string registryID, System.Xml.XmlNode root, int status, string noteIDSeries, System.Xml.XmlNode emrNote) {
            this.AddNoteDocumentAsync(registryID, root, status, noteIDSeries, emrNote, null);
        }
        
        /// <remarks/>
        public void AddNoteDocumentAsync(string registryID, System.Xml.XmlNode root, int status, string noteIDSeries, System.Xml.XmlNode emrNote, object userState) {
            if ((this.AddNoteDocumentOperationCompleted == null)) {
                this.AddNoteDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNoteDocumentOperationCompleted);
            }
            this.InvokeAsync("AddNoteDocument", new object[] {
                        registryID,
                        root,
                        status,
                        noteIDSeries,
                        emrNote}, this.AddNoteDocumentOperationCompleted, userState);
        }
        
        private void OnAddNoteDocumentOperationCompleted(object arg) {
            if ((this.AddNoteDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNoteDocumentCompleted(this, new AddNoteDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetEmrDocumentWithoutNote", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetEmrDocumentWithoutNote(string registryID, ref System.Xml.XmlNode emr) {
            object[] results = this.Invoke("GetEmrDocumentWithoutNote", new object[] {
                        registryID,
                        emr});
            emr = ((System.Xml.XmlNode)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrDocumentWithoutNoteAsync(string registryID, System.Xml.XmlNode emr) {
            this.GetEmrDocumentWithoutNoteAsync(registryID, emr, null);
        }
        
        /// <remarks/>
        public void GetEmrDocumentWithoutNoteAsync(string registryID, System.Xml.XmlNode emr, object userState) {
            if ((this.GetEmrDocumentWithoutNoteOperationCompleted == null)) {
                this.GetEmrDocumentWithoutNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrDocumentWithoutNoteOperationCompleted);
            }
            this.InvokeAsync("GetEmrDocumentWithoutNote", new object[] {
                        registryID,
                        emr}, this.GetEmrDocumentWithoutNoteOperationCompleted, userState);
        }
        
        private void OnGetEmrDocumentWithoutNoteOperationCompleted(object arg) {
            if ((this.GetEmrDocumentWithoutNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrDocumentWithoutNoteCompleted(this, new GetEmrDocumentWithoutNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/PutEmrDocument", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PutEmrDocument(string registryID, string archiveNum, System.Xml.XmlNode root, int status, string noteIDSeries, System.Xml.XmlNode emrNote) {
            object[] results = this.Invoke("PutEmrDocument", new object[] {
                        registryID,
                        archiveNum,
                        root,
                        status,
                        noteIDSeries,
                        emrNote});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PutEmrDocumentAsync(string registryID, string archiveNum, System.Xml.XmlNode root, int status, string noteIDSeries, System.Xml.XmlNode emrNote) {
            this.PutEmrDocumentAsync(registryID, archiveNum, root, status, noteIDSeries, emrNote, null);
        }
        
        /// <remarks/>
        public void PutEmrDocumentAsync(string registryID, string archiveNum, System.Xml.XmlNode root, int status, string noteIDSeries, System.Xml.XmlNode emrNote, object userState) {
            if ((this.PutEmrDocumentOperationCompleted == null)) {
                this.PutEmrDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutEmrDocumentOperationCompleted);
            }
            this.InvokeAsync("PutEmrDocument", new object[] {
                        registryID,
                        archiveNum,
                        root,
                        status,
                        noteIDSeries,
                        emrNote}, this.PutEmrDocumentOperationCompleted, userState);
        }
        
        private void OnPutEmrDocumentOperationCompleted(object arg) {
            if ((this.PutEmrDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutEmrDocumentCompleted(this, new PutEmrDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateEmrDocument", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateEmrDocument(string registryID, System.Xml.XmlNode root, int status, string noteIDSeries, System.Xml.XmlNode emrNote) {
            object[] results = this.Invoke("UpdateEmrDocument", new object[] {
                        registryID,
                        root,
                        status,
                        noteIDSeries,
                        emrNote});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmrDocumentAsync(string registryID, System.Xml.XmlNode root, int status, string noteIDSeries, System.Xml.XmlNode emrNote) {
            this.UpdateEmrDocumentAsync(registryID, root, status, noteIDSeries, emrNote, null);
        }
        
        /// <remarks/>
        public void UpdateEmrDocumentAsync(string registryID, System.Xml.XmlNode root, int status, string noteIDSeries, System.Xml.XmlNode emrNote, object userState) {
            if ((this.UpdateEmrDocumentOperationCompleted == null)) {
                this.UpdateEmrDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmrDocumentOperationCompleted);
            }
            this.InvokeAsync("UpdateEmrDocument", new object[] {
                        registryID,
                        root,
                        status,
                        noteIDSeries,
                        emrNote}, this.UpdateEmrDocumentOperationCompleted, userState);
        }
        
        private void OnUpdateEmrDocumentOperationCompleted(object arg) {
            if ((this.UpdateEmrDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmrDocumentCompleted(this, new UpdateEmrDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateEmrDocumentWithoutNote", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateEmrDocumentWithoutNote(string registryID, System.Xml.XmlNode root) {
            object[] results = this.Invoke("UpdateEmrDocumentWithoutNote", new object[] {
                        registryID,
                        root});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmrDocumentWithoutNoteAsync(string registryID, System.Xml.XmlNode root) {
            this.UpdateEmrDocumentWithoutNoteAsync(registryID, root, null);
        }
        
        /// <remarks/>
        public void UpdateEmrDocumentWithoutNoteAsync(string registryID, System.Xml.XmlNode root, object userState) {
            if ((this.UpdateEmrDocumentWithoutNoteOperationCompleted == null)) {
                this.UpdateEmrDocumentWithoutNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmrDocumentWithoutNoteOperationCompleted);
            }
            this.InvokeAsync("UpdateEmrDocumentWithoutNote", new object[] {
                        registryID,
                        root}, this.UpdateEmrDocumentWithoutNoteOperationCompleted, userState);
        }
        
        private void OnUpdateEmrDocumentWithoutNoteOperationCompleted(object arg) {
            if ((this.UpdateEmrDocumentWithoutNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmrDocumentWithoutNoteCompleted(this, new UpdateEmrDocumentWithoutNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateEmrNote", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateEmrNote(string registryID, string noteIDSeries, System.Xml.XmlNode emrNote) {
            object[] results = this.Invoke("UpdateEmrNote", new object[] {
                        registryID,
                        noteIDSeries,
                        emrNote});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmrNoteAsync(string registryID, string noteIDSeries, System.Xml.XmlNode emrNote) {
            this.UpdateEmrNoteAsync(registryID, noteIDSeries, emrNote, null);
        }
        
        /// <remarks/>
        public void UpdateEmrNoteAsync(string registryID, string noteIDSeries, System.Xml.XmlNode emrNote, object userState) {
            if ((this.UpdateEmrNoteOperationCompleted == null)) {
                this.UpdateEmrNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmrNoteOperationCompleted);
            }
            this.InvokeAsync("UpdateEmrNote", new object[] {
                        registryID,
                        noteIDSeries,
                        emrNote}, this.UpdateEmrNoteOperationCompleted, userState);
        }
        
        private void OnUpdateEmrNoteOperationCompleted(object arg) {
            if ((this.UpdateEmrNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmrNoteCompleted(this, new UpdateEmrNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/DeleteEmrNote", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteEmrNote(string registryID, System.Xml.XmlNode emrdoc, string noteIDSeries) {
            object[] results = this.Invoke("DeleteEmrNote", new object[] {
                        registryID,
                        emrdoc,
                        noteIDSeries});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmrNoteAsync(string registryID, System.Xml.XmlNode emrdoc, string noteIDSeries) {
            this.DeleteEmrNoteAsync(registryID, emrdoc, noteIDSeries, null);
        }
        
        /// <remarks/>
        public void DeleteEmrNoteAsync(string registryID, System.Xml.XmlNode emrdoc, string noteIDSeries, object userState) {
            if ((this.DeleteEmrNoteOperationCompleted == null)) {
                this.DeleteEmrNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmrNoteOperationCompleted);
            }
            this.InvokeAsync("DeleteEmrNote", new object[] {
                        registryID,
                        emrdoc,
                        noteIDSeries}, this.DeleteEmrNoteOperationCompleted, userState);
        }
        
        private void OnDeleteEmrNoteOperationCompleted(object arg) {
            if ((this.DeleteEmrNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmrNoteCompleted(this, new DeleteEmrNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/SyncEmrDocument", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SyncEmrDocument(string registryID, string archiveNum, int status, System.Xml.XmlNode emrdoc) {
            object[] results = this.Invoke("SyncEmrDocument", new object[] {
                        registryID,
                        archiveNum,
                        status,
                        emrdoc});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SyncEmrDocumentAsync(string registryID, string archiveNum, int status, System.Xml.XmlNode emrdoc) {
            this.SyncEmrDocumentAsync(registryID, archiveNum, status, emrdoc, null);
        }
        
        /// <remarks/>
        public void SyncEmrDocumentAsync(string registryID, string archiveNum, int status, System.Xml.XmlNode emrdoc, object userState) {
            if ((this.SyncEmrDocumentOperationCompleted == null)) {
                this.SyncEmrDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSyncEmrDocumentOperationCompleted);
            }
            this.InvokeAsync("SyncEmrDocument", new object[] {
                        registryID,
                        archiveNum,
                        status,
                        emrdoc}, this.SyncEmrDocumentOperationCompleted, userState);
        }
        
        private void OnSyncEmrDocumentOperationCompleted(object arg) {
            if ((this.SyncEmrDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SyncEmrDocumentCompleted(this, new SyncEmrDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/CjjSyncEmrDocument", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CjjSyncEmrDocument(System.Xml.XmlNode emrdoc, System.Xml.XmlNode emrnotes) {
            object[] results = this.Invoke("CjjSyncEmrDocument", new object[] {
                        emrdoc,
                        emrnotes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CjjSyncEmrDocumentAsync(System.Xml.XmlNode emrdoc, System.Xml.XmlNode emrnotes) {
            this.CjjSyncEmrDocumentAsync(emrdoc, emrnotes, null);
        }
        
        /// <remarks/>
        public void CjjSyncEmrDocumentAsync(System.Xml.XmlNode emrdoc, System.Xml.XmlNode emrnotes, object userState) {
            if ((this.CjjSyncEmrDocumentOperationCompleted == null)) {
                this.CjjSyncEmrDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCjjSyncEmrDocumentOperationCompleted);
            }
            this.InvokeAsync("CjjSyncEmrDocument", new object[] {
                        emrdoc,
                        emrnotes}, this.CjjSyncEmrDocumentOperationCompleted, userState);
        }
        
        private void OnCjjSyncEmrDocumentOperationCompleted(object arg) {
            if ((this.CjjSyncEmrDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CjjSyncEmrDocumentCompleted(this, new CjjSyncEmrDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetOneEmrNote", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetOneEmrNote(string registryID, string noteIDSeries, ref System.Xml.XmlNode emrNote) {
            object[] results = this.Invoke("GetOneEmrNote", new object[] {
                        registryID,
                        noteIDSeries,
                        emrNote});
            emrNote = ((System.Xml.XmlNode)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetOneEmrNoteAsync(string registryID, string noteIDSeries, System.Xml.XmlNode emrNote) {
            this.GetOneEmrNoteAsync(registryID, noteIDSeries, emrNote, null);
        }
        
        /// <remarks/>
        public void GetOneEmrNoteAsync(string registryID, string noteIDSeries, System.Xml.XmlNode emrNote, object userState) {
            if ((this.GetOneEmrNoteOperationCompleted == null)) {
                this.GetOneEmrNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOneEmrNoteOperationCompleted);
            }
            this.InvokeAsync("GetOneEmrNote", new object[] {
                        registryID,
                        noteIDSeries,
                        emrNote}, this.GetOneEmrNoteOperationCompleted, userState);
        }
        
        private void OnGetOneEmrNoteOperationCompleted(object arg) {
            if ((this.GetOneEmrNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOneEmrNoteCompleted(this, new GetOneEmrNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/SetPrintedForEmrdocument", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetPrintedForEmrdocument(string registryID) {
            object[] results = this.Invoke("SetPrintedForEmrdocument", new object[] {
                        registryID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetPrintedForEmrdocumentAsync(string registryID) {
            this.SetPrintedForEmrdocumentAsync(registryID, null);
        }
        
        /// <remarks/>
        public void SetPrintedForEmrdocumentAsync(string registryID, object userState) {
            if ((this.SetPrintedForEmrdocumentOperationCompleted == null)) {
                this.SetPrintedForEmrdocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPrintedForEmrdocumentOperationCompleted);
            }
            this.InvokeAsync("SetPrintedForEmrdocument", new object[] {
                        registryID}, this.SetPrintedForEmrdocumentOperationCompleted, userState);
        }
        
        private void OnSetPrintedForEmrdocumentOperationCompleted(object arg) {
            if ((this.SetPrintedForEmrdocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPrintedForEmrdocumentCompleted(this, new SetPrintedForEmrdocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetPrintedStatusForEmrdocument", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPrintedStatusForEmrdocument(string registryID, ref string printed) {
            object[] results = this.Invoke("GetPrintedStatusForEmrdocument", new object[] {
                        registryID,
                        printed});
            printed = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrintedStatusForEmrdocumentAsync(string registryID, string printed) {
            this.GetPrintedStatusForEmrdocumentAsync(registryID, printed, null);
        }
        
        /// <remarks/>
        public void GetPrintedStatusForEmrdocumentAsync(string registryID, string printed, object userState) {
            if ((this.GetPrintedStatusForEmrdocumentOperationCompleted == null)) {
                this.GetPrintedStatusForEmrdocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrintedStatusForEmrdocumentOperationCompleted);
            }
            this.InvokeAsync("GetPrintedStatusForEmrdocument", new object[] {
                        registryID,
                        printed}, this.GetPrintedStatusForEmrdocumentOperationCompleted, userState);
        }
        
        private void OnGetPrintedStatusForEmrdocumentOperationCompleted(object arg) {
            if ((this.GetPrintedStatusForEmrdocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrintedStatusForEmrdocumentCompleted(this, new GetPrintedStatusForEmrdocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetRegistryIDsXquery", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRegistryIDsXquery(string criteria, ref System.Xml.XmlNode result) {
            object[] results = this.Invoke("GetRegistryIDsXquery", new object[] {
                        criteria,
                        result});
            result = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegistryIDsXqueryAsync(string criteria, System.Xml.XmlNode result) {
            this.GetRegistryIDsXqueryAsync(criteria, result, null);
        }
        
        /// <remarks/>
        public void GetRegistryIDsXqueryAsync(string criteria, System.Xml.XmlNode result, object userState) {
            if ((this.GetRegistryIDsXqueryOperationCompleted == null)) {
                this.GetRegistryIDsXqueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegistryIDsXqueryOperationCompleted);
            }
            this.InvokeAsync("GetRegistryIDsXquery", new object[] {
                        criteria,
                        result}, this.GetRegistryIDsXqueryOperationCompleted, userState);
        }
        
        private void OnGetRegistryIDsXqueryOperationCompleted(object arg) {
            if ((this.GetRegistryIDsXqueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegistryIDsXqueryCompleted(this, new GetRegistryIDsXqueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetLastWriteTimeOfEmrDocument", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLastWriteTimeOfEmrDocument(string registryID, ref long lwt) {
            object[] results = this.Invoke("GetLastWriteTimeOfEmrDocument", new object[] {
                        registryID,
                        lwt});
            lwt = ((long)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastWriteTimeOfEmrDocumentAsync(string registryID, long lwt) {
            this.GetLastWriteTimeOfEmrDocumentAsync(registryID, lwt, null);
        }
        
        /// <remarks/>
        public void GetLastWriteTimeOfEmrDocumentAsync(string registryID, long lwt, object userState) {
            if ((this.GetLastWriteTimeOfEmrDocumentOperationCompleted == null)) {
                this.GetLastWriteTimeOfEmrDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastWriteTimeOfEmrDocumentOperationCompleted);
            }
            this.InvokeAsync("GetLastWriteTimeOfEmrDocument", new object[] {
                        registryID,
                        lwt}, this.GetLastWriteTimeOfEmrDocumentOperationCompleted, userState);
        }
        
        private void OnGetLastWriteTimeOfEmrDocumentOperationCompleted(object arg) {
            if ((this.GetLastWriteTimeOfEmrDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastWriteTimeOfEmrDocumentCompleted(this, new GetLastWriteTimeOfEmrDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetEmrDocumentWithoutNote2", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetEmrDocumentWithoutNote2(string registryID) {
            object[] results = this.Invoke("GetEmrDocumentWithoutNote2", new object[] {
                        registryID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmrDocumentWithoutNote2Async(string registryID) {
            this.GetEmrDocumentWithoutNote2Async(registryID, null);
        }
        
        /// <remarks/>
        public void GetEmrDocumentWithoutNote2Async(string registryID, object userState) {
            if ((this.GetEmrDocumentWithoutNote2OperationCompleted == null)) {
                this.GetEmrDocumentWithoutNote2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmrDocumentWithoutNote2OperationCompleted);
            }
            this.InvokeAsync("GetEmrDocumentWithoutNote2", new object[] {
                        registryID}, this.GetEmrDocumentWithoutNote2OperationCompleted, userState);
        }
        
        private void OnGetEmrDocumentWithoutNote2OperationCompleted(object arg) {
            if ((this.GetEmrDocumentWithoutNote2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmrDocumentWithoutNote2Completed(this, new GetEmrDocumentWithoutNote2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/NewEmrNoteEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewEmrNoteEx(string registryID, string ArchieveNum, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, ref int Series) {
            object[] results = this.Invoke("NewEmrNoteEx", new object[] {
                        registryID,
                        ArchieveNum,
                        noteForEmrDoc,
                        noteForWordDoc,
                        Series});
            Series = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewEmrNoteExAsync(string registryID, string ArchieveNum, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, int Series) {
            this.NewEmrNoteExAsync(registryID, ArchieveNum, noteForEmrDoc, noteForWordDoc, Series, null);
        }
        
        /// <remarks/>
        public void NewEmrNoteExAsync(string registryID, string ArchieveNum, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, int Series, object userState) {
            if ((this.NewEmrNoteExOperationCompleted == null)) {
                this.NewEmrNoteExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewEmrNoteExOperationCompleted);
            }
            this.InvokeAsync("NewEmrNoteEx", new object[] {
                        registryID,
                        ArchieveNum,
                        noteForEmrDoc,
                        noteForWordDoc,
                        Series}, this.NewEmrNoteExOperationCompleted, userState);
        }
        
        private void OnNewEmrNoteExOperationCompleted(object arg) {
            if ((this.NewEmrNoteExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewEmrNoteExCompleted(this, new NewEmrNoteExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/NewEmrNoteExZ", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewEmrNoteExZ(string registryID, string ArchieveNum, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, System.Xml.XmlNode noteForEmrXml, ref int Series) {
            object[] results = this.Invoke("NewEmrNoteExZ", new object[] {
                        registryID,
                        ArchieveNum,
                        noteForEmrDoc,
                        noteForWordDoc,
                        noteForEmrXml,
                        Series});
            Series = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewEmrNoteExZAsync(string registryID, string ArchieveNum, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, System.Xml.XmlNode noteForEmrXml, int Series) {
            this.NewEmrNoteExZAsync(registryID, ArchieveNum, noteForEmrDoc, noteForWordDoc, noteForEmrXml, Series, null);
        }
        
        /// <remarks/>
        public void NewEmrNoteExZAsync(string registryID, string ArchieveNum, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, System.Xml.XmlNode noteForEmrXml, int Series, object userState) {
            if ((this.NewEmrNoteExZOperationCompleted == null)) {
                this.NewEmrNoteExZOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewEmrNoteExZOperationCompleted);
            }
            this.InvokeAsync("NewEmrNoteExZ", new object[] {
                        registryID,
                        ArchieveNum,
                        noteForEmrDoc,
                        noteForWordDoc,
                        noteForEmrXml,
                        Series}, this.NewEmrNoteExZOperationCompleted, userState);
        }
        
        private void OnNewEmrNoteExZOperationCompleted(object arg) {
            if ((this.NewEmrNoteExZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewEmrNoteExZCompleted(this, new NewEmrNoteExZCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/InsertOrReplaceAttributeOfEmrdocument_Emr", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertOrReplaceAttributeOfEmrdocument_Emr(string registryID, System.Xml.XmlElement xmlEle) {
            object[] results = this.Invoke("InsertOrReplaceAttributeOfEmrdocument_Emr", new object[] {
                        registryID,
                        xmlEle});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertOrReplaceAttributeOfEmrdocument_EmrAsync(string registryID, System.Xml.XmlElement xmlEle) {
            this.InsertOrReplaceAttributeOfEmrdocument_EmrAsync(registryID, xmlEle, null);
        }
        
        /// <remarks/>
        public void InsertOrReplaceAttributeOfEmrdocument_EmrAsync(string registryID, System.Xml.XmlElement xmlEle, object userState) {
            if ((this.InsertOrReplaceAttributeOfEmrdocument_EmrOperationCompleted == null)) {
                this.InsertOrReplaceAttributeOfEmrdocument_EmrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOrReplaceAttributeOfEmrdocument_EmrOperationCompleted);
            }
            this.InvokeAsync("InsertOrReplaceAttributeOfEmrdocument_Emr", new object[] {
                        registryID,
                        xmlEle}, this.InsertOrReplaceAttributeOfEmrdocument_EmrOperationCompleted, userState);
        }
        
        private void OnInsertOrReplaceAttributeOfEmrdocument_EmrOperationCompleted(object arg) {
            if ((this.InsertOrReplaceAttributeOfEmrdocument_EmrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertOrReplaceAttributeOfEmrdocument_EmrCompleted(this, new InsertOrReplaceAttributeOfEmrdocument_EmrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateEmrNoteEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateEmrNoteEx(string registryID, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc) {
            object[] results = this.Invoke("UpdateEmrNoteEx", new object[] {
                        registryID,
                        noteForEmrDoc,
                        noteForWordDoc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmrNoteExAsync(string registryID, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc) {
            this.UpdateEmrNoteExAsync(registryID, noteForEmrDoc, noteForWordDoc, null);
        }
        
        /// <remarks/>
        public void UpdateEmrNoteExAsync(string registryID, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, object userState) {
            if ((this.UpdateEmrNoteExOperationCompleted == null)) {
                this.UpdateEmrNoteExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmrNoteExOperationCompleted);
            }
            this.InvokeAsync("UpdateEmrNoteEx", new object[] {
                        registryID,
                        noteForEmrDoc,
                        noteForWordDoc}, this.UpdateEmrNoteExOperationCompleted, userState);
        }
        
        private void OnUpdateEmrNoteExOperationCompleted(object arg) {
            if ((this.UpdateEmrNoteExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmrNoteExCompleted(this, new UpdateEmrNoteExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateEmrNoteExZ", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateEmrNoteExZ(string registryID, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, System.Xml.XmlNode EmrXml) {
            object[] results = this.Invoke("UpdateEmrNoteExZ", new object[] {
                        registryID,
                        noteForEmrDoc,
                        noteForWordDoc,
                        EmrXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmrNoteExZAsync(string registryID, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, System.Xml.XmlNode EmrXml) {
            this.UpdateEmrNoteExZAsync(registryID, noteForEmrDoc, noteForWordDoc, EmrXml, null);
        }
        
        /// <remarks/>
        public void UpdateEmrNoteExZAsync(string registryID, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, System.Xml.XmlNode EmrXml, object userState) {
            if ((this.UpdateEmrNoteExZOperationCompleted == null)) {
                this.UpdateEmrNoteExZOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmrNoteExZOperationCompleted);
            }
            this.InvokeAsync("UpdateEmrNoteExZ", new object[] {
                        registryID,
                        noteForEmrDoc,
                        noteForWordDoc,
                        EmrXml}, this.UpdateEmrNoteExZOperationCompleted, userState);
        }
        
        private void OnUpdateEmrNoteExZOperationCompleted(object arg) {
            if ((this.UpdateEmrNoteExZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmrNoteExZCompleted(this, new UpdateEmrNoteExZCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/DeleteEmrNoteEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteEmrNoteEx(string registryID, string noteID, int series) {
            object[] results = this.Invoke("DeleteEmrNoteEx", new object[] {
                        registryID,
                        noteID,
                        series});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmrNoteExAsync(string registryID, string noteID, int series) {
            this.DeleteEmrNoteExAsync(registryID, noteID, series, null);
        }
        
        /// <remarks/>
        public void DeleteEmrNoteExAsync(string registryID, string noteID, int series, object userState) {
            if ((this.DeleteEmrNoteExOperationCompleted == null)) {
                this.DeleteEmrNoteExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmrNoteExOperationCompleted);
            }
            this.InvokeAsync("DeleteEmrNoteEx", new object[] {
                        registryID,
                        noteID,
                        series}, this.DeleteEmrNoteExOperationCompleted, userState);
        }
        
        private void OnDeleteEmrNoteExOperationCompleted(object arg) {
            if ((this.DeleteEmrNoteExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmrNoteExCompleted(this, new DeleteEmrNoteExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UncommitEmrNoteEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UncommitEmrNoteEx(string registryID, string Opcode, string departmentCode, string noteID, int series, System.Xml.XmlNode reasion, NoteStatus status) {
            object[] results = this.Invoke("UncommitEmrNoteEx", new object[] {
                        registryID,
                        Opcode,
                        departmentCode,
                        noteID,
                        series,
                        reasion,
                        status});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UncommitEmrNoteExAsync(string registryID, string Opcode, string departmentCode, string noteID, int series, System.Xml.XmlNode reasion, NoteStatus status) {
            this.UncommitEmrNoteExAsync(registryID, Opcode, departmentCode, noteID, series, reasion, status, null);
        }
        
        /// <remarks/>
        public void UncommitEmrNoteExAsync(string registryID, string Opcode, string departmentCode, string noteID, int series, System.Xml.XmlNode reasion, NoteStatus status, object userState) {
            if ((this.UncommitEmrNoteExOperationCompleted == null)) {
                this.UncommitEmrNoteExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUncommitEmrNoteExOperationCompleted);
            }
            this.InvokeAsync("UncommitEmrNoteEx", new object[] {
                        registryID,
                        Opcode,
                        departmentCode,
                        noteID,
                        series,
                        reasion,
                        status}, this.UncommitEmrNoteExOperationCompleted, userState);
        }
        
        private void OnUncommitEmrNoteExOperationCompleted(object arg) {
            if ((this.UncommitEmrNoteExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UncommitEmrNoteExCompleted(this, new UncommitEmrNoteExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/NewEmrNoteExExa", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewEmrNoteExExa(string registryID, string ArchieveNum, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, string Sign, string strOpcode, ref int Series, ref string NoteIDSeries, string UniqueID) {
            object[] results = this.Invoke("NewEmrNoteExExa", new object[] {
                        registryID,
                        ArchieveNum,
                        noteForEmrDoc,
                        noteForWordDoc,
                        Sign,
                        strOpcode,
                        Series,
                        NoteIDSeries,
                        UniqueID});
            Series = ((int)(results[1]));
            NoteIDSeries = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewEmrNoteExExaAsync(string registryID, string ArchieveNum, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, string Sign, string strOpcode, int Series, string NoteIDSeries, string UniqueID) {
            this.NewEmrNoteExExaAsync(registryID, ArchieveNum, noteForEmrDoc, noteForWordDoc, Sign, strOpcode, Series, NoteIDSeries, UniqueID, null);
        }
        
        /// <remarks/>
        public void NewEmrNoteExExaAsync(string registryID, string ArchieveNum, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, string Sign, string strOpcode, int Series, string NoteIDSeries, string UniqueID, object userState) {
            if ((this.NewEmrNoteExExaOperationCompleted == null)) {
                this.NewEmrNoteExExaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewEmrNoteExExaOperationCompleted);
            }
            this.InvokeAsync("NewEmrNoteExExa", new object[] {
                        registryID,
                        ArchieveNum,
                        noteForEmrDoc,
                        noteForWordDoc,
                        Sign,
                        strOpcode,
                        Series,
                        NoteIDSeries,
                        UniqueID}, this.NewEmrNoteExExaOperationCompleted, userState);
        }
        
        private void OnNewEmrNoteExExaOperationCompleted(object arg) {
            if ((this.NewEmrNoteExExaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewEmrNoteExExaCompleted(this, new NewEmrNoteExExaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/VerifyCertAndUserID", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void VerifyCertAndUserID(string certID, ref string opCode) {
            object[] results = this.Invoke("VerifyCertAndUserID", new object[] {
                        certID,
                        opCode});
            opCode = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyCertAndUserIDAsync(string certID, string opCode) {
            this.VerifyCertAndUserIDAsync(certID, opCode, null);
        }
        
        /// <remarks/>
        public void VerifyCertAndUserIDAsync(string certID, string opCode, object userState) {
            if ((this.VerifyCertAndUserIDOperationCompleted == null)) {
                this.VerifyCertAndUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyCertAndUserIDOperationCompleted);
            }
            this.InvokeAsync("VerifyCertAndUserID", new object[] {
                        certID,
                        opCode}, this.VerifyCertAndUserIDOperationCompleted, userState);
        }
        
        private void OnVerifyCertAndUserIDOperationCompleted(object arg) {
            if ((this.VerifyCertAndUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyCertAndUserIDCompleted(this, new VerifyCertAndUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/DelTemplateDetail", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelTemplateDetail(string DoctorID, string pk) {
            this.Invoke("DelTemplateDetail", new object[] {
                        DoctorID,
                        pk});
        }
        
        /// <remarks/>
        public void DelTemplateDetailAsync(string DoctorID, string pk) {
            this.DelTemplateDetailAsync(DoctorID, pk, null);
        }
        
        /// <remarks/>
        public void DelTemplateDetailAsync(string DoctorID, string pk, object userState) {
            if ((this.DelTemplateDetailOperationCompleted == null)) {
                this.DelTemplateDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelTemplateDetailOperationCompleted);
            }
            this.InvokeAsync("DelTemplateDetail", new object[] {
                        DoctorID,
                        pk}, this.DelTemplateDetailOperationCompleted, userState);
        }
        
        private void OnDelTemplateDetailOperationCompleted(object arg) {
            if ((this.DelTemplateDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelTemplateDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/NewEmrNoteExExaZ", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewEmrNoteExExaZ(string registryID, string ArchieveNum, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, System.Xml.XmlNode noteForEmrXml, string Sign, string strOpcode, ref int Series, ref string NoteIDSeries) {
            object[] results = this.Invoke("NewEmrNoteExExaZ", new object[] {
                        registryID,
                        ArchieveNum,
                        noteForEmrDoc,
                        noteForWordDoc,
                        noteForEmrXml,
                        Sign,
                        strOpcode,
                        Series,
                        NoteIDSeries});
            Series = ((int)(results[1]));
            NoteIDSeries = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewEmrNoteExExaZAsync(string registryID, string ArchieveNum, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, System.Xml.XmlNode noteForEmrXml, string Sign, string strOpcode, int Series, string NoteIDSeries) {
            this.NewEmrNoteExExaZAsync(registryID, ArchieveNum, noteForEmrDoc, noteForWordDoc, noteForEmrXml, Sign, strOpcode, Series, NoteIDSeries, null);
        }
        
        /// <remarks/>
        public void NewEmrNoteExExaZAsync(string registryID, string ArchieveNum, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, System.Xml.XmlNode noteForEmrXml, string Sign, string strOpcode, int Series, string NoteIDSeries, object userState) {
            if ((this.NewEmrNoteExExaZOperationCompleted == null)) {
                this.NewEmrNoteExExaZOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewEmrNoteExExaZOperationCompleted);
            }
            this.InvokeAsync("NewEmrNoteExExaZ", new object[] {
                        registryID,
                        ArchieveNum,
                        noteForEmrDoc,
                        noteForWordDoc,
                        noteForEmrXml,
                        Sign,
                        strOpcode,
                        Series,
                        NoteIDSeries}, this.NewEmrNoteExExaZOperationCompleted, userState);
        }
        
        private void OnNewEmrNoteExExaZOperationCompleted(object arg) {
            if ((this.NewEmrNoteExExaZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewEmrNoteExExaZCompleted(this, new NewEmrNoteExExaZCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/NewEmrNoteExEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewEmrNoteExEx(string registryID, string ArchieveNum, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, string Sign, string strOpcode, ref int Series) {
            object[] results = this.Invoke("NewEmrNoteExEx", new object[] {
                        registryID,
                        ArchieveNum,
                        noteForEmrDoc,
                        noteForWordDoc,
                        Sign,
                        strOpcode,
                        Series});
            Series = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewEmrNoteExExAsync(string registryID, string ArchieveNum, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, string Sign, string strOpcode, int Series) {
            this.NewEmrNoteExExAsync(registryID, ArchieveNum, noteForEmrDoc, noteForWordDoc, Sign, strOpcode, Series, null);
        }
        
        /// <remarks/>
        public void NewEmrNoteExExAsync(string registryID, string ArchieveNum, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, string Sign, string strOpcode, int Series, object userState) {
            if ((this.NewEmrNoteExExOperationCompleted == null)) {
                this.NewEmrNoteExExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewEmrNoteExExOperationCompleted);
            }
            this.InvokeAsync("NewEmrNoteExEx", new object[] {
                        registryID,
                        ArchieveNum,
                        noteForEmrDoc,
                        noteForWordDoc,
                        Sign,
                        strOpcode,
                        Series}, this.NewEmrNoteExExOperationCompleted, userState);
        }
        
        private void OnNewEmrNoteExExOperationCompleted(object arg) {
            if ((this.NewEmrNoteExExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewEmrNoteExExCompleted(this, new NewEmrNoteExExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateEmrNoteExEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateEmrNoteExEx(string registryID, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, string Sign, string strOpcode) {
            object[] results = this.Invoke("UpdateEmrNoteExEx", new object[] {
                        registryID,
                        noteForEmrDoc,
                        noteForWordDoc,
                        Sign,
                        strOpcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmrNoteExExAsync(string registryID, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, string Sign, string strOpcode) {
            this.UpdateEmrNoteExExAsync(registryID, noteForEmrDoc, noteForWordDoc, Sign, strOpcode, null);
        }
        
        /// <remarks/>
        public void UpdateEmrNoteExExAsync(string registryID, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, string Sign, string strOpcode, object userState) {
            if ((this.UpdateEmrNoteExExOperationCompleted == null)) {
                this.UpdateEmrNoteExExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmrNoteExExOperationCompleted);
            }
            this.InvokeAsync("UpdateEmrNoteExEx", new object[] {
                        registryID,
                        noteForEmrDoc,
                        noteForWordDoc,
                        Sign,
                        strOpcode}, this.UpdateEmrNoteExExOperationCompleted, userState);
        }
        
        private void OnUpdateEmrNoteExExOperationCompleted(object arg) {
            if ((this.UpdateEmrNoteExExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmrNoteExExCompleted(this, new UpdateEmrNoteExExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateEmrNoteExExa", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateEmrNoteExExa(string registryID, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, string Sign, string strOpcode, ref string NoteIDSeries, string certID) {
            object[] results = this.Invoke("UpdateEmrNoteExExa", new object[] {
                        registryID,
                        noteForEmrDoc,
                        noteForWordDoc,
                        Sign,
                        strOpcode,
                        NoteIDSeries,
                        certID});
            NoteIDSeries = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmrNoteExExaAsync(string registryID, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, string Sign, string strOpcode, string NoteIDSeries, string certID) {
            this.UpdateEmrNoteExExaAsync(registryID, noteForEmrDoc, noteForWordDoc, Sign, strOpcode, NoteIDSeries, certID, null);
        }
        
        /// <remarks/>
        public void UpdateEmrNoteExExaAsync(string registryID, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, string Sign, string strOpcode, string NoteIDSeries, string certID, object userState) {
            if ((this.UpdateEmrNoteExExaOperationCompleted == null)) {
                this.UpdateEmrNoteExExaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmrNoteExExaOperationCompleted);
            }
            this.InvokeAsync("UpdateEmrNoteExExa", new object[] {
                        registryID,
                        noteForEmrDoc,
                        noteForWordDoc,
                        Sign,
                        strOpcode,
                        NoteIDSeries,
                        certID}, this.UpdateEmrNoteExExaOperationCompleted, userState);
        }
        
        private void OnUpdateEmrNoteExExaOperationCompleted(object arg) {
            if ((this.UpdateEmrNoteExExaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmrNoteExExaCompleted(this, new UpdateEmrNoteExExaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateEmrNoteExExaZ", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateEmrNoteExExaZ(string registryID, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, System.Xml.XmlNode xmlForEmrXml, string Sign, string strOpcode, ref string NoteIDSeries, string certID) {
            object[] results = this.Invoke("UpdateEmrNoteExExaZ", new object[] {
                        registryID,
                        noteForEmrDoc,
                        noteForWordDoc,
                        xmlForEmrXml,
                        Sign,
                        strOpcode,
                        NoteIDSeries,
                        certID});
            NoteIDSeries = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmrNoteExExaZAsync(string registryID, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, System.Xml.XmlNode xmlForEmrXml, string Sign, string strOpcode, string NoteIDSeries, string certID) {
            this.UpdateEmrNoteExExaZAsync(registryID, noteForEmrDoc, noteForWordDoc, xmlForEmrXml, Sign, strOpcode, NoteIDSeries, certID, null);
        }
        
        /// <remarks/>
        public void UpdateEmrNoteExExaZAsync(string registryID, System.Xml.XmlNode noteForEmrDoc, System.Xml.XmlNode noteForWordDoc, System.Xml.XmlNode xmlForEmrXml, string Sign, string strOpcode, string NoteIDSeries, string certID, object userState) {
            if ((this.UpdateEmrNoteExExaZOperationCompleted == null)) {
                this.UpdateEmrNoteExExaZOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmrNoteExExaZOperationCompleted);
            }
            this.InvokeAsync("UpdateEmrNoteExExaZ", new object[] {
                        registryID,
                        noteForEmrDoc,
                        noteForWordDoc,
                        xmlForEmrXml,
                        Sign,
                        strOpcode,
                        NoteIDSeries,
                        certID}, this.UpdateEmrNoteExExaZOperationCompleted, userState);
        }
        
        private void OnUpdateEmrNoteExExaZOperationCompleted(object arg) {
            if ((this.UpdateEmrNoteExExaZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmrNoteExExaZCompleted(this, new UpdateEmrNoteExExaZCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/DeleteEmrNoteExEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteEmrNoteExEx(string registryID, string noteID, int series) {
            object[] results = this.Invoke("DeleteEmrNoteExEx", new object[] {
                        registryID,
                        noteID,
                        series});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmrNoteExExAsync(string registryID, string noteID, int series) {
            this.DeleteEmrNoteExExAsync(registryID, noteID, series, null);
        }
        
        /// <remarks/>
        public void DeleteEmrNoteExExAsync(string registryID, string noteID, int series, object userState) {
            if ((this.DeleteEmrNoteExExOperationCompleted == null)) {
                this.DeleteEmrNoteExExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmrNoteExExOperationCompleted);
            }
            this.InvokeAsync("DeleteEmrNoteExEx", new object[] {
                        registryID,
                        noteID,
                        series}, this.DeleteEmrNoteExExOperationCompleted, userState);
        }
        
        private void OnDeleteEmrNoteExExOperationCompleted(object arg) {
            if ((this.DeleteEmrNoteExExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmrNoteExExCompleted(this, new DeleteEmrNoteExExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UncommitEmrNoteExEx", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UncommitEmrNoteExEx(string registryID, string Opcode, string departmentCode, string noteID, int series, System.Xml.XmlNode reasion, NoteStatus status) {
            object[] results = this.Invoke("UncommitEmrNoteExEx", new object[] {
                        registryID,
                        Opcode,
                        departmentCode,
                        noteID,
                        series,
                        reasion,
                        status});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UncommitEmrNoteExExAsync(string registryID, string Opcode, string departmentCode, string noteID, int series, System.Xml.XmlNode reasion, NoteStatus status) {
            this.UncommitEmrNoteExExAsync(registryID, Opcode, departmentCode, noteID, series, reasion, status, null);
        }
        
        /// <remarks/>
        public void UncommitEmrNoteExExAsync(string registryID, string Opcode, string departmentCode, string noteID, int series, System.Xml.XmlNode reasion, NoteStatus status, object userState) {
            if ((this.UncommitEmrNoteExExOperationCompleted == null)) {
                this.UncommitEmrNoteExExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUncommitEmrNoteExExOperationCompleted);
            }
            this.InvokeAsync("UncommitEmrNoteExEx", new object[] {
                        registryID,
                        Opcode,
                        departmentCode,
                        noteID,
                        series,
                        reasion,
                        status}, this.UncommitEmrNoteExExOperationCompleted, userState);
        }
        
        private void OnUncommitEmrNoteExExOperationCompleted(object arg) {
            if ((this.UncommitEmrNoteExExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UncommitEmrNoteExExCompleted(this, new UncommitEmrNoteExExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateConfigure", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateConfigure(ConfigureMode mode, string value) {
            object[] results = this.Invoke("UpdateConfigure", new object[] {
                        mode,
                        value});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateConfigureAsync(ConfigureMode mode, string value) {
            this.UpdateConfigureAsync(mode, value, null);
        }
        
        /// <remarks/>
        public void UpdateConfigureAsync(ConfigureMode mode, string value, object userState) {
            if ((this.UpdateConfigureOperationCompleted == null)) {
                this.UpdateConfigureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateConfigureOperationCompleted);
            }
            this.InvokeAsync("UpdateConfigure", new object[] {
                        mode,
                        value}, this.UpdateConfigureOperationCompleted, userState);
        }
        
        private void OnUpdateConfigureOperationCompleted(object arg) {
            if ((this.UpdateConfigureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateConfigureCompleted(this, new UpdateConfigureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/PutRelationship", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PutRelationship(string upper, string[] lowers, string opcode) {
            object[] results = this.Invoke("PutRelationship", new object[] {
                        upper,
                        lowers,
                        opcode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PutRelationshipAsync(string upper, string[] lowers, string opcode) {
            this.PutRelationshipAsync(upper, lowers, opcode, null);
        }
        
        /// <remarks/>
        public void PutRelationshipAsync(string upper, string[] lowers, string opcode, object userState) {
            if ((this.PutRelationshipOperationCompleted == null)) {
                this.PutRelationshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutRelationshipOperationCompleted);
            }
            this.InvokeAsync("PutRelationship", new object[] {
                        upper,
                        lowers,
                        opcode}, this.PutRelationshipOperationCompleted, userState);
        }
        
        private void OnPutRelationshipOperationCompleted(object arg) {
            if ((this.PutRelationshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutRelationshipCompleted(this, new PutRelationshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetLowers", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLowers(string upper, ref string[] lowers) {
            object[] results = this.Invoke("GetLowers", new object[] {
                        upper,
                        lowers});
            lowers = ((string[])(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLowersAsync(string upper, string[] lowers) {
            this.GetLowersAsync(upper, lowers, null);
        }
        
        /// <remarks/>
        public void GetLowersAsync(string upper, string[] lowers, object userState) {
            if ((this.GetLowersOperationCompleted == null)) {
                this.GetLowersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLowersOperationCompleted);
            }
            this.InvokeAsync("GetLowers", new object[] {
                        upper,
                        lowers}, this.GetLowersOperationCompleted, userState);
        }
        
        private void OnGetLowersOperationCompleted(object arg) {
            if ((this.GetLowersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLowersCompleted(this, new GetLowersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateRelationship", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateRelationship(string upper, string[] lowers, string opcode) {
            object[] results = this.Invoke("UpdateRelationship", new object[] {
                        upper,
                        lowers,
                        opcode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRelationshipAsync(string upper, string[] lowers, string opcode) {
            this.UpdateRelationshipAsync(upper, lowers, opcode, null);
        }
        
        /// <remarks/>
        public void UpdateRelationshipAsync(string upper, string[] lowers, string opcode, object userState) {
            if ((this.UpdateRelationshipOperationCompleted == null)) {
                this.UpdateRelationshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRelationshipOperationCompleted);
            }
            this.InvokeAsync("UpdateRelationship", new object[] {
                        upper,
                        lowers,
                        opcode}, this.UpdateRelationshipOperationCompleted, userState);
        }
        
        private void OnUpdateRelationshipOperationCompleted(object arg) {
            if ((this.UpdateRelationshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRelationshipCompleted(this, new UpdateRelationshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/CheckPatients", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CheckPatients(System.Xml.XmlNode patients) {
            object[] results = this.Invoke("CheckPatients", new object[] {
                        patients});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CheckPatientsAsync(System.Xml.XmlNode patients) {
            this.CheckPatientsAsync(patients, null);
        }
        
        /// <remarks/>
        public void CheckPatientsAsync(System.Xml.XmlNode patients, object userState) {
            if ((this.CheckPatientsOperationCompleted == null)) {
                this.CheckPatientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckPatientsOperationCompleted);
            }
            this.InvokeAsync("CheckPatients", new object[] {
                        patients}, this.CheckPatientsOperationCompleted, userState);
        }
        
        private void OnCheckPatientsOperationCompleted(object arg) {
            if ((this.CheckPatientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckPatientsCompleted(this, new CheckPatientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/NewNoteTemplate", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long NewNoteTemplate(string doctorID, string departCode, System.Xml.XmlNode note) {
            object[] results = this.Invoke("NewNoteTemplate", new object[] {
                        doctorID,
                        departCode,
                        note});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void NewNoteTemplateAsync(string doctorID, string departCode, System.Xml.XmlNode note) {
            this.NewNoteTemplateAsync(doctorID, departCode, note, null);
        }
        
        /// <remarks/>
        public void NewNoteTemplateAsync(string doctorID, string departCode, System.Xml.XmlNode note, object userState) {
            if ((this.NewNoteTemplateOperationCompleted == null)) {
                this.NewNoteTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewNoteTemplateOperationCompleted);
            }
            this.InvokeAsync("NewNoteTemplate", new object[] {
                        doctorID,
                        departCode,
                        note}, this.NewNoteTemplateOperationCompleted, userState);
        }
        
        private void OnNewNoteTemplateOperationCompleted(object arg) {
            if ((this.NewNoteTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewNoteTemplateCompleted(this, new NewNoteTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/NewNoteTemplateZlg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long NewNoteTemplateZlg(string doctorID, string departCode, System.Xml.XmlNode note) {
            object[] results = this.Invoke("NewNoteTemplateZlg", new object[] {
                        doctorID,
                        departCode,
                        note});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void NewNoteTemplateZlgAsync(string doctorID, string departCode, System.Xml.XmlNode note) {
            this.NewNoteTemplateZlgAsync(doctorID, departCode, note, null);
        }
        
        /// <remarks/>
        public void NewNoteTemplateZlgAsync(string doctorID, string departCode, System.Xml.XmlNode note, object userState) {
            if ((this.NewNoteTemplateZlgOperationCompleted == null)) {
                this.NewNoteTemplateZlgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewNoteTemplateZlgOperationCompleted);
            }
            this.InvokeAsync("NewNoteTemplateZlg", new object[] {
                        doctorID,
                        departCode,
                        note}, this.NewNoteTemplateZlgOperationCompleted, userState);
        }
        
        private void OnNewNoteTemplateZlgOperationCompleted(object arg) {
            if ((this.NewNoteTemplateZlgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewNoteTemplateZlgCompleted(this, new NewNoteTemplateZlgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateNoteTemplate", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateNoteTemplate(long pk, System.Xml.XmlNode note) {
            object[] results = this.Invoke("UpdateNoteTemplate", new object[] {
                        pk,
                        note});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateNoteTemplateAsync(long pk, System.Xml.XmlNode note) {
            this.UpdateNoteTemplateAsync(pk, note, null);
        }
        
        /// <remarks/>
        public void UpdateNoteTemplateAsync(long pk, System.Xml.XmlNode note, object userState) {
            if ((this.UpdateNoteTemplateOperationCompleted == null)) {
                this.UpdateNoteTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNoteTemplateOperationCompleted);
            }
            this.InvokeAsync("UpdateNoteTemplate", new object[] {
                        pk,
                        note}, this.UpdateNoteTemplateOperationCompleted, userState);
        }
        
        private void OnUpdateNoteTemplateOperationCompleted(object arg) {
            if ((this.UpdateNoteTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNoteTemplateCompleted(this, new UpdateNoteTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/UpdateNoteTemplateZlg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateNoteTemplateZlg(long pk, System.Xml.XmlNode note) {
            object[] results = this.Invoke("UpdateNoteTemplateZlg", new object[] {
                        pk,
                        note});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateNoteTemplateZlgAsync(long pk, System.Xml.XmlNode note) {
            this.UpdateNoteTemplateZlgAsync(pk, note, null);
        }
        
        /// <remarks/>
        public void UpdateNoteTemplateZlgAsync(long pk, System.Xml.XmlNode note, object userState) {
            if ((this.UpdateNoteTemplateZlgOperationCompleted == null)) {
                this.UpdateNoteTemplateZlgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNoteTemplateZlgOperationCompleted);
            }
            this.InvokeAsync("UpdateNoteTemplateZlg", new object[] {
                        pk,
                        note}, this.UpdateNoteTemplateZlgOperationCompleted, userState);
        }
        
        private void OnUpdateNoteTemplateZlgOperationCompleted(object arg) {
            if ((this.UpdateNoteTemplateZlgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNoteTemplateZlgCompleted(this, new UpdateNoteTemplateZlgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/RemoveNoteTemplate", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveNoteTemplate(long pk) {
            object[] results = this.Invoke("RemoveNoteTemplate", new object[] {
                        pk});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveNoteTemplateAsync(long pk) {
            this.RemoveNoteTemplateAsync(pk, null);
        }
        
        /// <remarks/>
        public void RemoveNoteTemplateAsync(long pk, object userState) {
            if ((this.RemoveNoteTemplateOperationCompleted == null)) {
                this.RemoveNoteTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveNoteTemplateOperationCompleted);
            }
            this.InvokeAsync("RemoveNoteTemplate", new object[] {
                        pk}, this.RemoveNoteTemplateOperationCompleted, userState);
        }
        
        private void OnRemoveNoteTemplateOperationCompleted(object arg) {
            if ((this.RemoveNoteTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveNoteTemplateCompleted(this, new RemoveNoteTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/RemoveNoteTemplateZlg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveNoteTemplateZlg(long pk) {
            object[] results = this.Invoke("RemoveNoteTemplateZlg", new object[] {
                        pk});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveNoteTemplateZlgAsync(long pk) {
            this.RemoveNoteTemplateZlgAsync(pk, null);
        }
        
        /// <remarks/>
        public void RemoveNoteTemplateZlgAsync(long pk, object userState) {
            if ((this.RemoveNoteTemplateZlgOperationCompleted == null)) {
                this.RemoveNoteTemplateZlgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveNoteTemplateZlgOperationCompleted);
            }
            this.InvokeAsync("RemoveNoteTemplateZlg", new object[] {
                        pk}, this.RemoveNoteTemplateZlgOperationCompleted, userState);
        }
        
        private void OnRemoveNoteTemplateZlgOperationCompleted(object arg) {
            if ((this.RemoveNoteTemplateZlgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveNoteTemplateZlgCompleted(this, new RemoveNoteTemplateZlgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetNoteTemplate", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNoteTemplate(long pk, ref System.Xml.XmlNode template) {
            object[] results = this.Invoke("GetNoteTemplate", new object[] {
                        pk,
                        template});
            template = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNoteTemplateAsync(long pk, System.Xml.XmlNode template) {
            this.GetNoteTemplateAsync(pk, template, null);
        }
        
        /// <remarks/>
        public void GetNoteTemplateAsync(long pk, System.Xml.XmlNode template, object userState) {
            if ((this.GetNoteTemplateOperationCompleted == null)) {
                this.GetNoteTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNoteTemplateOperationCompleted);
            }
            this.InvokeAsync("GetNoteTemplate", new object[] {
                        pk,
                        template}, this.GetNoteTemplateOperationCompleted, userState);
        }
        
        private void OnGetNoteTemplateOperationCompleted(object arg) {
            if ((this.GetNoteTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNoteTemplateCompleted(this, new GetNoteTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetNoteTemplateZlg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNoteTemplateZlg(long pk, ref System.Xml.XmlNode template) {
            object[] results = this.Invoke("GetNoteTemplateZlg", new object[] {
                        pk,
                        template});
            template = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNoteTemplateZlgAsync(long pk, System.Xml.XmlNode template) {
            this.GetNoteTemplateZlgAsync(pk, template, null);
        }
        
        /// <remarks/>
        public void GetNoteTemplateZlgAsync(long pk, System.Xml.XmlNode template, object userState) {
            if ((this.GetNoteTemplateZlgOperationCompleted == null)) {
                this.GetNoteTemplateZlgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNoteTemplateZlgOperationCompleted);
            }
            this.InvokeAsync("GetNoteTemplateZlg", new object[] {
                        pk,
                        template}, this.GetNoteTemplateZlgOperationCompleted, userState);
        }
        
        private void OnGetNoteTemplateZlgOperationCompleted(object arg) {
            if ((this.GetNoteTemplateZlgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNoteTemplateZlgCompleted(this, new GetNoteTemplateZlgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetDepartTemplatePks", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDepartTemplatePks(ref System.Xml.XmlNode pks, string departCode) {
            object[] results = this.Invoke("GetDepartTemplatePks", new object[] {
                        pks,
                        departCode});
            pks = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartTemplatePksAsync(System.Xml.XmlNode pks, string departCode) {
            this.GetDepartTemplatePksAsync(pks, departCode, null);
        }
        
        /// <remarks/>
        public void GetDepartTemplatePksAsync(System.Xml.XmlNode pks, string departCode, object userState) {
            if ((this.GetDepartTemplatePksOperationCompleted == null)) {
                this.GetDepartTemplatePksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartTemplatePksOperationCompleted);
            }
            this.InvokeAsync("GetDepartTemplatePks", new object[] {
                        pks,
                        departCode}, this.GetDepartTemplatePksOperationCompleted, userState);
        }
        
        private void OnGetDepartTemplatePksOperationCompleted(object arg) {
            if ((this.GetDepartTemplatePksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartTemplatePksCompleted(this, new GetDepartTemplatePksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://shoujia.org/emrservices/GetDepartTemplatePksZlg", RequestNamespace="http://shoujia.org/emrservices/", ResponseNamespace="http://shoujia.org/emrservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDepartTemplatePksZlg(ref System.Xml.XmlNode pks, string departCode) {
            object[] results = this.Invoke("GetDepartTemplatePksZlg", new object[] {
                        pks,
                        departCode});
            pks = ((System.Xml.XmlNode)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartTemplatePksZlgAsync(System.Xml.XmlNode pks, string departCode) {
            this.GetDepartTemplatePksZlgAsync(pks, departCode, null);
        }
        
        /// <remarks/>
        public void GetDepartTemplatePksZlgAsync(System.Xml.XmlNode pks, string departCode, object userState) {
            if ((this.GetDepartTemplatePksZlgOperationCompleted == null)) {
                this.GetDepartTemplatePksZlgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartTemplatePksZlgOperationCompleted);
            }
            this.InvokeAsync("GetDepartTemplatePksZlg", new object[] {
                        pks,
                        departCode}, this.GetDepartTemplatePksZlgOperationCompleted, userState);
        }
        
        private void OnGetDepartTemplatePksZlgOperationCompleted(object arg) {
            if ((this.GetDepartTemplatePksZlgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartTemplatePksZlgCompleted(this, new GetDepartTemplatePksZlgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://shoujia.org/emrservices/")]
    public enum NoteStatus {
        
        /// <remarks/>
        Draft,
        
        /// <remarks/>
        Commited,
        
        /// <remarks/>
        Checking,
        
        /// <remarks/>
        Checked,
        
        /// <remarks/>
        FinallyCkecking,
        
        /// <remarks/>
        FinallyChecked,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://shoujia.org/emrservices/")]
    public partial class GrantReader {
        
        private string registryIDField;
        
        private string doctorIDField;
        
        private System.DateTime startDateField;
        
        private int expirationField;
        
        /// <remarks/>
        public string registryID {
            get {
                return this.registryIDField;
            }
            set {
                this.registryIDField = value;
            }
        }
        
        /// <remarks/>
        public string doctorID {
            get {
                return this.doctorIDField;
            }
            set {
                this.doctorIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public int expiration {
            get {
                return this.expirationField;
            }
            set {
                this.expirationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.57.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://shoujia.org/emrservices/")]
    public enum ConfigureMode {
        
        /// <remarks/>
        AuthenticLevel,
        
        /// <remarks/>
        MainPasswd,
        
        /// <remarks/>
        AutoArchiveNum,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetBorrowInfoCompletedEventHandler(object sender, GetBorrowInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBorrowInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBorrowInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetRolesPermissionCompletedEventHandler(object sender, GetRolesPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRolesPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRolesPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetEmrDocumentStatusCompletedEventHandler(object sender, GetEmrDocumentStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrDocumentStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrDocumentStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetArchiveStatusCompletedEventHandler(object sender, GetArchiveStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArchiveStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArchiveStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetArchiveStatusByZyhCompletedEventHandler(object sender, GetArchiveStatusByZyhCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArchiveStatusByZyhCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArchiveStatusByZyhCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetBaBsCompletedEventHandler(object sender, GetBaBsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBaBsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBaBsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetSignWithArchiveCompletedEventHandler(object sender, GetSignWithArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSignWithArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSignWithArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void NewValuateRulesExCompletedEventHandler(object sender, NewValuateRulesExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewValuateRulesExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewValuateRulesExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetTransferInfoExCompletedEventHandler(object sender, GetTransferInfoExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransferInfoExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransferInfoExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetTransferInfoExExCompletedEventHandler(object sender, GetTransferInfoExExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransferInfoExExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransferInfoExExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetTransferInfoCompletedEventHandler(object sender, GetTransferInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransferInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransferInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetTransferInfoDgCompletedEventHandler(object sender, GetTransferInfoDgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransferInfoDgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransferInfoDgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PutTransferInfoCompletedEventHandler(object sender, PutTransferInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PutTransferInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PutTransferInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PutTransferInfoDgCompletedEventHandler(object sender, PutTransferInfoDgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PutTransferInfoDgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PutTransferInfoDgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateTransferInfoDgCompletedEventHandler(object sender, UpdateTransferInfoDgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTransferInfoDgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTransferInfoDgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateTransferInfoCompletedEventHandler(object sender, UpdateTransferInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTransferInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTransferInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DelTransferInfoCompletedEventHandler(object sender, DelTransferInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelTransferInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelTransferInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void NewOperationLogCompletedEventHandler(object sender, NewOperationLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewOperationLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewOperationLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void RemindToReviewCompletedEventHandler(object sender, RemindToReviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemindToReviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemindToReviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void InfoEmrNoteExCompletedEventHandler(object sender, InfoEmrNoteExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InfoEmrNoteExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InfoEmrNoteExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetInfoBackCompletedEventHandler(object sender, GetInfoBackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoBackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoBackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetInfoBackByDoctorCompletedEventHandler(object sender, GetInfoBackByDoctorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoBackByDoctorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoBackByDoctorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetInfoBackByDoctorRegCompletedEventHandler(object sender, GetInfoBackByDoctorRegCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoBackByDoctorRegCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoBackByDoctorRegCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateInfoBackByDoctorRegCompletedEventHandler(object sender, UpdateInfoBackByDoctorRegCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateInfoBackByDoctorRegCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateInfoBackByDoctorRegCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DownLoadWordCompletedEventHandler(object sender, DownLoadWordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownLoadWordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownLoadWordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdatelcljCompletedEventHandler(object sender, UpdatelcljCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatelcljCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatelcljCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetlcCountCompletedEventHandler(object sender, GetlcCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetlcCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetlcCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ReDownLoadWordCompletedEventHandler(object sender, ReDownLoadWordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReDownLoadWordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReDownLoadWordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void CheckUpdateCompletedEventHandler(object sender, CheckUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateLcljHzmxCompletedEventHandler(object sender, UpdateLcljHzmxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLcljHzmxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLcljHzmxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetTransferInfoExExExCompletedEventHandler(object sender, GetTransferInfoExExExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransferInfoExExExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransferInfoExExExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetInvalidInfoCompletedEventHandler(object sender, GetInvalidInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInvalidInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInvalidInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void SetzuofeiCompletedEventHandler(object sender, SetzuofeiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetzuofeiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetzuofeiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void SetunzuofeiCompletedEventHandler(object sender, SetunzuofeiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetunzuofeiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetunzuofeiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void lw_invalidInfoCompletedEventHandler(object sender, lw_invalidInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lw_invalidInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lw_invalidInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void lw_GetTransferInfoExExCompletedEventHandler(object sender, lw_GetTransferInfoExExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lw_GetTransferInfoExExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lw_GetTransferInfoExExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void obtainjkdmCompletedEventHandler(object sender, obtainjkdmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class obtainjkdmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal obtainjkdmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ClinicPathmonitorCompletedEventHandler(object sender, ClinicPathmonitorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClinicPathmonitorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClinicPathmonitorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetValuateDetailExCompletedEventHandler(object sender, GetValuateDetailExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValuateDetailExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValuateDetailExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Flaws {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void IndexSearcherCompletedEventHandler(object sender, IndexSearcherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IndexSearcherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IndexSearcherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetCreationTimeCompletedEventHandler(object sender, GetCreationTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreationTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreationTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void Page_LoadCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDataminingSearchCompletedEventHandler(object sender, GetDataminingSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataminingSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataminingSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public double zyhcount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public double tj {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal EndPos {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDataminingSearchExCompletedEventHandler(object sender, GetDataminingSearchExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataminingSearchExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataminingSearchExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public double zyhcount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public double tj {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public decimal EndPos {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void SaveSeachCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void SaveSeachExCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DelSeachCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetSeachListCompletedEventHandler(object sender, GetSeachListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeachListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeachListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetSeachListExCompletedEventHandler(object sender, GetSeachListExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeachListExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeachListExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetNoteIDsWithValuateRulesEndCompletedEventHandler(object sender, GetNoteIDsWithValuateRulesEndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNoteIDsWithValuateRulesEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNoteIDsWithValuateRulesEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode rules {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetValuateDetailEndExExCompletedEventHandler(object sender, GetValuateDetailEndExExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValuateDetailEndExExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValuateDetailEndExExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Flaws {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ValuateOpcodeEndCompletedEventHandler(object sender, ValuateOpcodeEndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValuateOpcodeEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValuateOpcodeEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void NewValuateDetailEndEXCompletedEventHandler(object sender, NewValuateDetailEndEXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewValuateDetailEndEXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewValuateDetailEndEXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetSettlementdateCompletedEventHandler(object sender, GetSettlementdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSettlementdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSettlementdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PutRangexCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DeletRangexCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ArchiveBatchExCompletedEventHandler(object sender, ArchiveBatchExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ArchiveBatchExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ArchiveBatchExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetBorrowInfoBackEmrCompletedEventHandler(object sender, GetBorrowInfoBackEmrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBorrowInfoBackEmrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBorrowInfoBackEmrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void InsertBorrowInfoCompletedEventHandler(object sender, InsertBorrowInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBorrowInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBorrowInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void BackEmrCompletedEventHandler(object sender, BackEmrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BackEmrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BackEmrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetAllBasicCompletedEventHandler(object sender, GetAllBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetIllNameCompletedEventHandler(object sender, GetIllNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIllNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIllNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetTemplateIllNameCompletedEventHandler(object sender, GetTemplateIllNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateIllNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateIllNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetTemplateIllNameZlgCompletedEventHandler(object sender, GetTemplateIllNameZlgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateIllNameZlgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateIllNameZlgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetTemplateTypeCompletedEventHandler(object sender, GetTemplateTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateNoteTemplateExCompletedEventHandler(object sender, UpdateNoteTemplateExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateNoteTemplateExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateNoteTemplateExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateNoteTemplateExZlgCompletedEventHandler(object sender, UpdateNoteTemplateExZlgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateNoteTemplateExZlgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateNoteTemplateExZlgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void InSertNoteTemplateExCompletedEventHandler(object sender, InSertNoteTemplateExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InSertNoteTemplateExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InSertNoteTemplateExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void InSertNoteTemplateExZlgCompletedEventHandler(object sender, InSertNoteTemplateExZlgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InSertNoteTemplateExZlgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InSertNoteTemplateExZlgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void InsertIllCompletedEventHandler(object sender, InsertIllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertIllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertIllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetHospitalTemplatePkzCompletedEventHandler(object sender, GetHospitalTemplatePkzCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHospitalTemplatePkzCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHospitalTemplatePkzCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetHospitalTemplatePkzZlgCompletedEventHandler(object sender, GetHospitalTemplatePkzZlgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHospitalTemplatePkzZlgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHospitalTemplatePkzZlgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDepartTemplatePkzCompletedEventHandler(object sender, GetDepartTemplatePkzCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartTemplatePkzCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartTemplatePkzCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDepartTemplatePkzZlgCompletedEventHandler(object sender, GetDepartTemplatePkzZlgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartTemplatePkzZlgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartTemplatePkzZlgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPersonTemplatePkzCompletedEventHandler(object sender, GetPersonTemplatePkzCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonTemplatePkzCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonTemplatePkzCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPersonTemplatePkzZlgCompletedEventHandler(object sender, GetPersonTemplatePkzZlgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonTemplatePkzZlgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonTemplatePkzZlgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPicturesNewCompletedEventHandler(object sender, GetPicturesNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPicturesNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPicturesNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DeletePictureNewCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetEmrBlockKeysNewCompletedEventHandler(object sender, GetEmrBlockKeysNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrBlockKeysNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrBlockKeysNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode blockKeys {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void InsertLinkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetLinkCompletedEventHandler(object sender, GetLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPageInfCompletedEventHandler(object sender, GetPageInfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPageInfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPageInfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdatePageInfCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDoctorListWithPTemplateCompletedEventHandler(object sender, GetDoctorListWithPTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoctorListWithPTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoctorListWithPTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDoctorListWithPTemplateZlgCompletedEventHandler(object sender, GetDoctorListWithPTemplateZlgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoctorListWithPTemplateZlgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoctorListWithPTemplateZlgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetTemplateDetailCompletedEventHandler(object sender, GetTemplateDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetTemplateDetailZlgCompletedEventHandler(object sender, GetTemplateDetailZlgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateDetailZlgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateDetailZlgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateTemplatePTagCompletedEventHandler(object sender, UpdateTemplatePTagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTemplatePTagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTemplatePTagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateTemplatePTagZlgCompletedEventHandler(object sender, UpdateTemplatePTagZlgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTemplatePTagZlgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTemplatePTagZlgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void SetfanxiuCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ImpPatternDocCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ImpPatternDocZlgCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void SehPatternDocCompletedEventHandler(object sender, SehPatternDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SehPatternDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SehPatternDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ExpPatternDocCompletedEventHandler(object sender, ExpPatternDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExpPatternDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExpPatternDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DelPatternDocCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPatternDocCompletedEventHandler(object sender, GetPatternDocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatternDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatternDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode note {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetImageSignCompletedEventHandler(object sender, GetImageSignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageSignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageSignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetIsKeyUserCompletedEventHandler(object sender, GetIsKeyUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIsKeyUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIsKeyUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateUpload_TimeCompletedEventHandler(object sender, UpdateUpload_TimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUpload_TimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUpload_TimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void testCompletedEventHandler(object sender, testCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void IsRemberPoint1CompletedEventHandler(object sender, IsRemberPoint1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsRemberPoint1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsRemberPoint1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string DocRange {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void IsRemberPoint2CompletedEventHandler(object sender, IsRemberPoint2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsRemberPoint2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsRemberPoint2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string DocRange {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void IsRemberPointCompletedEventHandler(object sender, IsRemberPointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsRemberPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsRemberPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string DocRange {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PutRangeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PutRangex1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PutRangex2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PutRangeExCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DeletRangeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DeletRangex1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DeletRangex2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetNotetempCompletedEventHandler(object sender, GetNotetempCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNotetempCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNotetempCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPatternTypeCompletedEventHandler(object sender, GetPatternTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatternTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatternTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPatternItemsByTypeCompletedEventHandler(object sender, GetPatternItemsByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatternItemsByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatternItemsByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPatternTypesCompletedEventHandler(object sender, GetPatternTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatternTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatternTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdatePatternTypeCompletedEventHandler(object sender, UpdatePatternTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePatternTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePatternTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetAllNoteNamesCompletedEventHandler(object sender, GetAllNoteNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllNoteNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllNoteNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void SetGradeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void IsValuateCompletedEventHandler(object sender, IsValuateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValuateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsValuateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetNotesWithFilingSetupCompletedEventHandler(object sender, GetNotesWithFilingSetupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNotesWithFilingSetupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNotesWithFilingSetupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet rules {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void RemoveNoteWithFilingSetupCompletedEventHandler(object sender, RemoveNoteWithFilingSetupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveNoteWithFilingSetupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveNoteWithFilingSetupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetFilingSetupfromDepartmentCompletedEventHandler(object sender, GetFilingSetupfromDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilingSetupfromDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilingSetupfromDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void NewFilingSetupCompletedEventHandler(object sender, NewFilingSetupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewFilingSetupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewFilingSetupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetNoteStatusWithArchiveCompletedEventHandler(object sender, GetNoteStatusWithArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNoteStatusWithArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNoteStatusWithArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetNoteIDWithArchiveCompletedEventHandler(object sender, GetNoteIDWithArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNoteIDWithArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNoteIDWithArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet rules {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetRegistryIDsWithRedLightCompletedEventHandler(object sender, GetRegistryIDsWithRedLightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegistryIDsWithRedLightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegistryIDsWithRedLightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void NewPrintRequisitionCompletedEventHandler(object sender, NewPrintRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewPrintRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewPrintRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPrintRequisitionsCompletedEventHandler(object sender, GetPrintRequisitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrintRequisitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrintRequisitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode requisitios {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void SetPrintedCompletedEventHandler(object sender, SetPrintedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPrintedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPrintedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPrintedStateCompletedEventHandler(object sender, GetPrintedStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrintedStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrintedStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string printed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void CountNotePrintingCompletedEventHandler(object sender, CountNotePrintingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountNotePrintingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountNotePrintingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetNotePrintingCompletedEventHandler(object sender, GetNotePrintingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNotePrintingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNotePrintingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode printInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UnlockEmrdocumentCompletedEventHandler(object sender, UnlockEmrdocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnlockEmrdocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnlockEmrdocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void CanEditLockedEmrdocumentCompletedEventHandler(object sender, CanEditLockedEmrdocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanEditLockedEmrdocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanEditLockedEmrdocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string yesno {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void LockedEmrdocumentCompletedEventHandler(object sender, LockedEmrdocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LockedEmrdocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LockedEmrdocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetEmrLockInfoCompletedEventHandler(object sender, GetEmrLockInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrLockInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrLockInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UncommitEmrNoteCompletedEventHandler(object sender, UncommitEmrNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UncommitEmrNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UncommitEmrNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetUncommitInfoCompletedEventHandler(object sender, GetUncommitInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUncommitInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUncommitInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode info {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void NewValuateRulesCompletedEventHandler(object sender, NewValuateRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewValuateRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewValuateRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void NewValuateRulesEndCompletedEventHandler(object sender, NewValuateRulesEndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewValuateRulesEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewValuateRulesEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void RemoveNoteWithValuateRulesCompletedEventHandler(object sender, RemoveNoteWithValuateRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveNoteWithValuateRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveNoteWithValuateRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void RemoveNoteWithValuateRulesEndCompletedEventHandler(object sender, RemoveNoteWithValuateRulesEndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveNoteWithValuateRulesEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveNoteWithValuateRulesEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetValuateRulesCompletedEventHandler(object sender, GetValuateRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValuateRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValuateRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode rules {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetValuateRulesEndCompletedEventHandler(object sender, GetValuateRulesEndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValuateRulesEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValuateRulesEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode rules {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetNotesWithValuateRulesCompletedEventHandler(object sender, GetNotesWithValuateRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNotesWithValuateRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNotesWithValuateRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet rules {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetNotesWithValuateRulesEndCompletedEventHandler(object sender, GetNotesWithValuateRulesEndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNotesWithValuateRulesEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNotesWithValuateRulesEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet rules {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetNoteIDsWithValuateRulesCompletedEventHandler(object sender, GetNoteIDsWithValuateRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNoteIDsWithValuateRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNoteIDsWithValuateRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode rules {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void NewValuateDetailCompletedEventHandler(object sender, NewValuateDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewValuateDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewValuateDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void NewValuateDetailEndCompletedEventHandler(object sender, NewValuateDetailEndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewValuateDetailEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewValuateDetailEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetValuateDetailDTCompletedEventHandler(object sender, GetValuateDetailDTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValuateDetailDTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValuateDetailDTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetValuateDetailDTExCompletedEventHandler(object sender, GetValuateDetailDTExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValuateDetailDTExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValuateDetailDTExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetValuateDetailCompletedEventHandler(object sender, GetValuateDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValuateDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValuateDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode flaws {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetValuateDetailEndCompletedEventHandler(object sender, GetValuateDetailEndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValuateDetailEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValuateDetailEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode flaws {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void NewValuateScoreCompletedEventHandler(object sender, NewValuateScoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewValuateScoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewValuateScoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void NewValuateScoreEndCompletedEventHandler(object sender, NewValuateScoreEndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewValuateScoreEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewValuateScoreEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDoctorScoreForDepartmentCompletedEventHandler(object sender, GetDoctorScoreForDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDoctorScoreForDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDoctorScoreForDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDepartmentScoreCompletedEventHandler(object sender, GetDepartmentScoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentScoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentScoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPatientScoreForDoctorCompletedEventHandler(object sender, GetPatientScoreForDoctorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientScoreForDoctorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientScoreForDoctorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetOperatorsRolesCompletedEventHandler(object sender, GetOperatorsRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperatorsRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperatorsRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode operators {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void SetOperatorRolesCompletedEventHandler(object sender, SetOperatorRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetOperatorRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetOperatorRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetRolesForOneOperatorCompletedEventHandler(object sender, GetRolesForOneOperatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRolesForOneOperatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRolesForOneOperatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode roles {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetRolesForOneOperatorHISCompletedEventHandler(object sender, GetRolesForOneOperatorHISCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRolesForOneOperatorHISCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRolesForOneOperatorHISCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode roles {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void CheckSysClientCompletedEventHandler(object sender, CheckSysClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckSysClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckSysClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ResetDatabaseCompletedEventHandler(object sender, ResetDatabaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetRegistryIDsWithKeywordCompletedEventHandler(object sender, GetRegistryIDsWithKeywordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegistryIDsWithKeywordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegistryIDsWithKeywordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DoneTimeForConsultCompletedEventHandler(object sender, DoneTimeForConsultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoneTimeForConsultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoneTimeForConsultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void EnableCommitLogCompletedEventHandler(object sender, EnableCommitLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnableCommitLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnableCommitLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void SetEnabledStatusToOneCompletedEventHandler(object sender, SetEnabledStatusToOneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetEnabledStatusToOneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetEnabledStatusToOneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void IsEnabledCommitCompletedEventHandler(object sender, IsEnabledCommitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsEnabledCommitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsEnabledCommitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetEnabledStatusForOneDoctorCompletedEventHandler(object sender, GetEnabledStatusForOneDoctorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEnabledStatusForOneDoctorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEnabledStatusForOneDoctorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetEnabledStatusForOneDoctorDTCompletedEventHandler(object sender, GetEnabledStatusForOneDoctorDTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEnabledStatusForOneDoctorDTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEnabledStatusForOneDoctorDTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetSignMessageCompletedEventHandler(object sender, GetSignMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSignMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSignMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string SrcMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string SignMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string strDateTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateOperatorCompletedEventHandler(object sender, UpdateOperatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOperatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOperatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void SelectOperatorCompletedEventHandler(object sender, SelectOperatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectOperatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectOperatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetImageUrlCompletedEventHandler(object sender, GetImageUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetImageCompletedEventHandler(object sender, GetImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetXmlDocumentCompletedEventHandler(object sender, GetXmlDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetXmlDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetXmlDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void EnableChangeStatusCompletedEventHandler(object sender, EnableChangeStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnableChangeStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnableChangeStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetChangesCompletedEventHandler(object sender, GetChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void SaveCompletedEventHandler(object sender, SaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetHospitalTemplatePksCompletedEventHandler(object sender, GetHospitalTemplatePksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHospitalTemplatePksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHospitalTemplatePksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode pks {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetHospitalTemplatePksZlgCompletedEventHandler(object sender, GetHospitalTemplatePksZlgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHospitalTemplatePksZlgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHospitalTemplatePksZlgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode pks {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPersonTemplatePksCompletedEventHandler(object sender, GetPersonTemplatePksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonTemplatePksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonTemplatePksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode pks {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPersonTemplatePksZlgCompletedEventHandler(object sender, GetPersonTemplatePksZlgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonTemplatePksZlgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonTemplatePksZlgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode pks {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPersonTemplatePksExCompletedEventHandler(object sender, GetPersonTemplatePksExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonTemplatePksExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonTemplatePksExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode pks {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPersonTemplatePksExZlgCompletedEventHandler(object sender, GetPersonTemplatePksExZlgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonTemplatePksExZlgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonTemplatePksExZlgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode pks {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DepartTemplateCompletedEventHandler(object sender, DepartTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DepartTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DepartTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode noteTemplate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DepartTemplateZlgCompletedEventHandler(object sender, DepartTemplateZlgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DepartTemplateZlgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DepartTemplateZlgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode noteTemplate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PersonNoteTemplateCompletedEventHandler(object sender, PersonNoteTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PersonNoteTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PersonNoteTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode noteTemplate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PersonNoteTemplateZlgCompletedEventHandler(object sender, PersonNoteTemplateZlgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PersonNoteTemplateZlgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PersonNoteTemplateZlgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode noteTemplate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void TemplateExistCompletedEventHandler(object sender, TemplateExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TemplateExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TemplateExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void TemplateExistZlgCompletedEventHandler(object sender, TemplateExistZlgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TemplateExistZlgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TemplateExistZlgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetEmrPatternCompletedEventHandler(object sender, GetEmrPatternCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrPatternCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrPatternCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode emrPattern {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void AddEmrPatternCompletedEventHandler(object sender, AddEmrPatternCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEmrPatternCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEmrPatternCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void AddEmrNoteIntoPatternsCompletedEventHandler(object sender, AddEmrNoteIntoPatternsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEmrNoteIntoPatternsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEmrNoteIntoPatternsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void RemoveEmrNoteFromPatternsCompletedEventHandler(object sender, RemoveEmrNoteFromPatternsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveEmrNoteFromPatternsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveEmrNoteFromPatternsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ReplaceEmrNoteInPatternsCompletedEventHandler(object sender, ReplaceEmrNoteInPatternsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReplaceEmrNoteInPatternsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReplaceEmrNoteInPatternsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ReplaceEmrNoteInPatternForOneDepartmentCompletedEventHandler(object sender, ReplaceEmrNoteInPatternForOneDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReplaceEmrNoteInPatternForOneDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReplaceEmrNoteInPatternForOneDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void AddEndPrintGroupInPatternsCompletedEventHandler(object sender, AddEndPrintGroupInPatternsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEndPrintGroupInPatternsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEndPrintGroupInPatternsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void AddEndPrintGroupInPatternCompletedEventHandler(object sender, AddEndPrintGroupInPatternCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEndPrintGroupInPatternCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEndPrintGroupInPatternCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void AddEmrBlocksCompletedEventHandler(object sender, AddEmrBlocksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEmrBlocksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEmrBlocksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void AddEmrBlockCompletedEventHandler(object sender, AddEmrBlockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEmrBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEmrBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateEmrBlockCompletedEventHandler(object sender, UpdateEmrBlockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmrBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmrBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DeleteEmrBlockCompletedEventHandler(object sender, DeleteEmrBlockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmrBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmrBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetEmrBlocksForOneDepartmentCompletedEventHandler(object sender, GetEmrBlocksForOneDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrBlocksForOneDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrBlocksForOneDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode emrBlocks {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetEmrBlockKeysCompletedEventHandler(object sender, GetEmrBlockKeysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrBlockKeysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrBlockKeysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode blockKeys {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetEmrBlockCompletedEventHandler(object sender, GetEmrBlockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode emrBlock {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ExportEmrBlocksCompletedEventHandler(object sender, ExportEmrBlocksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportEmrBlocksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportEmrBlocksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode emrBlocks {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void AddPictureCompletedEventHandler(object sender, AddPictureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPicturesCompletedEventHandler(object sender, GetPicturesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPicturesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPicturesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DeletePictureCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ConnectSqlCompletedEventHandler(object sender, ConnectSqlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConnectSqlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConnectSqlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void AddNotePhrasesCompletedEventHandler(object sender, AddNotePhrasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNotePhrasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNotePhrasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetNotePhrasesCompletedEventHandler(object sender, GetNotePhrasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNotePhrasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNotePhrasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode emrPhrases {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ExportNotePhrasesCompletedEventHandler(object sender, ExportNotePhrasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportNotePhrasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportNotePhrasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode notePhrasesSet {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ArchiveCompletedEventHandler(object sender, ArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ArchiveByMeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ArchiveBatchCompletedEventHandler(object sender, ArchiveBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ArchiveBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ArchiveBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void Archive_ArchiveNumCompletedEventHandler(object sender, Archive_ArchiveNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Archive_ArchiveNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Archive_ArchiveNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetLastWriteTimeCompletedEventHandler(object sender, GetLastWriteTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastWriteTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastWriteTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode outEmrs {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void SavenewCompletedEventHandler(object sender, SavenewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavenewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavenewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateSecuriyCompletedEventHandler(object sender, UpdateSecuriyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSecuriyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSecuriyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetSecurityConfigCompletedEventHandler(object sender, GetSecurityConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecurityConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecurityConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode content {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPasswordCompletedEventHandler(object sender, GetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string passwd {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ReplacePasswordCompletedEventHandler(object sender, ReplacePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReplacePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReplacePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void EmrEncoderCompletedEventHandler(object sender, EmrEncoderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrEncoderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrEncoderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] outdata {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void EmrDecoderCompletedEventHandler(object sender, EmrDecoderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmrDecoderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmrDecoderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] outdata {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GrantReaderForRegistryCompletedEventHandler(object sender, GrantReaderForRegistryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GrantReaderForRegistryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GrantReaderForRegistryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void HavePrivilegeForRegistryCompletedEventHandler(object sender, HavePrivilegeForRegistryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HavePrivilegeForRegistryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HavePrivilegeForRegistryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void AddTrustCompletedEventHandler(object sender, AddTrustCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void IsTrusterCompletedEventHandler(object sender, IsTrusterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsTrusterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsTrusterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void AddComponetCompletedEventHandler(object sender, AddComponetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddComponetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddComponetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetComponetCompletedEventHandler(object sender, GetComponetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComponetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComponetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode component {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void SetTrafficLightToRedCompletedEventHandler(object sender, SetTrafficLightToRedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetTrafficLightToRedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetTrafficLightToRedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string clientIP {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string clientMachine {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void SetTrafficLightToGreenCompletedEventHandler(object sender, SetTrafficLightToGreenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetTrafficLightToGreenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetTrafficLightToGreenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetAllEmrNotesCompletedEventHandler(object sender, GetAllEmrNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllEmrNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllEmrNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode emrNotes {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void SysTimeCompletedEventHandler(object sender, SysTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SysTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SysTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ErrorLogExCompletedEventHandler(object sender, ErrorLogExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ErrorLogExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ErrorLogExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetLastErrorExCompletedEventHandler(object sender, GetLastErrorExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastErrorExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastErrorExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void ErrorLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetLastErrorCompletedEventHandler(object sender, GetLastErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetEmrDocumentCompletedEventHandler(object sender, GetEmrDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode root {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode emrNotes {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void InsertEmrDocumentCompletedEventHandler(object sender, InsertEmrDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertEmrDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertEmrDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void InsertEmrNoteCompletedEventHandler(object sender, InsertEmrNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertEmrNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertEmrNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void AddNoteDocumentCompletedEventHandler(object sender, AddNoteDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNoteDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNoteDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetEmrDocumentWithoutNoteCompletedEventHandler(object sender, GetEmrDocumentWithoutNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrDocumentWithoutNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrDocumentWithoutNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode emr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PutEmrDocumentCompletedEventHandler(object sender, PutEmrDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PutEmrDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PutEmrDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateEmrDocumentCompletedEventHandler(object sender, UpdateEmrDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmrDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmrDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateEmrDocumentWithoutNoteCompletedEventHandler(object sender, UpdateEmrDocumentWithoutNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmrDocumentWithoutNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmrDocumentWithoutNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateEmrNoteCompletedEventHandler(object sender, UpdateEmrNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmrNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmrNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DeleteEmrNoteCompletedEventHandler(object sender, DeleteEmrNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmrNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmrNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void SyncEmrDocumentCompletedEventHandler(object sender, SyncEmrDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SyncEmrDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SyncEmrDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void CjjSyncEmrDocumentCompletedEventHandler(object sender, CjjSyncEmrDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CjjSyncEmrDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CjjSyncEmrDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetOneEmrNoteCompletedEventHandler(object sender, GetOneEmrNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOneEmrNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOneEmrNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode emrNote {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void SetPrintedForEmrdocumentCompletedEventHandler(object sender, SetPrintedForEmrdocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPrintedForEmrdocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPrintedForEmrdocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetPrintedStatusForEmrdocumentCompletedEventHandler(object sender, GetPrintedStatusForEmrdocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrintedStatusForEmrdocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrintedStatusForEmrdocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string printed {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetRegistryIDsXqueryCompletedEventHandler(object sender, GetRegistryIDsXqueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegistryIDsXqueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegistryIDsXqueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetLastWriteTimeOfEmrDocumentCompletedEventHandler(object sender, GetLastWriteTimeOfEmrDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastWriteTimeOfEmrDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastWriteTimeOfEmrDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long lwt {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetEmrDocumentWithoutNote2CompletedEventHandler(object sender, GetEmrDocumentWithoutNote2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmrDocumentWithoutNote2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmrDocumentWithoutNote2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void NewEmrNoteExCompletedEventHandler(object sender, NewEmrNoteExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewEmrNoteExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewEmrNoteExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int Series {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void NewEmrNoteExZCompletedEventHandler(object sender, NewEmrNoteExZCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewEmrNoteExZCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewEmrNoteExZCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int Series {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void InsertOrReplaceAttributeOfEmrdocument_EmrCompletedEventHandler(object sender, InsertOrReplaceAttributeOfEmrdocument_EmrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertOrReplaceAttributeOfEmrdocument_EmrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertOrReplaceAttributeOfEmrdocument_EmrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateEmrNoteExCompletedEventHandler(object sender, UpdateEmrNoteExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmrNoteExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmrNoteExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateEmrNoteExZCompletedEventHandler(object sender, UpdateEmrNoteExZCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmrNoteExZCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmrNoteExZCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DeleteEmrNoteExCompletedEventHandler(object sender, DeleteEmrNoteExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmrNoteExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmrNoteExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UncommitEmrNoteExCompletedEventHandler(object sender, UncommitEmrNoteExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UncommitEmrNoteExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UncommitEmrNoteExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void NewEmrNoteExExaCompletedEventHandler(object sender, NewEmrNoteExExaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewEmrNoteExExaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewEmrNoteExExaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int Series {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string NoteIDSeries {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void VerifyCertAndUserIDCompletedEventHandler(object sender, VerifyCertAndUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyCertAndUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyCertAndUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string opCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DelTemplateDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void NewEmrNoteExExaZCompletedEventHandler(object sender, NewEmrNoteExExaZCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewEmrNoteExExaZCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewEmrNoteExExaZCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int Series {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string NoteIDSeries {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void NewEmrNoteExExCompletedEventHandler(object sender, NewEmrNoteExExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewEmrNoteExExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewEmrNoteExExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int Series {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateEmrNoteExExCompletedEventHandler(object sender, UpdateEmrNoteExExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmrNoteExExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmrNoteExExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateEmrNoteExExaCompletedEventHandler(object sender, UpdateEmrNoteExExaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmrNoteExExaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmrNoteExExaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string NoteIDSeries {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateEmrNoteExExaZCompletedEventHandler(object sender, UpdateEmrNoteExExaZCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmrNoteExExaZCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmrNoteExExaZCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string NoteIDSeries {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void DeleteEmrNoteExExCompletedEventHandler(object sender, DeleteEmrNoteExExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmrNoteExExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmrNoteExExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UncommitEmrNoteExExCompletedEventHandler(object sender, UncommitEmrNoteExExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UncommitEmrNoteExExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UncommitEmrNoteExExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateConfigureCompletedEventHandler(object sender, UpdateConfigureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateConfigureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateConfigureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void PutRelationshipCompletedEventHandler(object sender, PutRelationshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PutRelationshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PutRelationshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetLowersCompletedEventHandler(object sender, GetLowersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLowersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLowersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] lowers {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateRelationshipCompletedEventHandler(object sender, UpdateRelationshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRelationshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRelationshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void CheckPatientsCompletedEventHandler(object sender, CheckPatientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckPatientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckPatientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void NewNoteTemplateCompletedEventHandler(object sender, NewNoteTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewNoteTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewNoteTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void NewNoteTemplateZlgCompletedEventHandler(object sender, NewNoteTemplateZlgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewNoteTemplateZlgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewNoteTemplateZlgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateNoteTemplateCompletedEventHandler(object sender, UpdateNoteTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateNoteTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateNoteTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void UpdateNoteTemplateZlgCompletedEventHandler(object sender, UpdateNoteTemplateZlgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateNoteTemplateZlgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateNoteTemplateZlgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void RemoveNoteTemplateCompletedEventHandler(object sender, RemoveNoteTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveNoteTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveNoteTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void RemoveNoteTemplateZlgCompletedEventHandler(object sender, RemoveNoteTemplateZlgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveNoteTemplateZlgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveNoteTemplateZlgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetNoteTemplateCompletedEventHandler(object sender, GetNoteTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNoteTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNoteTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode template {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetNoteTemplateZlgCompletedEventHandler(object sender, GetNoteTemplateZlgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNoteTemplateZlgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNoteTemplateZlgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode template {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDepartTemplatePksCompletedEventHandler(object sender, GetDepartTemplatePksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartTemplatePksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartTemplatePksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode pks {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    public delegate void GetDepartTemplatePksZlgCompletedEventHandler(object sender, GetDepartTemplatePksZlgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.57.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartTemplatePksZlgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartTemplatePksZlgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode pks {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591