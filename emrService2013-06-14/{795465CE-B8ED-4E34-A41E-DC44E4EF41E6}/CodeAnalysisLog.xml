<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="d:\program files\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.Xsl"?>
<FxCopReport Version="8">
 <Namespaces>
  <Namespace Name="AboutConfig">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'AboutConfig' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="C:\Documents and Settings\Administrator\Local Settings\Temp\tmp64.tmp.cadir\bin\App_Code.dll">
   <Modules>
    <Module Name="app_code.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="EmrOrder" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="DeclareTypesInNamespaces" Category="Microsoft.Design" CheckId="CA1050" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">'EmrOrder' should be declared inside a namespace.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="AddOutPrescription(System.Data.DataSet,System.String&amp;):System.Decimal" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="579">Consider a design that does not require that 'error' be a reference parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="AddPredefinedFull(System.String,System.String,System.Data.DataSet,System.Int32&amp;):System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="408">Modify 'EmrOrder.AddPredefinedFull(String, String, DataSet, Int32&amp;):String' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="362">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'doctorID' by changing it to 'Id'.</Issue>
            </Message>
            <Message Id="3#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="362">Correct the capitalization of 'Pk' in parameter name 'orderPk'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="AddPredefinedOrder(System.Data.SqlClient.SqlCommand,System.Data.DataTable):System.Int32" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="418">Review if the query string "INSERT INTO PredefinedOrder VALUES ('____','____','____','____','____')", passed to DbCommand.set_CommandText(String):Void in EmrOrder.AddPredefinedOrder(SqlCommand, DataTable):Int32, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="425">Review if the query string "SELECT Pk FROM PredefinedOrder WHERE SpellCode='____' AND DoctorID='____' AND OrderType='____'", passed to DbCommand.set_CommandText(String):Void in EmrOrder.AddPredefinedOrder(SqlCommand, DataTable):Int32, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="431">EmrOrder.AddPredefinedOrder(SqlCommand, DataTable):Int32 makes a call to System.Convert.ToInt32(System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToInt32(System.Object,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="AddPrivateDrug(System.String,System.String,System.String):System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="326">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'doctorID' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="dbcf" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'EmrOrder.dbcf' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="DrugListEx(System.String[]):System.Data.DataSet" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Member" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="217">Correct the capitalization of 'Ex' in member name 'EmrOrder.DrugListEx(String[]):DataSet'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="ExecuteNoQureySentence(System.String,System.String):System.String" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="hisDBType" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="59">'hisDBType', a parameter declared in EmrOrder.ExecuteNoQureySentence(String, String):String, has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="ExecuteSentence(System.String,System.String):System.Data.DataSet" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="38">Be sure to set the DataSet Locale property wherever 'EmrOrder.ExecuteSentence(String, String):DataSet' creates an instance of that type.</Issue>
            </Message>
            <Message Id="hisDBType" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="37">'hisDBType', a parameter declared in EmrOrder.ExecuteSentence(String, String):DataSet, has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="ExecuteSentenceEmr(System.String):System.Data.DataSet" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="96">Be sure to set the DataSet Locale property wherever 'EmrOrder.ExecuteSentenceEmr(String):DataSet' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetDepartmentsForRegistry():System.Data.DataSet" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="1624">Change 'GetDepartmentsForRegistry' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetDeposit(System.String):System.Data.DataSet" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="1550">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'registryID' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetOrderInfoByRegistryIDForQuery(System.String):System.Data.DataSet" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="1574">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'registryID' by changing it to 'Id'.</Issue>
            </Message>
            <Message Id="Member" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="MemberId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="1574">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in member name 'EmrOrder.GetOrderInfoByRegistryIDForQuery(String):DataSet' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetPrescriptionForOutPatient(System.String,System.DateTime,System.String):System.Data.DataSet" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="1427">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'shortRegistryID' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetRegistryIDByCardNum(System.String,System.String,System.DateTime,System.String):System.Data.DataSet" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="1263">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'doctorID' by changing it to 'Id'.</Issue>
            </Message>
            <Message Id="Member" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="MemberId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="1263">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in member name 'EmrOrder.GetRegistryIDByCardNum(String, String, DateTime, String):DataSet' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetRegistryInfoByOnlyRegistryID(System.String):System.Data.DataSet" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="1354">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'registryID' by changing it to 'Id'.</Issue>
            </Message>
            <Message Id="Member" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="MemberId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="1354">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in member name 'EmrOrder.GetRegistryInfoByOnlyRegistryID(String):DataSet' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetRegistryInfoByRegistryID(System.String,System.String,System.DateTime,System.String):System.Data.DataSet" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="1285">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'doctorID' by changing it to 'Id'.</Issue>
            </Message>
            <Message Id="3#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="1285">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'registryID' by changing it to 'Id'.</Issue>
            </Message>
            <Message Id="Member" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="MemberId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="1285">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in member name 'EmrOrder.GetRegistryInfoByRegistryID(String, String, DateTime, String):DataSet' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetRegistryInfoByRegistryID2(System.String,System.DateTime,System.String):System.Data.DataSet" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="1320">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'registryID' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetRegistryInfoByShortRegistryIDForModifingOrder(System.String,System.DateTime):System.Data.DataSet" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="1381">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'shortRegistryID' by changing it to 'Id'.</Issue>
            </Message>
            <Message Id="Member" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="MemberId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="1381">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in member name 'EmrOrder.GetRegistryInfoByShortRegistryIDForModifingOrder(String, DateTime):DataSet' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="PassCheck(System.Data.DataTable):System.Int32" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="836">'EmrOrder.PassCheck(DataTable):Int32' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="itmes" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="836">Parameter 'itmes' of EmrOrder.PassCheck(DataTable):Int32 is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="PredefinedFull(System.String,System.String):System.Data.DataSet" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="335">Be sure to set the DataSet Locale property wherever 'EmrOrder.PredefinedFull(String, String):DataSet' creates an instance of that type.</Issue>
            </Message>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="334">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'doctorID' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="PredefinedItemsForDoctor(System.String):System.Data.DataSet" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="286">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'doctorID' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="PredefinedOrderForDoctor(System.String):System.Data.DataSet" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="266">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'doctorID' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="PrivateDrugList(System.String):System.Data.DataSet" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="310">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'doctorID' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="SqlAddOutPrescription(System.Data.DataSet,System.String&amp;):System.Decimal" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DisposeObjectsBeforeLosingScope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="608">Modify EmrOrder.SqlAddOutPrescription(DataSet, String&amp;):Decimal to dispose local 'connection' of type 'SqlConnection' for all code paths.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="SqlAddPrescriptionItems(System.String&amp;,System.Data.SqlClient.SqlConnection,System.Data.DataTable,System.Decimal):System.Boolean" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="783">Modify 'EmrOrder.SqlAddPrescriptionItems(String&amp;, SqlConnection, DataTable, Decimal):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="763">Review if the query string "SELECT cfdh FROM mz_ghmx WHERE mzh='____'", passed to DbCommand.set_CommandText(String):Void in EmrOrder.SqlAddPrescriptionItems(String&amp;, SqlConnection, DataTable, Decimal):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="632">Review if the query string "SELECT zlzz FROM tysm WHERE ysbm='____'", passed to DbCommand.set_CommandText(String):Void in EmrOrder.SqlAddPrescriptionItems(String&amp;, SqlConnection, DataTable, Decimal):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="773">Review if the query string "UPDATE mz_ghmx SET hjbs='1',cfdh='____' WHERE mzh='____'", passed to DbCommand.set_CommandText(String):Void in EmrOrder.SqlAddPrescriptionItems(String&amp;, SqlConnection, DataTable, Decimal):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="616">EmrOrder.SqlAddPrescriptionItems(String&amp;, SqlConnection, DataTable, Decimal):Boolean makes a call to System.Convert.ToDouble(System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToDouble(System.Object,System.IFormatProvider).</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="756">EmrOrder.SqlAddPrescriptionItems(String&amp;, SqlConnection, DataTable, Decimal):Boolean makes a call to System.Convert.ToDouble(System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToDouble(System.Object,System.IFormatProvider).</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="756">EmrOrder.SqlAddPrescriptionItems(String&amp;, SqlConnection, DataTable, Decimal):Boolean makes a call to System.Convert.ToDouble(System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToDouble(System.Object,System.IFormatProvider).</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="756">EmrOrder.SqlAddPrescriptionItems(String&amp;, SqlConnection, DataTable, Decimal):Boolean makes a call to System.Convert.ToDouble(System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToDouble(System.Object,System.IFormatProvider).</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="769">EmrOrder.SqlAddPrescriptionItems(String&amp;, SqlConnection, DataTable, Decimal):Boolean makes a call to System.Convert.ToDouble(System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToDouble(System.Object,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="SqlIsEnoughStock(System.Double,System.String,System.String,System.Data.SqlClient.SqlConnection):System.Boolean" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DisposeObjectsBeforeLosingScope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="808">Modify EmrOrder.SqlIsEnoughStock(Double, String, String, SqlConnection):Boolean to dispose local 'command' of type 'SqlCommand' for all code paths.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="793">Review if the query string "SELECT zxys FROM yf_zy WHERE bm='____' AND yfbm='____'", passed to SqlCommand.SqlCommand(String, SqlConnection) in EmrOrder.SqlIsEnoughStock(Double, String, String, SqlConnection):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="798">EmrOrder.SqlIsEnoughStock(Double, String, String, SqlConnection):Boolean makes a call to System.Convert.ToDouble(System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToDouble(System.Object,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="SqlNewPrescriptionNum(System.String&amp;,System.Data.SqlClient.SqlConnection):System.Decimal" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DisposeObjectsBeforeLosingScope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="824">Modify EmrOrder.SqlNewPrescriptionNum(String&amp;, SqlConnection):Decimal to dispose local 'command' of type 'SqlCommand' for all code paths.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="824">Review if the query string "UPDATE mz_dqcfh SET dqcfh='____'", passed to SqlCommand.SqlCommand(String, SqlConnection) in EmrOrder.SqlNewPrescriptionNum(String&amp;, SqlConnection):Decimal, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="UpdatePredefinedFull(System.String,System.String,System.Data.DataSet,System.Int32,System.Int32&amp;):System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="549">Modify 'EmrOrder.UpdatePredefinedFull(String, String, DataSet, Int32, Int32&amp;):String' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="534">Review if the query string "DELETE FROM PredefinedOrder WHERE pk=__", passed to DbCommand.set_CommandText(String):Void in EmrOrder.UpdatePredefinedFull(String, String, DataSet, Int32, Int32&amp;):String, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="537">Review if the query string "DELETE FROM PredefinedPrescript WHERE OrderPk=__", passed to DbCommand.set_CommandText(String):Void in EmrOrder.UpdatePredefinedFull(String, String, DataSet, Int32, Int32&amp;):String, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="498">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'doctorID' by changing it to 'Id'.</Issue>
            </Message>
            <Message Id="3#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="498">Correct the capitalization of 'Pk' in parameter name 'oldOrderPk'.</Issue>
            </Message>
            <Message Id="4#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="498">Correct the capitalization of 'Pk' in parameter name 'newOrderPk'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Int32)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="534">EmrOrder.UpdatePredefinedFull(String, String, DataSet, Int32, Int32&amp;):String makes a call to System.Convert.ToString(System.Int32) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToString(System.Int32,System.IFormatProvider).</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrOrder.cs" Line="537">EmrOrder.UpdatePredefinedFull(String, String, DataSet, Int32, Int32&amp;):String makes a call to System.Convert.ToString(System.Int32) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToString(System.Int32,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="emrPatients" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="DeclareTypesInNamespaces" Category="Microsoft.Design" CheckId="CA1050" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">'emrPatients' should be declared inside a namespace.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Correct the casing of type name 'emrPatients'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="AuthenticChek(System.String,System.String&amp;,System.String&amp;):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="672">Consider a design that does not require that 'operatorName' be a reference parameter.</Issue>
            </Message>
            <Message Id="2#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="672">Consider a design that does not require that 'passwd' be a reference parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="CjjToString(System.Byte[]):System.String" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="720">'emrPatients.CjjToString(Byte[]):String' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="DoNotConcatenateStringsInsideLoops" Category="Microsoft.Performance" CheckId="CA1818" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="724">Change emrPatients.CjjToString(Byte[]):String to use StringBuilder instead of String.Concat or +=</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Char)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="724">emrPatients.CjjToString(Byte[]):String makes a call to System.Convert.ToString(System.Char) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToString(System.Char,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="ConnectHisdb():System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="1195">Modify 'emrPatients.ConnectHisdb():Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="DataError(System.Exception):System.Xml.XmlNode" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="xmldoc" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="62">'xmldoc', a local declared in emrPatients.DataError(Exception):XmlNode, has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="DecodeString(System.Char[],System.Byte[]&amp;):System.Int32" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning">Consider a design that does not require that 'passwd' be a reference parameter.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a DllImport method, emrPatients.DecodeString(Char[], Byte[]&amp;):Int32 should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of DllImport 'emrPatients.DecodeString(Char[], Byte[]&amp;):Int32' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="DoctorList():System.Xml.XmlNode" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="173">Modify 'emrPatients.DoctorList():XmlNode' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="150">Modify member 'emrPatients.DoctorList():XmlNode' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="DoctorNameList():System.Xml.XmlNode" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="125">Modify 'emrPatients.DoctorNameList():XmlNode' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="109">Modify member 'emrPatients.DoctorNameList():XmlNode' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="ExeuSentence(System.String,System.String):System.Data.DataSet" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="41">Be sure to set the DataSet Locale property wherever 'emrPatients.ExeuSentence(String, String):DataSet' creates an instance of that type.</Issue>
            </Message>
            <Message Id="hisDBType" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="40">'hisDBType', a parameter declared in emrPatients.ExeuSentence(String, String):DataSet, has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetDepartmentListByMode(EmrConstant.WorkMode):System.Xml.XmlNode" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="853">Modify 'emrPatients.GetDepartmentListByMode(WorkMode):XmlNode' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="821">Modify member 'emrPatients.GetDepartmentListByMode(WorkMode):XmlNode' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetDoctorOrders(System.String,System.Boolean):System.Xml.XmlNode" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="1163">Modify 'emrPatients.GetDoctorOrders(String, Boolean):XmlNode' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="1024">Modify member 'emrPatients.GetDoctorOrders(String, Boolean):XmlNode' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="1024">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'registryID' by changing it to 'Id'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="1150">emrPatients.GetDoctorOrders(String, Boolean):XmlNode makes a call to System.Convert.ToDouble(System.String) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToDouble(System.String,System.IFormatProvider).</Issue>
            </Message>
            <Message Id="System.Double.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="1151">emrPatients.GetDoctorOrders(String, Boolean):XmlNode makes a call to System.Double.ToString(System.String) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Double.ToString(System.String,System.IFormatProvider).</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="1061">Replace the call to String.op_Equality("") in 'emrPatients.GetDoctorOrders(String, Boolean):XmlNode' with a call to String.IsNullOrEmpty.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="1069">Replace the call to String.op_Equality("") in 'emrPatients.GetDoctorOrders(String, Boolean):XmlNode' with a call to String.IsNullOrEmpty.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="1069">Replace the call to String.op_Equality("") in 'emrPatients.GetDoctorOrders(String, Boolean):XmlNode' with a call to String.IsNullOrEmpty.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="1069">Replace the call to String.op_Equality("") in 'emrPatients.GetDoctorOrders(String, Boolean):XmlNode' with a call to String.IsNullOrEmpty.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="1069">Replace the call to String.op_Equality("") in 'emrPatients.GetDoctorOrders(String, Boolean):XmlNode' with a call to String.IsNullOrEmpty.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="1069">Replace the call to String.op_Equality("") in 'emrPatients.GetDoctorOrders(String, Boolean):XmlNode' with a call to String.IsNullOrEmpty.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetNameAndPasswdForOperator(System.String,System.String&amp;,System.String&amp;):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="1263">Consider a design that does not require that 'operatorName' be a reference parameter.</Issue>
            </Message>
            <Message Id="2#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="1263">Consider a design that does not require that 'passwd' be a reference parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetTestsAndExams(System.String,System.Boolean):System.Xml.XmlNode" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="963">Modify 'emrPatients.GetTestsAndExams(String, Boolean):XmlNode' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="892">Modify member 'emrPatients.GetTestsAndExams(String, Boolean):XmlNode' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="892">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'registryID' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="IsDischarged(System.Xml.XmlNode,System.Xml.XmlNode&amp;):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="1245">Modify 'emrPatients.IsDischarged(XmlNode, XmlNode&amp;):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="1220">Consider a design that does not require that 'outRegistryIDs' be a reference parameter.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="1220">Modify member 'emrPatients.IsDischarged(XmlNode, XmlNode&amp;):Boolean' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="1233">emrPatients.IsDischarged(XmlNode, XmlNode&amp;):Boolean makes a call to System.Convert.ToInt32(System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToInt32(System.Object,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="IsUpperDoctor(System.String,System.String):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="754">Modify 'emrPatients.IsUpperDoctor(String, String):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="740">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'operatorID' by changing it to 'Id'.</Issue>
            </Message>
            <Message Id="1#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="740">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'doctorID' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="IsUpperUpperDoctor(System.String,System.String):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="791">Modify 'emrPatients.IsUpperUpperDoctor(String, String):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="774">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'operatorID' by changing it to 'Id'.</Issue>
            </Message>
            <Message Id="1#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="774">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'doctorID' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="OnePatient(System.Data.DataRow,System.Boolean,System.Xml.XmlElement&amp;):System.Void" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="635">emrPatients.OnePatient(DataRow, Boolean, XmlElement&amp;):Void makes a call to System.Convert.ToDouble(System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToDouble(System.Object,System.IFormatProvider).</Issue>
            </Message>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="629">emrPatients.OnePatient(DataRow, Boolean, XmlElement&amp;):Void makes a call to System.DateTime.ToString(System.String) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.DateTime.ToString(System.String,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="OneRegistry(System.Data.DataRow,System.Boolean,System.Xml.XmlElement&amp;):System.Void" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="inStyle" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="648">Parameter 'inStyle' of emrPatients.OneRegistry(DataRow, Boolean, XmlElement&amp;):Void is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="PatientList(EmrConstant.PatientGettingMode,System.String):System.Xml.XmlNode" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="294">Modify 'emrPatients.PatientList(PatientGettingMode, String):XmlNode' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="237">Modify member 'emrPatients.PatientList(PatientGettingMode, String):XmlNode' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="PatientProcess(System.String,System.Xml.XmlNode&amp;,System.Boolean):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="411">Modify 'emrPatients.PatientProcess(String, XmlNode&amp;, Boolean):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="314">Consider a design that does not require that 'node' be a reference parameter.</Issue>
            </Message>
            <Message Id="0#" TypeName="LongAcronymsShouldBePascalCased" Category="Microsoft.Naming" CheckId="CA1705" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="314">Correct the capitalization of parameter name 'SQLSentence'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDouble(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="342">emrPatients.PatientProcess(String, XmlNode&amp;, Boolean):Boolean makes a call to System.Convert.ToDouble(System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToDouble(System.Object,System.IFormatProvider).</Issue>
            </Message>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="336">emrPatients.PatientProcess(String, XmlNode&amp;, Boolean):Boolean makes a call to System.DateTime.ToString(System.String) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.DateTime.ToString(System.String,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="QueryPatientList(EmrConstant.QueryMode,System.String,System.Boolean):System.Xml.XmlNode" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="467">QueryPatientList has a cyclomatic complexity of 34. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="615">Modify 'emrPatients.QueryPatientList(QueryMode, String, Boolean):XmlNode' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrPatients.cs" Line="467">Modify member 'emrPatients.QueryPatientList(QueryMode, String, Boolean):XmlNode' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="emrServiceXml" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="DeclareTypesInNamespaces" Category="Microsoft.Design" CheckId="CA1050" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">'emrServiceXml' should be declared inside a namespace.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Correct the casing of type name 'emrServiceXml'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="AddComponet(System.String,System.Xml.XmlNode):System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="2117">Modify 'emrServiceXml.AddComponet(String, XmlNode):String' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="2089">Modify member 'emrServiceXml.AddComponet(String, XmlNode):String' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="2096">Review if the query string "SELECT COUNT(*) FROM Version WHERE Name = '____'", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.AddComponet(String, XmlNode):String, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="2111">Be sure to set the DataSet Locale property wherever 'emrServiceXml.AddComponet(String, XmlNode):String' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt16(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="2103">emrServiceXml.AddComponet(String, XmlNode):String makes a call to System.Convert.ToInt16(System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToInt16(System.Object,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="AddEmrBlock(System.String,System.Xml.XmlNode):System.Int32" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1173">Modify 'emrServiceXml.AddEmrBlock(String, XmlNode):Int32' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1151">Modify member 'emrServiceXml.AddEmrBlock(String, XmlNode):Int32' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1160">Review if the query string "INSERT EmrBlocks (DepartmentCode, Blocks) VALUES ('____', cast('____' as xml))", passed to SqlDataAdapter.SqlDataAdapter(String, SqlConnection) in emrServiceXml.AddEmrBlock(String, XmlNode):Int32, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1165">Review if the query string "SELECT MAX(pk) FROM EmrBlocks WHERE DepartmentCode = '____'", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.AddEmrBlock(String, XmlNode):Int32, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1161">Be sure to set the DataSet Locale property wherever 'emrServiceXml.AddEmrBlock(String, XmlNode):Int32' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1169">emrServiceXml.AddEmrBlock(String, XmlNode):Int32 makes a call to System.Convert.ToInt32(System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToInt32(System.Object,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="AddEmrBlocks(System.String,System.Xml.XmlNode):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1144">Modify 'emrServiceXml.AddEmrBlocks(String, XmlNode):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1115">Modify member 'emrServiceXml.AddEmrBlocks(String, XmlNode):Boolean' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1122">Review if the query string "SELECT COUNT(*) FROM EmrBlocks WHERE DepartmentCode='____'", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.AddEmrBlocks(String, XmlNode):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1138">Be sure to set the DataSet Locale property wherever 'emrServiceXml.AddEmrBlocks(String, XmlNode):Boolean' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt16(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1129">emrServiceXml.AddEmrBlocks(String, XmlNode):Boolean makes a call to System.Convert.ToInt16(System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToInt16(System.Object,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="AddEmrNoteIntoPatterns(System.String,System.Xml.XmlNode):System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="914">Modify 'emrServiceXml.AddEmrNoteIntoPatterns(String, XmlNode):String' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="873">Modify member 'emrServiceXml.AddEmrNoteIntoPatterns(String, XmlNode):String' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="AddEmrPattern(System.String,System.String,System.Xml.XmlNode):System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="866">Modify 'emrServiceXml.AddEmrPattern(String, String, XmlNode):String' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="838">Modify member 'emrServiceXml.AddEmrPattern(String, String, XmlNode):String' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="845">Review if the query string "SELECT Opcode FROM EmrPattern WHERE DepartmentCode='____'", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.AddEmrPattern(String, String, XmlNode):String, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="861">Be sure to set the DataSet Locale property wherever 'emrServiceXml.AddEmrPattern(String, String, XmlNode):String' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.DateTime)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="839">emrServiceXml.AddEmrPattern(String, String, XmlNode):String makes a call to System.Convert.ToString(System.DateTime) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToString(System.DateTime,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="AddNoteDocument(System.String,System.Xml.XmlNode,System.Int32,System.String,System.Xml.XmlNode):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="359">Modify 'emrServiceXml.AddNoteDocument(String, XmlNode, Int32, String, XmlNode):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="348">Modify member 'emrServiceXml.AddNoteDocument(String, XmlNode, Int32, String, XmlNode):Boolean' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="348">Modify member 'emrServiceXml.AddNoteDocument(String, XmlNode, Int32, String, XmlNode):Boolean' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="355">Review if the query string "UPDATE EmrDocument SET Document =  cast('____ ' as xml ) ,Status = '____' WHERE RegistryID = '____'", passed to SqlDataAdapter.SqlDataAdapter(String, SqlConnection) in emrServiceXml.AddNoteDocument(String, XmlNode, Int32, String, XmlNode):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="356">Be sure to set the DataSet Locale property wherever 'emrServiceXml.AddNoteDocument(String, XmlNode, Int32, String, XmlNode):Boolean' creates an instance of that type.</Issue>
            </Message>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="348">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'registryID' by changing it to 'Id'.</Issue>
            </Message>
            <Message Id="3#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="348">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'noteIDSeries' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="AddNotePhrases(System.String,System.String,System.Xml.XmlNode):System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1529">Modify 'emrServiceXml.AddNotePhrases(String, String, XmlNode):String' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1499">Modify member 'emrServiceXml.AddNotePhrases(String, String, XmlNode):String' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1507">Review if the query string "SELECT COUNT(*) FROM NotePhrase WHERE DepartmentCode='____' AND DoctorID='____'", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.AddNotePhrases(String, String, XmlNode):String, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1523">Be sure to set the DataSet Locale property wherever 'emrServiceXml.AddNotePhrases(String, String, XmlNode):String' creates an instance of that type.</Issue>
            </Message>
            <Message Id="1#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1499">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'doctorID' by changing it to 'Id'.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt16(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1514">emrServiceXml.AddNotePhrases(String, String, XmlNode):String makes a call to System.Convert.ToInt16(System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToInt16(System.Object,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="AddPicture(System.String,System.String,System.Xml.XmlNode):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1395">Modify 'emrServiceXml.AddPicture(String, String, XmlNode):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1381">Modify member 'emrServiceXml.AddPicture(String, String, XmlNode):Boolean' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1389">Review if the query string "INSERT PicGallery (PicName, DepartmentCode, Picture) VALUES('____','____',cast('____' as xml))", passed to SqlDataAdapter.SqlDataAdapter(String, SqlConnection) in emrServiceXml.AddPicture(String, String, XmlNode):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1390">Be sure to set the DataSet Locale property wherever 'emrServiceXml.AddPicture(String, String, XmlNode):Boolean' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="AddQualityInfo(EmrConstant.QualityInfo):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="2078">Modify 'emrServiceXml.AddQualityInfo(QualityInfo):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="2074">Review if the query string "INSERT Quality VALUES( '____ ','____ ','____ ','____ ','____ ','____ ','____ ')", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.AddQualityInfo(QualityInfo):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="AddTrust(System.String,System.String,System.DateTime,System.String):System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="2020">Review if the query string "INSERT INTO Trust VALUES('____','____','____','____','____')", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.AddTrust(String, String, DateTime, String):String, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="Archive(System.String):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1626">Modify 'emrServiceXml.Archive(String):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1619">Review if the query string "UPDATE EmrDocument SET status = 1 WHERE RegistryID='____'", passed to SqlDataAdapter.SqlDataAdapter(String, SqlConnection) in emrServiceXml.Archive(String):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1620">Be sure to set the DataSet Locale property wherever 'emrServiceXml.Archive(String):Boolean' creates an instance of that type.</Issue>
            </Message>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1611">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'registryID' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="ArchiveBatch(System.Xml.XmlNode):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1652">Modify 'emrServiceXml.ArchiveBatch(XmlNode):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1634">Modify member 'emrServiceXml.ArchiveBatch(XmlNode):Boolean' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1644">Review if the query string "UPDATE EmrDocument SET status = 1 WHERE RegistryID='____'", passed to SqlDataAdapter.SqlDataAdapter(String, SqlConnection) in emrServiceXml.ArchiveBatch(XmlNode):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1645">Be sure to set the DataSet Locale property wherever 'emrServiceXml.ArchiveBatch(XmlNode):Boolean' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="CheckPatients(System.Xml.XmlNode):System.Xml.XmlNode" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="610">Modify member 'emrServiceXml.CheckPatients(XmlNode):XmlNode' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="610">Modify member 'emrServiceXml.CheckPatients(XmlNode):XmlNode' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="ConnectSql():System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1482">Modify 'emrServiceXml.ConnectSql():Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="DeleteEmrBlock(System.Int32):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1216">Modify 'emrServiceXml.DeleteEmrBlock(Int32):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1209">Review if the query string "DELETE FROM EmrBlocks WHERE pk = '____'", passed to SqlDataAdapter.SqlDataAdapter(String, SqlConnection) in emrServiceXml.DeleteEmrBlock(Int32):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1210">Be sure to set the DataSet Locale property wherever 'emrServiceXml.DeleteEmrBlock(Int32):Boolean' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="DeleteEmrNote(System.String,System.Xml.XmlNode,System.String):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DisposeObjectsBeforeLosingScope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="469">Modify emrServiceXml.DeleteEmrNote(String, XmlNode, String):Boolean to dispose local 'myCommand' of type 'SqlCommand' for all code paths.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="475">Modify 'emrServiceXml.DeleteEmrNote(String, XmlNode, String):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="457">Modify member 'emrServiceXml.DeleteEmrNote(String, XmlNode, String):Boolean' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="469">Review if the query string "DELETE FROM EmrNote WHERE RegistryID='____' AND NoteIDSeries='____'", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.DeleteEmrNote(String, XmlNode, String):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="466">Review if the query string "UPDATE EmrDocument SET Document='____' WHERE RegistryID='____'", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.DeleteEmrNote(String, XmlNode, String):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="457">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'registryID' by changing it to 'Id'.</Issue>
            </Message>
            <Message Id="2#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="457">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'noteIDSeries' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="DeletePicture(System.String,System.String):System.Void" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1460">Modify 'emrServiceXml.DeletePicture(String, String):Void' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1455">Review if the query string "DELETE FROM PicGallery WHERE PicName='____' and DepartmentCode='____'", passed to SqlDataAdapter.SqlDataAdapter(String, SqlConnection) in emrServiceXml.DeletePicture(String, String):Void, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1456">Be sure to set the DataSet Locale property wherever 'emrServiceXml.DeletePicture(String, String):Void' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="DepartTemplate(System.Xml.XmlNode&amp;,System.String):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="697">Consider a design that does not require that 'noteTemplate' be a reference parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="EmrDecoder(System.Byte[],System.Byte[]&amp;):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1930">Consider a design that does not require that 'outdata' be a reference parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="EmrEncoder(System.Byte[],System.Byte[]&amp;):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1911">Consider a design that does not require that 'outdata' be a reference parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="ErrorLog(System.String,System.String,System.String,System.String):System.Void" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="op" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="106">Parameter 'op' of emrServiceXml.ErrorLog(String, String, String, String):Void is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="ExportEmrBlocks(System.Xml.XmlNode&amp;):System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1364">Modify 'emrServiceXml.ExportEmrBlocks(XmlNode&amp;):String' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1330">Consider a design that does not require that 'emrBlocks' be a reference parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="ExportNotePhrases(System.Xml.XmlNode&amp;):System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1593">Modify 'emrServiceXml.ExportNotePhrases(XmlNode&amp;):String' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1568">Consider a design that does not require that 'notePhrasesSet' be a reference parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="FromString(System.String):System.Byte[]" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToChar(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1852">emrServiceXml.FromString(String):Byte[] makes a call to System.Convert.ToChar(System.String) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToChar(System.String,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetComponet(System.String,System.Xml.XmlNode&amp;):System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="2148">Modify 'emrServiceXml.GetComponet(String, XmlNode&amp;):String' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="2125">Consider a design that does not require that 'component' be a reference parameter.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="2132">Review if the query string "SELECT component FROM Version WHERE Name = '____'", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.GetComponet(String, XmlNode&amp;):String, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetDocument(System.String,System.Data.SqlClient.SqlConnection,System.Xml.XmlNode&amp;):System.Boolean" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DisposeObjectsBeforeLosingScope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1729">Modify emrServiceXml.GetDocument(String, SqlConnection, XmlNode&amp;):Boolean to dispose local 'myCommand' of type 'SqlCommand' for all code paths.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1716">Review if the query string "SELECT Document FROM EmrDocument WHERE RegistryID='____'", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.GetDocument(String, SqlConnection, XmlNode&amp;):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetEmrBlock(System.Int32,System.Xml.XmlNode&amp;):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1322">Modify 'emrServiceXml.GetEmrBlock(Int32, XmlNode&amp;):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1297">Consider a design that does not require that 'emrBlock' be a reference parameter.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1304">Review if the query string "SELECT CONVERT(xml, Blocks) FROM EmrBlocks WHERE pk='____'", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.GetEmrBlock(Int32, XmlNode&amp;):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetEmrBlockKeys(System.String,System.Xml.XmlNode&amp;):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1289">Modify 'emrServiceXml.GetEmrBlockKeys(String, XmlNode&amp;):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1264">Consider a design that does not require that 'blockKeys' be a reference parameter.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1271">Review if the query string "SELECT pk FROM EmrBlocks WHERE DepartmentCode='____'", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.GetEmrBlockKeys(String, XmlNode&amp;):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetEmrBlocksForOneDepartment(System.String,System.Xml.XmlNode&amp;):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1256">Modify 'emrServiceXml.GetEmrBlocksForOneDepartment(String, XmlNode&amp;):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1229">Consider a design that does not require that 'emrBlocks' be a reference parameter.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1236">Review if the query string "SELECT CONVERT(xml, Blocks) FROM EmrBlocks WHERE DepartmentCode='____'", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.GetEmrBlocksForOneDepartment(String, XmlNode&amp;):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetEmrDocument(System.String,System.Xml.XmlNode&amp;,System.Xml.XmlNode&amp;):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="270">Modify 'emrServiceXml.GetEmrDocument(String, XmlNode&amp;, XmlNode&amp;):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="258">Consider a design that does not require that 'root' be a reference parameter.</Issue>
            </Message>
            <Message Id="2#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="258">Consider a design that does not require that 'emrNotes' be a reference parameter.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="266">Review if the query string "SELECT CONVERT(xml, document), status FROM Emrdocument WHERE RegistryID = '____ '", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.GetEmrDocument(String, XmlNode&amp;, XmlNode&amp;):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="258">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'registryID' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetEmrDocumentWithoutNote(System.String,System.Xml.XmlNode&amp;):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DisposeObjectsBeforeLosingScope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="393">Modify emrServiceXml.GetEmrDocumentWithoutNote(String, XmlNode&amp;):Boolean to dispose local 'myCommand' of type 'SqlCommand' for all code paths.</Issue>
            </Message>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="372">Consider a design that does not require that 'emr' be a reference parameter.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="379">Review if the query string "SELECT Document FROM EmrDocument WHERE RegistryID='____'", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.GetEmrDocumentWithoutNote(String, XmlNode&amp;):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="372">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'registryID' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetEmrNotes(System.String,System.Xml.XmlNode):System.Boolean" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="47">Modify 'emrServiceXml.GetEmrNotes(String, XmlNode):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="43">Review if the query string "SELECT NoteIDSeries, CONVERT(xml, NoteDocument) FROM EmrNote WHERE RegistryID = '____ '", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.GetEmrNotes(String, XmlNode):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetEmrPattern(System.String,System.Xml.XmlNode&amp;):System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="827">Modify 'emrServiceXml.GetEmrPattern(String, XmlNode&amp;):String' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="797">Consider a design that does not require that 'emrPattern' be a reference parameter.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="805">Review if the query string "SELECT CONVERT(xml, Pattern) FROM EmrPattern WHERE DepartmentCode='____'", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.GetEmrPattern(String, XmlNode&amp;):String, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetKeyAndIV(System.Xml.XmlNode,System.Byte[]&amp;,System.Byte[]&amp;):System.Boolean" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToByte(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1813">emrServiceXml.GetKeyAndIV(XmlNode, Byte[]&amp;, Byte[]&amp;):Boolean makes a call to System.Convert.ToByte(System.String) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToByte(System.String,System.IFormatProvider).</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1819">emrServiceXml.GetKeyAndIV(XmlNode, Byte[]&amp;, Byte[]&amp;):Boolean makes a call to System.Convert.ToByte(System.String) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToByte(System.String,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetLastError():System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="226">Change 'GetLastError' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetLastWriteTime(System.Xml.XmlNode,System.Xml.XmlNode&amp;):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DisposeObjectsBeforeLosingScope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1711">Modify emrServiceXml.GetLastWriteTime(XmlNode, XmlNode&amp;):Boolean to dispose local 'connection' of type 'SqlConnection' for all code paths.</Issue>
            </Message>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1663">Consider a design that does not require that 'outEmrs' be a reference parameter.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1663">Modify member 'emrServiceXml.GetLastWriteTime(XmlNode, XmlNode&amp;):Boolean' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt64(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1676">emrServiceXml.GetLastWriteTime(XmlNode, XmlNode&amp;):Boolean makes a call to System.Convert.ToInt64(System.String) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToInt64(System.String,System.IFormatProvider).</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1681">emrServiceXml.GetLastWriteTime(XmlNode, XmlNode&amp;):Boolean makes a call to System.Convert.ToInt64(System.String) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToInt64(System.String,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetLowers(System.String,System.String[]&amp;):System.Int32" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="566">Consider a design that does not require that 'lowers' be a reference parameter.</Issue>
            </Message>
            <Message Id="lowers" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="566">Parameter 'lowers' of emrServiceXml.GetLowers(String, String[]&amp;):Int32 is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="upper" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="566">Parameter 'upper' of emrServiceXml.GetLowers(String, String[]&amp;):Int32 is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetNotePhrases(System.String,System.String,System.Xml.XmlNode&amp;):System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1559">Modify 'emrServiceXml.GetNotePhrases(String, String, XmlNode&amp;):String' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="2#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1538">Consider a design that does not require that 'emrPhrases' be a reference parameter.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1546">Review if the query string "SELECT Phrases FROM NotePhrase WHERE DepartmentCode='____' AND DoctorID='____'", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.GetNotePhrases(String, String, XmlNode&amp;):String, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message Id="1#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1538">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'doctorID' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetPassword(System.String&amp;):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1867">Consider a design that does not require that 'passwd' be a reference parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetPictures(System.String):System.Xml.XmlNode" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1435">Modify 'emrServiceXml.GetPictures(String):XmlNode' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="DoNotConcatenateStringsInsideLoops" Category="Microsoft.Performance" CheckId="CA1818" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1424">Change emrServiceXml.GetPictures(String):XmlNode to use StringBuilder instead of String.Concat or +=</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1408">Modify member 'emrServiceXml.GetPictures(String):XmlNode' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1415">Review if the query string "SELECT CONVERT(xml, Picture) FROM PicGallery WHERE DepartmentCode='____'", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.GetPictures(String):XmlNode, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetSecurityConfig(System.Xml.XmlNode&amp;):System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1802">Modify 'emrServiceXml.GetSecurityConfig(XmlNode&amp;):String' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1779">Consider a design that does not require that 'content' be a reference parameter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GrantReaderForRegistry(GrantReader):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1962">Modify 'emrServiceXml.GrantReaderForRegistry(GrantReader):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1956">Review if the query string "INSERT INTO GrantReader VALUES( '____','____','____','____')", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.GrantReaderForRegistry(GrantReader):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="HavePrivilegeForRegistry(System.String,System.String):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="2003">Modify 'emrServiceXml.HavePrivilegeForRegistry(String, String):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1979">Review if the query string "SELECT StartDate, Expiration FROM GrantReader WHERE RegistryID='____' AND DoctorID='____'", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.HavePrivilegeForRegistry(String, String):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1972">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'registryID' by changing it to 'Id'.</Issue>
            </Message>
            <Message Id="1#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1972">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'doctorID' by changing it to 'Id'.</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1987">emrServiceXml.HavePrivilegeForRegistry(String, String):Boolean makes a call to System.Convert.ToDateTime(System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToDateTime(System.Object,System.IFormatProvider).</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1988">emrServiceXml.HavePrivilegeForRegistry(String, String):Boolean makes a call to System.Convert.ToInt32(System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToInt32(System.Object,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="InsertEmrDocument(System.String,System.String,System.Xml.XmlNode,System.Int32,System.String,System.Xml.XmlNode):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="314">Modify 'emrServiceXml.InsertEmrDocument(String, String, XmlNode, Int32, String, XmlNode):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="298">Modify member 'emrServiceXml.InsertEmrDocument(String, String, XmlNode, Int32, String, XmlNode):Boolean' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="298">Modify member 'emrServiceXml.InsertEmrDocument(String, String, XmlNode, Int32, String, XmlNode):Boolean' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="310">Review if the query string "INSERT EmrDocument (RegistryID, ArchiveNum, Document, Status) VALUES( '____ ','____ ','____ ','____ ')", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.InsertEmrDocument(String, String, XmlNode, Int32, String, XmlNode):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="298">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'registryID' by changing it to 'Id'.</Issue>
            </Message>
            <Message Id="4#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="298">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'noteIDSeries' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="InsertEmrNote(System.String,System.String,System.Xml.XmlNode):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="338">Modify 'emrServiceXml.InsertEmrNote(String, String, XmlNode):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="326">Modify member 'emrServiceXml.InsertEmrNote(String, String, XmlNode):Boolean' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="333">Review if the query string "INSERT EmrNote (RegistryID, NoteIDSeries, NoteDocument) VALUES( '____ ','____ ','____ ')", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.InsertEmrNote(String, String, XmlNode):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="326">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'registryID' by changing it to 'Id'.</Issue>
            </Message>
            <Message Id="1#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="326">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'noteIDSeries' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="IsTruster(System.String,System.String):System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="2041">Review if the query string "SELECT Deputed, EndTime FROM Trust WHERE EndTime=(SELECT MAX(EndTime) AS maxTime FROM Trust AS Trust1 WHERE deputing='____' )", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.IsTruster(String, String):String, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="MakeArchiveNum():System.String" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int64.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="29">emrServiceXml.MakeArchiveNum():String makes a call to System.Int64.ToString(System.String) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Int64.ToString(System.String,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="NewNoteTemplate(System.String,System.String,System.Xml.XmlNode):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="634">Modify 'emrServiceXml.NewNoteTemplate(String, String, XmlNode):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="623">Modify member 'emrServiceXml.NewNoteTemplate(String, String, XmlNode):Boolean' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="629">Review if the query string " INSERT NoteTemplate  (DoctorID ,Note,DepartmentCode) VALUES( '____',cast('____ ' as xml ) ,'____ ')", passed to SqlDataAdapter.SqlDataAdapter(String, SqlConnection) in emrServiceXml.NewNoteTemplate(String, String, XmlNode):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="630">Be sure to set the DataSet Locale property wherever 'emrServiceXml.NewNoteTemplate(String, String, XmlNode):Boolean' creates an instance of that type.</Issue>
            </Message>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="623">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'doctorID' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="OperateTemplate(System.String,System.Xml.XmlNode&amp;,System.String,System.String):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="776">Modify 'emrServiceXml.OperateTemplate(String, XmlNode&amp;, String, String):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="DoNotConcatenateStringsInsideLoops" Category="Microsoft.Performance" CheckId="CA1818" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="765">Change emrServiceXml.OperateTemplate(String, XmlNode&amp;, String, String):Boolean to use StringBuilder instead of String.Concat or +=</Issue>
            </Message>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="729">Consider a design that does not require that 'TemplateNode' be a reference parameter.</Issue>
            </Message>
            <Message Id="1#" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="729">Correct the casing of parameter name 'TemplateNode'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="PersonNoteTemplate(System.Xml.XmlNode&amp;,System.String):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="716">Consider a design that does not require that 'noteTemplate' be a reference parameter.</Issue>
            </Message>
            <Message Id="1#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="716">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'doctorID' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="PutEmrDocument(System.String,System.String,System.Xml.XmlNode,System.Int32,System.String,System.Xml.XmlNode):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="398">Modify member 'emrServiceXml.PutEmrDocument(String, String, XmlNode, Int32, String, XmlNode):Boolean' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="398">Modify member 'emrServiceXml.PutEmrDocument(String, String, XmlNode, Int32, String, XmlNode):Boolean' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="398">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'registryID' by changing it to 'Id'.</Issue>
            </Message>
            <Message Id="4#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="398">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'noteIDSeries' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="PutRelationship(System.String,System.String[],System.String):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="opcode" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="548">Parameter 'opcode' of emrServiceXml.PutRelationship(String, String[], String):Boolean is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="upper" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="548">Parameter 'upper' of emrServiceXml.PutRelationship(String, String[], String):Boolean is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="RemoveEmrNoteFromPatterns(System.String,System.String):System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="969">Modify 'emrServiceXml.RemoveEmrNoteFromPatterns(String, String):String' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="1#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="921">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'noteID' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="RemoveNoteTemplate(System.Int64):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="680">Modify 'emrServiceXml.RemoveNoteTemplate(Int64):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="675">Review if the query string "delete from NoteTemplate where pk =  '____'", passed to SqlDataAdapter.SqlDataAdapter(String, SqlConnection) in emrServiceXml.RemoveNoteTemplate(Int64):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="676">Be sure to set the DataSet Locale property wherever 'emrServiceXml.RemoveNoteTemplate(Int64):Boolean' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="ReplaceEmrNoteInPatternForOneDepartment(System.String,System.String,System.Xml.XmlNode):System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1012">Modify member 'emrServiceXml.ReplaceEmrNoteInPatternForOneDepartment(String, String, XmlNode):String' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="ReplaceEmrNoteInPatterns(System.String,System.Xml.XmlNode):System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1005">Modify 'emrServiceXml.ReplaceEmrNoteInPatterns(String, XmlNode):String' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="976">Modify member 'emrServiceXml.ReplaceEmrNoteInPatterns(String, XmlNode):String' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="SyncEmrDocument(System.String,System.Xml.XmlNode):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="500">Modify 'emrServiceXml.SyncEmrDocument(String, XmlNode):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="484">Modify member 'emrServiceXml.SyncEmrDocument(String, XmlNode):Boolean' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="493">Review if the query string "UPDATE EmrDocument SET Document = '____' WHERE RegistryID = '____'", passed to SqlDataAdapter.SqlDataAdapter(String, SqlConnection) in emrServiceXml.SyncEmrDocument(String, XmlNode):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="494">Be sure to set the DataSet Locale property wherever 'emrServiceXml.SyncEmrDocument(String, XmlNode):Boolean' creates an instance of that type.</Issue>
            </Message>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="484">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'registryID' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="SysTime():System.DateTime" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DisposeObjectsBeforeLosingScope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="88">Modify emrServiceXml.SysTime():DateTime to dispose local 'command' of type 'SqlCommand' for all code paths.</Issue>
            </Message>
            <Message Id="System.Convert.ToDateTime(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="81">emrServiceXml.SysTime():DateTime makes a call to System.Convert.ToDateTime(System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToDateTime(System.Object,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="Test(System.String):System.Xml.XmlNode" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="2206">Modify member 'emrServiceXml.Test(String):XmlNode' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="ToString(System.Byte[]):System.String" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotConcatenateStringsInsideLoops" Category="Microsoft.Performance" CheckId="CA1818" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1860">Change emrServiceXml.ToString(Byte[]):String to use StringBuilder instead of String.Concat or +=</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="UpdateConfigure(EmrConstant.ConfigureMode,System.String):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="value" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="517">Parameter 'value' of emrServiceXml.UpdateConfigure(ConfigureMode, String):Boolean is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="UpdateEmrBlock(System.Int32,System.Xml.XmlNode):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1195">Modify 'emrServiceXml.UpdateEmrBlock(Int32, XmlNode):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1181">Modify member 'emrServiceXml.UpdateEmrBlock(Int32, XmlNode):Boolean' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1188">Review if the query string "UPDATE EmrBlocks SET  Blocks = '____' WHERE pk = '____'", passed to SqlDataAdapter.SqlDataAdapter(String, SqlConnection) in emrServiceXml.UpdateEmrBlock(Int32, XmlNode):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1189">Be sure to set the DataSet Locale property wherever 'emrServiceXml.UpdateEmrBlock(Int32, XmlNode):Boolean' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="UpdateEmrDocument(System.String,System.Xml.XmlNode,System.Int32,System.String,System.Xml.XmlNode):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="419">Modify 'emrServiceXml.UpdateEmrDocument(String, XmlNode, Int32, String, XmlNode):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="406">Modify member 'emrServiceXml.UpdateEmrDocument(String, XmlNode, Int32, String, XmlNode):Boolean' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="406">Modify member 'emrServiceXml.UpdateEmrDocument(String, XmlNode, Int32, String, XmlNode):Boolean' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="415">Review if the query string "UPDATE EmrDocument SET Document =  cast('____ ' as xml ) ,Status = '____' WHERE RegistryID = '____'", passed to SqlDataAdapter.SqlDataAdapter(String, SqlConnection) in emrServiceXml.UpdateEmrDocument(String, XmlNode, Int32, String, XmlNode):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="416">Be sure to set the DataSet Locale property wherever 'emrServiceXml.UpdateEmrDocument(String, XmlNode, Int32, String, XmlNode):Boolean' creates an instance of that type.</Issue>
            </Message>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="406">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'registryID' by changing it to 'Id'.</Issue>
            </Message>
            <Message Id="3#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="406">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'noteIDSeries' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="UpdateEmrNote(System.String,System.String,System.Xml.XmlNode):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="446">Modify 'emrServiceXml.UpdateEmrNote(String, String, XmlNode):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="432">Modify member 'emrServiceXml.UpdateEmrNote(String, String, XmlNode):Boolean' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="439">Review if the query string "UPDATE EmrNote SET NoteDocument =  cast('____ ' as xml ) WHERE RegistryID = '____' AND NoteIDSeries = '____'", passed to SqlDataAdapter.SqlDataAdapter(String, SqlConnection) in emrServiceXml.UpdateEmrNote(String, String, XmlNode):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="440">Be sure to set the DataSet Locale property wherever 'emrServiceXml.UpdateEmrNote(String, String, XmlNode):Boolean' creates an instance of that type.</Issue>
            </Message>
            <Message Id="0#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="432">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'registryID' by changing it to 'Id'.</Issue>
            </Message>
            <Message Id="1#" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="ParameterId" Certainty="85" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="432">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in parameter name 'noteIDSeries' by changing it to 'Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="UpdateNoteTemplate(System.Int64,System.Xml.XmlNode):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="655">Modify 'emrServiceXml.UpdateNoteTemplate(Int64, XmlNode):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="644">Modify member 'emrServiceXml.UpdateNoteTemplate(Int64, XmlNode):Boolean' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="650">Review if the query string "UPDATE NoteTemplate SET Note =  cast('____ ' as xml )  WHERE pk = '____'", passed to SqlDataAdapter.SqlDataAdapter(String, SqlConnection) in emrServiceXml.UpdateNoteTemplate(Int64, XmlNode):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="651">Be sure to set the DataSet Locale property wherever 'emrServiceXml.UpdateNoteTemplate(Int64, XmlNode):Boolean' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="UpdateRelationship(System.String,System.String[],System.String):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="opcode" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="582">Parameter 'opcode' of emrServiceXml.UpdateRelationship(String, String[], String):Boolean is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="upper" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="582">Parameter 'upper' of emrServiceXml.UpdateRelationship(String, String[], String):Boolean is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="UpdateSecuriy(System.Xml.XmlNode):System.Boolean" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1769">Modify 'emrServiceXml.UpdateSecuriy(XmlNode):Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1734">Modify member 'emrServiceXml.UpdateSecuriy(XmlNode):Boolean' so that it no longer exposes the concrete type System.Xml.XmlNode. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
            <Message TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1754">Review if the query string "INSERT INTO Security (Config) VALUES( '____')", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.UpdateSecuriy(XmlNode):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
             <Issue Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1761">Review if the query string "UPDATE Security SET Config = '____'", passed to SqlCommand.SqlCommand(String, SqlConnection) in emrServiceXml.UpdateSecuriy(XmlNode):Boolean, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt16(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="emrServiceXml.cs" Line="1749">emrServiceXml.UpdateSecuriy(XmlNode):Boolean makes a call to System.Convert.ToInt16(System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Convert.ToInt16(System.Object,System.IFormatProvider).</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GrantReader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="DeclareTypesInNamespaces" Category="Microsoft.Design" CheckId="CA1050" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">'GrantReader' should be declared inside a namespace.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="doctorID" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Make 'doctorID' private or internal (Friend in VB, public private in C++) and provide a public or protected property to access it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="expiration" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Make 'expiration' private or internal (Friend in VB, public private in C++) and provide a public or protected property to access it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="registryID" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Make 'registryID' private or internal (Friend in VB, public private in C++) and provide a public or protected property to access it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="startDate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Make 'startDate' private or internal (Friend in VB, public private in C++) and provide a public or protected property to access it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="AboutConfig">
       <Types>
        <Type Name="ConfigClass" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Remove the public constructors from 'ConfigClass'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="GetConfigDecimal(System.String,System.String):System.Decimal" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="81">Correct the casing of parameter name 'SectionName'.</Issue>
            </Message>
            <Message Id="System.Decimal.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="86">ConfigClass.GetConfigDecimal(String, String):Decimal makes a call to System.Decimal.Parse(System.String) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Decimal.Parse(System.String,System.IFormatProvider).</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="84">Replace the call to String.op_Inequality(String.Empty) in 'ConfigClass.GetConfigDecimal(String, String):Decimal' with a call to String.IsNullOrEmpty.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="getConfigFilePath():System.String" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Member" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="190">Correct the casing of member name 'getConfigFilePath'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetConfigInt(System.String,System.String):System.Int32" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="97">Correct the casing of parameter name 'SectionName'.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="102">ConfigClass.GetConfigInt(String, String):Int32 makes a call to System.Int32.Parse(System.String) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Int32.Parse(System.String,System.IFormatProvider).</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="100">Replace the call to String.op_Inequality(String.Empty) in 'ConfigClass.GetConfigInt(String, String):Int32' with a call to String.IsNullOrEmpty.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="GetConfigString(System.String,System.String):System.String" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Exception.#ctor(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="66">ConfigClass.GetConfigString(String, String):String passes a literal as parameter 1 of a call to Exception.Exception(String). Retrieve the following string argument from a resource table instead: 'in web.config do not discover config:"____"'</Issue>
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="51">ConfigClass.GetConfigString(String, String):String passes a literal as parameter 1 of a call to Exception.Exception(String). Retrieve the following string argument from a resource table instead: 'in web.config do not discover config:"____"'</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="51">ConfigClass.GetConfigString(String, String):String creates an exception of type 'System.Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="66">ConfigClass.GetConfigString(String, String):String creates an exception of type 'System.Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="0#" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="44">Correct the casing of parameter name 'SectionName'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="46">Replace the call to String.op_Equality("") in 'ConfigClass.GetConfigString(String, String):String' with a call to String.IsNullOrEmpty.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="49">Replace the call to String.op_Equality("") in 'ConfigClass.GetConfigString(String, String):String' with a call to String.IsNullOrEmpty.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="64">Replace the call to String.op_Equality("") in 'ConfigClass.GetConfigString(String, String):String' with a call to String.IsNullOrEmpty.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="LoadConfigDocument():System.Xml.XmlDocument" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Exception.#ctor(System.String,System.Exception)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="182">ConfigClass.LoadConfigDocument():XmlDocument passes a literal as parameter 1 of a call to Exception.Exception(String, Exception). Retrieve the following string argument from a resource table instead: 'no file'</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="182">ConfigClass.LoadConfigDocument():XmlDocument creates an exception of type 'System.Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="System.Xml.XmlNode" TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="System.Xml.XmlNode" Certainty="75" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="171">Modify member 'ConfigClass.LoadConfigDocument():XmlDocument' so that it no longer exposes the concrete type System.Xml.XmlDocument. Use IXPathNavigable to represent Xml data sources.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="RemoveSectionKey(System.String,System.String):System.Void" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="143">Correct the casing of parameter name 'SectionName'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="151">ConfigClass.RemoveSectionKey(String, String):Void makes a call to System.String.Format(System.String,System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.String.Format(System.IFormatProvider,System.String,System.Object[]).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="SetConfigKeyValue(System.String,System.String,System.String):System.Void" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="111">Correct the casing of parameter name 'SectionName'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2008-02-19 01:18:08Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\emrWebService\emrService\App_Code" File="ConfigClass.cs" Line="119">ConfigClass.SetConfigKeyValue(String, String, String):Void makes a call to System.String.Format(System.String,System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.String.Format(System.IFormatProvider,System.String,System.Object[]).</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502">
   <Name>Avoid excessive complexity</Name>
   <Description>Method implementations that are exceedingly complex increase the challenge of understanding and maintaining code.</Description>
   <Resolution Name="Default">{0} has a cyclomatic complexity of {1}. Rewrite or refactor the method to reduce complexity to {2}.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="MaintainabilityRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the FxCop team.</Description>
   <Resolution Name="Default">'{0}' appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the FxCop team.</Description>
   <Resolution Name="Default">It appears that field '{0}' is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="DeclareTypesInNamespaces" Category="Microsoft.Design" CheckId="CA1050">
   <Name>Declare types in namespaces</Name>
   <Description>A type should be defined inside a namespace to avoid duplication.</Description>
   <Resolution Name="Default">'{0}' should be declared inside a namespace.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="DisposeObjectsBeforeLosingScope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not disposed before all references to it are out of scope, the object will not be disposed until it is finalized. If the AppDomain is abruptly brought down, it is possible the object will not be finalized and therefore never disposed.</Description>
   <Resolution Name="Default">Modify {0} to dispose local {1} of type '{2}' for all code paths.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="ReliabilityRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify '{0}' to catch a more specific exception than '{1}' or rethrow the exception.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="DesignRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotConcatenateStringsInsideLoops" Category="Microsoft.Performance" CheckId="CA1818">
   <Name>Do not concatenate strings inside loops</Name>
   <Description>Use StringBuilder instead.</Description>
   <Resolution Name="Default">Change {0} to use StringBuilder instead of String.Concat or +=</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="PerformanceRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Public or protected instance fields limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the  implementation details of the underlying data.</Description>
   <Resolution Name="Default">Make '{0}' private or internal (Friend in VB, public private in C++) and provide a public or protected property to access it.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>String literals that are embedded in source code are difficult to localize. Avoid passing string literals as arguments in circumstances where a localized string is generally expected. Most localized applications, for example, should localize string arguments that are passed to exception constructors. When creating an Exception instance, therefore, a string argument retrieved from a string table is more appropriate than a string literal.</Description>
   <Resolution Name="Default">{0} passes a literal as parameter {1} of a call to {2}. Retrieve the following string argument from a resource table instead: '{3}'</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045">
   <Name>Do not pass types by reference</Name>
   <Description>Although there are legitimate times to use reference parameters, such use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that '{0}' be a reference parameter.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
   <Name>Do not raise reserved exception types</Name>
   <Description>User code should not create and raise exceptions of certain types that are reserved by the runtime or which are of a too general exception type. Exception types that are too general include Exception, SystemException, and ApplicationException. Exception types that are reserved by the runtime include ThreadAbortException, OutOfMemoryException, ExecutionEngineException, and IndexOutOfRangeException.</Description>
   <Resolution Name="TooGeneric">{0} creates an exception of type '{1}', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="UsageRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are pascal-cased. Parameter identifiers are camel-cased. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor.</Description>
   <Resolution Name="Member">Correct the casing of member name '{0}'.</Resolution>
   <Resolution Name="Parameter">Correct the casing of parameter name '{0}'.</Resolution>
   <Resolution Name="Type">Correct the casing of type name '{0}'.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="LongAcronymsShouldBePascalCased" Category="Microsoft.Naming" CheckId="CA1705">
   <Name>Long acronyms should be pascal-cased</Name>
   <Description>Acronyms of three or more letters should be Pascal-cased. For example, use XmlSpace rather than XMLSpace. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Parameter">Correct the capitalization of parameter name '{0}'.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="MembersShouldNotExposeCertainConcreteTypes" Category="Microsoft.Design" CheckId="CA1059">
   <Name>Members should not expose certain concrete types</Name>
   <Description>Members should not expose certain concrete types.</Description>
   <Resolution Name="System.Xml.XmlNode">Modify member '{0}' so that it no longer exposes the concrete type {1}. Use IXPathNavigable to represent Xml data sources.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
   <Name>Move pinvokes to native methods class</Name>
   <Description>This type contains members with the DllImport attribute. Members with the DllImport attribute should be contained in classes named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Description>
   <Resolution Name="Default">Because it is a DllImport method, {0} should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="DesignRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401">
   <Name>PInvokes should not be visible</Name>
   <Description>Interop layer should not be public. The DllImport attribute should not be applied to publicly accessible members (public or protected).</Description>
   <Resolution Name="Default">Change the accessibility of DllImport '{0}' so that it is no longer visible from outside its assembly.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="50">CriticalError</MessageLevel>
   <File Name="InteroperabilityRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewSqlQueriesForSecurityVulnerabilities" Category="Microsoft.Security" CheckId="CA2100">
   <Name>Review sql queries for security vulnerabilities</Name>
   <Description>Sql queries built up from user input are potentially vulnerable to injection attacks. Sql Server as well as other database servers support parameterized Sql queries, a feature that will reduce the risk for injection attacks.</Description>
   <Resolution Name="Default">Review if the query string "{0}", passed to {1} in {2}, accepts any user input. If so, consider using a parameterized Sql query instead of building up the query via string concatenations.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="SecurityRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to insure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter '{0}' of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="UsageRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306">
   <Name>Set locale for data types</Name>
   <Description>In most cases, Locale should be explicitly set to CultureInfo.InvariantCulture on DataSet and DataTable instances. Upon creation of a DataSet or DataTable instance, the Locale is set to the current culture. In most cases, the Locale should be set to CultureInfo.InvariantCulture to guarantee proper sorting behavior in all cultures.</Description>
   <Resolution Name="Default">Be sure to set the {0} Locale property wherever '{1}' creates an instance of that type.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706">
   <Name>Short acronyms should be uppercase</Name>
   <Description>Two letter acronyms should be upper-cased. For example, use System.IO instead of System.Io. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Member">Correct the capitalization of '{0}' in member name '{1}'.</Resolution>
   <Resolution Name="MemberId">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of 'ID' in member name '{0}' by changing it to 'Id'.</Resolution>
   <Resolution Name="Parameter">Correct the capitalization of '{0}' in parameter name '{1}'.</Resolution>
   <Resolution Name="ParameterId">'Id' is an abbreviation and therefore is not subject to acronym casing guidelines. Correct the capitalization of '{0}' in parameter name '{1}' by changing it to '{2}'.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the common language runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture.</Description>
   <Resolution Name="Default">{0} makes a call to {1} that does not explicitly provide an IFormatProvider. This should be replaced with a call to {2}.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
   <Name>Static holder types should not have constructors</Name>
   <Description>Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified.  To prevent this, adding an empty private constructor may be required.</Description>
   <Resolution Name="Default">Remove the public constructors from '{0}'.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>Test for empty strings using string length</Name>
   <Description>To test for empty strings, check if String.Length is equal to zero. Constructs such as "".Equals(someString) and String.Empty.Equals(someString) are less efficient than testing the string length. Replace these with checks for someString.Length == 0.</Description>
   <Resolution Name="IsNullOrEmpty">Replace the call to String.{0}({1}) in '{2}' with a call to String.IsNullOrEmpty.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change '{0}' to a property if appropriate.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500">
   <Name>Variable names should not match field names</Name>
   <Description>Instance field and variable names should not be identical within the same scope.</Description>
   <Resolution Name="Local">'{0}', a local declared in {1}, has the same name as an instance field on the type. Change the name of one of these items.</Resolution>
   <Resolution Name="Parameter">'{0}', a parameter declared in {1}, has the same name as an instance field on the type. Change the name of one of these items.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="MaintainabilityRules.dll" Version="8.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="Line">Line</String>
  <String Key="LocationNotStoredInPdb">&lt;Location not stored in Pdb&gt;</String>
  <String Key="Project">Project</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Microsoft Visual Studio 2005 Code Analysis Report</String>
 </Localized>
</FxCopReport>
